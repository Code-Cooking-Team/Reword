{"version":3,"sources":["styles/colors.ts","styles/shadow.ts","components/Icon/icons/home.tsx","components/Icon/icons/play.tsx","components/Icon/icons/plus.tsx","components/Icon/icons/profile.tsx","components/Icon/icons/words.tsx","components/Icon/Icon.tsx","store/types/RouteName.ts","components/Nav/Nav.tsx","styles/transitions.ts","components/Keyboard/getKeysForWord.tsx","components/Keyboard/Key.tsx","components/Keyboard/Keyboard.tsx","components/Typewriter/Pipe.tsx","components/Typewriter/Typewriter.tsx","store/state/helpers/reducerLogger.ts","store/state/initialState.ts","store/state/store.ts","store/state/reducer.ts","store/useRouter.ts","store/useWords.ts","screens/Game/Game.tsx","components/Logo/Logo.tsx","screens/Home/StartButton.tsx","screens/Home/Home.tsx","components/Header/Header.tsx","components/Input/Input.tsx","store/firebase.ts","components/Button/Button.tsx","screens/Settings/Settings.tsx","components/FloatingButton/FloatingButton.tsx","styles/animations.ts","components/Modal/Modal.tsx","components/Search/Search.tsx","hooks/useDictionary/fetchDictionary.ts","hooks/useDictionary/useDictionary.ts","hooks/useDebounce.ts","screens/Words/WordsItem.tsx","screens/Words/Words.tsx","App.tsx","serviceWorker.ts","components/ErrorBoundary/ErrorBoundary.tsx","index.tsx","store/useWordsPersist.ts"],"names":["brand","white","muted","floatingShadow","home","size","react_default","a","createElement","width","height","viewBox","fillRule","clipRule","d","play","plus","profile","words","RouteName","sizes","normal","large","Icon","_ref","name","_ref$size","_ref$block","block","Container","icons","styled","div","_templateObject","p","Nav","prop","react","Nav_Container","NavButton","isActive","active","Home","onClick","onChange","Icon_Icon","Words","Settings","nav","Nav_templateObject","button","_templateObject2","props","activeCSS","inActiveCSS","css","_templateObject3","_templateObject4","special","KEYS","map","row","split","getKey","key","word","fakeKeys","random","seedRandom","visible","includes","Key","Key_Container","isSpace","symbol","esm","keyEventName","KEYPRESS","keyValue","onKeyHandle","Key_templateObject","highlight","Key_templateObject2","Keyboard","Keyboard_Container","originalWord","arguments","length","undefined","toLowerCase","k","getKeysForWord","i","Row","Key_Key","onPress","Keyboard_templateObject","Keyboard_templateObject2","Pipe","pipeSpring","useSpring","transform","from","PipeContainer","style","animated","span","Pipe_templateObject","reducerFunc","Typewriter","progress","typed","substr","Typewriter_Container","lib_default","widthOnly","maxFontSize","TypeWrapper","w","Segment","Pipe_Pipe","Letter","letterState","Typewriter_templateObject","Typewriter_templateObject2","Typewriter_templateObject3","Typewriter_templateObject4","initialState","loading","route","lastRoutes","createStore","state","action","type","Object","objectSpread","payload","concat","toConsumableArray","slice","id","uuid","filter","Error","console","log","GlobalStateProvider","dispatch","useGlobalState","useRouter","_useGlobalState","slicedToArray","setRoute","goBack","useWords","addWord","translation","example","removeWord","randomWord","Math","floor","Game_templateObject","Game_templateObject2","Bottom","Game_templateObject3","Complete","Game_templateObject4","Button","_templateObject5","Logo","reSpring","opacity","delay","wordSpring","Logo_Container","First","Logo_Pipe","Last","h1","Logo_templateObject","Logo_templateObject2","Logo_templateObject3","Logo_templateObject4","StartButton","CircleButton","Game","StartButton_templateObject","Home_templateObject","WordsCount","Home_templateObject2","Header","HeaderWrapper","iconName","title","children","header","Header_templateObject","Input","value","_props$type","placeholder","autoFocus","_useState","useState","_useState2","focus","setFocus","Label","LabelName","move","InputStyled","event","target","onFocus","onBlur","label","Input_templateObject","Input_templateObject2","input","Input_templateObject3","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Button_templateObject","FormWrapper","Settings_templateObject","FloatingButton","FloatingButton_Button","FloatingButton_templateObject","NAV_HEIGHT","easing","fadeUpKeyframes","keyframes","animations_templateObject","fadeDownKeyframes","animations_templateObject2","fadeInKeyframes","animations_templateObject3","fadeOutKeyframes","animations_templateObject4","fadeUpAnimation","animations_templateObject5","fadeDownAnimation","_templateObject6","fadeInAnimation","_templateObject8","fadeOutAnimation","_templateObject9","Modal","ReactDOM","createPortal","Transition","in","show","timeout","status","Fragment","ModalBox","footer","Overlay","close","modalRoot","document","getElementById","Modal_templateObject","_templateObject7","ENTERING","EXITING","EXITED","Modal_templateObject2","_templateObject10","Search","Search_Input","e","Search_templateObject","alphabet","cache","fetchDictionary","asyncToGenerator","regenerator_default","mark","_callee","letter","res","data","wrap","_context","prev","next","abrupt","fetch","sent","json","stop","_x","apply","this","useDictionary","query","currentQuery","setCurrentQuery","_useState3","_useState4","results","setResults","fn","ms","args","useEffect","handle","setTimeout","bind","clearTimeout","useDebounce","useMemo","list","item","startsWith","run","WordsItem","AutocompleteItem","Words_templateObject","screens","_screens","defineProperty","Home_Container","Logo_Logo","StartButton_StartButton","_useWords","search","setSearch","showModal","setShowModal","_useState5","_useState6","setWord","_useState7","_useState8","setTranslation","_useState9","_useState10","setExample","addNewWord","trim","getTrans","trans","t","texts","join","Header_Header","Search_Search","WordsItem_WordsItem","FloatingButton_FloatingButton","Modal_Modal","Input_Input","email","setEmail","password","setPassword","onSubmit","preventDefault","auth","createUserWithEmailAndPassword","catch","m","Button_Button","setProgress","wordRight","isComplete","handleNextWord","Game_Container","Game_Row","Typewriter_Typewriter","Keyboard_Keyboard","toLocaleLowerCase","Content","main","App_templateObject","NavContainer","App_templateObject2","Boolean","window","location","hostname","match","ErrorBoundary","_Component","_getPrototypeOf2","_this","classCallCheck","_len","Array","_key","possibleConstructorReturn","getPrototypeOf","call","error","eventId","handleReportDialog","Sentry","inherits","createClass","errorInfo","_this2","setState","scope","setExtras","JSON","stringify","Component","dsn","render","ErrorBoundary_ErrorBoundary","localStorage","setItem","getItem","wordsFromStorage","parse","useWordsPersist","_useRouter","Page","Nav_Nav","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d28d0446.chunk.js","sourcesContent":["export const brand = '#9438EA'\nexport const white = '#FFFFFF'\nexport const black = '#000000'\nexport const light = 'rgba(0, 0, 0, 0.1)'\nexport const muted = 'rgba(0, 0, 0, 0.3)'\nexport const gray = 'rgba(0, 0, 0, 0.6)'\nexport const good = '#AED900'\nexport const danger = '#EA388D'\n","export const barShadow = '0 0 10px rgba(0, 0, 0, 0.1)'\nexport const floatingShadow = '2px 2px 7px rgba(0, 0, 0, 0.1)'\n","import React from 'react'\n\nexport const home = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M5 12.5H2L12 3.5L22 12.5H19V20.5H13V14.5H11V20.5H5V12.5ZM17 10.69L12 6.19L7 10.69V18.5H9V12.5H15V18.5H17V10.69Z\"\n        />\n    </svg>\n)\n","import React from 'react'\n\nexport const play = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 61 61\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M44.4792 30.5L16.5208 48.2917V12.7083L44.4792 30.5ZM34.9988 30.5L21.6042 21.96V39.04L34.9988 30.5Z\"\n        />\n    </svg>\n)\n","import React from 'react'\n\nexport const plus = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path d=\"M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n    </svg>\n)\n","import React from 'react'\n\nexport const profile = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4ZM14 8C14 6.9 13.1 6 12 6C10.9 6 10 6.9 10 8C10 9.1 10.9 10 12 10C13.1 10 14 9.1 14 8ZM18 18C17.8 17.29 14.7 16 12 16C9.31 16 6.23 17.28 6 18H18ZM4 18C4 15.34 9.33 14 12 14C14.67 14 20 15.34 20 18V20H4V18Z\"\n        />\n    </svg>\n)\n","import React from 'react'\n\nexport const words = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12.87 15.07L10.33 12.56L10.36 12.53C12.1 10.59 13.34 8.36 14.07 6H17V4H10V2H8V4H1V5.99H12.17C11.5 7.92 10.44 9.75 9 11.35C8.07 10.32 7.3 9.19 6.69 8H4.69C5.42 9.63 6.42 11.17 7.67 12.56L2.58 17.58L4 19L9 14L12.11 17.11L12.87 15.07ZM18.5 10H16.5L12 22H14L15.12 19H19.87L21 22H23L18.5 10ZM17.5 12.67L15.88 17H19.12L17.5 12.67Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport * as icons from './icons'\n\nconst sizes = {\n    normal: 24,\n    large: 62,\n}\n\nexport type IconName = keyof typeof icons\nexport type IconSize = keyof typeof sizes\n\ntype IconProps = {\n    name: IconName\n    size?: IconSize\n    block?: boolean\n}\n\nexport const Icon = ({ name, size = 'normal', block = false }: IconProps) => (\n    <Container block={block}>{icons[name](sizes[size])}</Container>\n)\n\nconst Container = styled.div<{ block: boolean }>`\n    display: ${p => (p.block ? 'block' : 'inline-block')};\n    vertical-align: middle;\n    svg {\n        display: block;\n        margin: auto;\n        fill: currentColor;\n    }\n`\n","export enum RouteName {\n    Home = 'home',\n    Words = 'words',\n    Settings = 'settings',\n    Game = 'game',\n}\n","import * as React from 'react'\nimport styled, { css } from 'styled-components'\nimport { white, gray, brand } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { Icon } from '../Icon'\nimport { fast } from '../../styles/transitions'\nimport { RouteName } from '../../store/types/RouteName'\n\nexport const NAV_HEIGHT = 60\n\ntype NavProps = {\n    active: RouteName\n    onChange(page: RouteName): void\n}\n\nexport const Nav = (prop: NavProps) => {\n    return (\n        <Container>\n            <NavButton\n                isActive={prop.active === RouteName.Home}\n                onClick={() => prop.onChange(RouteName.Home)}\n            >\n                <Icon name=\"home\" block />\n                Home\n            </NavButton>\n            <NavButton\n                isActive={prop.active === RouteName.Words}\n                onClick={() => prop.onChange(RouteName.Words)}\n            >\n                <Icon name=\"words\" block />\n                Words\n            </NavButton>\n            <NavButton\n                isActive={prop.active === RouteName.Settings}\n                onClick={() => prop.onChange(RouteName.Settings)}\n            >\n                <Icon name=\"profile\" block />\n                Settings\n            </NavButton>\n        </Container>\n    )\n}\n\nconst Container = styled.nav`\n    background: ${white};\n    display: flex;\n    width: 100%;\n    min-height: ${NAV_HEIGHT}px;\n    justify-content: space-evenly;\n    box-shadow: ${barShadow};\n    overflow: hidden;\n`\n\nconst NavButton = styled.button<{ isActive: boolean }>`\n    color: ${props => (props.isActive ? brand : gray)};\n    display: block;\n    background: none;\n    border: none;\n    padding: 10px 25px;\n    position: relative;\n    line-height: 1.5em;\n    &::after {\n        content: '';\n        display: block;\n        border-radius: 100%;\n        height: 60px;\n        width: 60px;\n        position: absolute;\n        margin: auto;\n        top: -50px;\n        bottom: -50px;\n        left: -50px;\n        right: -50px;\n        ${props => (props.isActive ? activeCSS : inActiveCSS)};\n    }\n    &:active::after {\n        transition: opacity 0.6s ease-out, background 0.6s ease-out, transform 1s ease-out;\n        opacity: 0.1;\n        transform: scale(1.2);\n        background: ${brand};\n    }\n`\n\nconst activeCSS = css`\n    transition: all ${fast};\n    opacity: 0;\n    transform: scale(2);\n    background: ${brand};\n`\n\nconst inActiveCSS = css`\n    transition: all 0 ease;\n    opacity: 0.3;\n    transform: scale(1);\n    background: rgba(255, 255, 255, 0);\n`\n","export const fast = '0.2s ease'\n","import seedRandom from 'seed-random'\n\nconst special = \"' ,\"\n\nconst KEYS = ['qwertyuiop', 'asdfghjkl', 'zxcvbnm', special].map(row => row.split(''))\n\ntype WordKey = {\n    visible: boolean\n    key: string\n}\n\ntype WordKeyList = WordKey[][]\n\nexport const getKeysForWord = (originalWord: string, fakeKeys = 0): WordKeyList => {\n    const word = originalWord.toLowerCase()\n\n    return KEYS.map(row => row.map(k => getKey(k, word, fakeKeys)))\n}\n\nconst getKey = (key: string, word: string, fakeKeys: number): WordKey => {\n    const random = fakeKeys ? seedRandom(key + word)() : 0\n\n    return {\n        key,\n        visible: word.includes(key) || (fakeKeys > random && !special.includes(key)),\n    }\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { brand, white } from '../../styles/colors'\nimport { fast } from '../../styles/transitions'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\n\ninterface KeyProps {\n    onClick(): void\n    symbol?: string\n    visible?: boolean\n}\n\nexport const Key = (props: KeyProps) => (\n    <Container\n        visible={props.visible}\n        onClick={props.onClick}\n        isSpace={props.symbol === ' '}\n    >\n        {props.symbol}\n        <KeyHandler\n            keyEventName={KEYPRESS}\n            keyValue={props.symbol}\n            onKeyHandle={props.onClick}\n        />\n    </Container>\n)\n\nconst Container = styled.button<{ visible?: boolean; isSpace?: boolean }>`\n    width: ${p => (p.isSpace ? '47vw' : '8vw')};\n    height: 7vh;\n    padding: 0;\n    margin: 0 4px;\n    border: 2px solid ${brand};\n    opacity: ${p => (p.visible ? 1 : 0.1)};\n    border-radius: 4px;\n    color: ${brand};\n    font-weight: bold;\n    font-size: 24px;\n    text-align: center;\n    background: none;\n    transition: all ${fast};\n\n    ${p => p.visible && highlight}\n`\nconst highlight = css`\n    &:active {\n        outline: none;\n        background-color: ${brand};\n        color: ${white};\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { getKeysForWord } from './getKeysForWord'\nimport { white } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { Key } from './Key'\n\ninterface KeyboardProps {\n    word: string\n    onPress(key: string): void\n    fakeKeys?: number\n}\n\nexport const Keyboard = (props: KeyboardProps) => (\n    <Container>\n        {getKeysForWord(props.word, props.fakeKeys).map((row, i) => (\n            <Row key={i}>\n                {row.map(k => (\n                    <Key\n                        key={k.key}\n                        symbol={k.key}\n                        visible={k.visible}\n                        onClick={() => {\n                            if (k.visible) {\n                                props.onPress(k.key)\n                            }\n                        }}\n                    />\n                ))}\n            </Row>\n        ))}\n    </Container>\n)\n\nconst Container = styled.div`\n    padding: 0 0 50px;\n    background: ${white};\n    box-shadow: ${barShadow};\n`\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 10px 5px 0;\n`\n\nexport const vibrateOk = () => navigator.vibrate(1)\nexport const vibrateBad = () => navigator.vibrate([1, 100, 1, 100, 1])\n","import React from 'react'\nimport styled from 'styled-components'\nimport { animated, useSpring } from 'react-spring'\nimport { brand } from '../../styles/colors'\n\nexport const Pipe = () => {\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-0.3em) scaleX(3)',\n        },\n    })\n    return <PipeContainer style={pipeSpring} />\n}\n\nconst PipeContainer = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 -0.05em;\n    vertical-align: middle;\n    background-color: ${brand};\n`\n","import React from 'react'\nimport ScaleText from 'react-scale-text'\nimport styled from 'styled-components'\nimport { brand, muted, black } from '../../styles/colors'\nimport { Pipe } from './Pipe'\n\ntype TypewriterProps = {\n    word: string\n    progress: number\n}\n\nexport const Typewriter = (props: TypewriterProps) => {\n    const { word, progress } = props\n    const typed = word.substr(0, progress)\n\n    return (\n        <Container>\n            <ScaleText widthOnly={true} maxFontSize={74}>\n                <TypeWrapper>\n                    {word.split('').map((w, i) => {\n                        return (\n                            <Segment key={w + i}>\n                                {i === progress && <Pipe key={typed} />}\n                                <Letter letterState={progress <= i}>{w}</Letter>\n                            </Segment>\n                        )\n                    })}\n                </TypeWrapper>\n            </ScaleText>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n    padding: 0px 25px;\n    overflow: hidden;\n    height: 2em;\n    width: 100%;\n    line-height: 2em;\n`\n\nconst TypeWrapper = styled.div`\n    white-space: nowrap;\n    position: relative;\n    width: 100%;\n`\n\nconst Segment = styled.span`\n    display: inline-block;\n    line-height: 1em;\n    height: 90px;\n    margin: 0 1px;\n    vertical-align: middle;\n    position: relative;\n`\n\nconst Letter = styled.span<{ letterState: boolean }>`\n    display: inline-block;\n    text-align: center;\n    position: relative;\n    margin: 0 0.025em;\n    height: 100%;\n    min-width: 25px;\n    transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n    transform: ${props => (props.letterState ? 'scale(0.5)' : 'scale(1)')};\n    color: ${props => (props.letterState ? 'rgba(255,255,255,0)' : black)};\n\n    &::after {\n        content: '*';\n        position: absolute;\n        text-align: center;\n        top: 0.5em;\n        left: 0;\n        right: 0;\n        line-height: 0.5em;\n        height: 20px;\n        transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n        color: ${muted};\n        transform: ${props => (props.letterState ? 'scale(2)' : 'scale(0)')};\n        opacity: ${props => (props.letterState ? 1 : 0)};\n    }\n`\n","import { Actions } from '../types/Actions'\nimport { State } from '../types/State'\nimport { reducer } from '../reducer'\n\nexport const reducerLogger = (reducerFunc: typeof reducer) => (\n    state: State,\n    action: Actions\n) => {\n    console.log('→', action.type, action.payload)\n    return reducerFunc(state, action)\n}\n","import { RouteName } from '../types/RouteName'\nimport { State } from './types/State'\n\nexport const initialState: State = {\n    loading: true,\n    route: RouteName.Home,\n    lastRoutes: [],\n    words: [],\n}\n","import { createStore } from 'react-hooks-global-state'\nimport { reducerLogger } from './helpers/reducerLogger'\nimport { initialState } from './initialState'\nimport { reducer } from './reducer'\n\nexport const { GlobalStateProvider, dispatch, useGlobalState } = createStore(\n    reducerLogger(reducer),\n    initialState\n)\n","import uuid from 'uuid'\nimport { Actions } from './types/Actions'\nimport { State } from './types/State'\n\nexport const reducer = (state: State, action: Actions) => {\n    switch (action.type) {\n        case 'APP/SET_LOADING':\n            return {\n                ...state,\n                loading: action.payload,\n            }\n\n        case 'ROUTER/SET_ROUTE':\n            return {\n                ...state,\n                route: action.payload.route,\n                lastRoutes: [state.route, ...state.lastRoutes],\n            }\n\n        case 'ROUTER/BACK':\n            return {\n                ...state,\n                route: state.lastRoutes[0],\n                lastRoutes: state.lastRoutes.slice(1),\n            }\n\n        case 'WORDS/SET':\n            return {\n                ...state,\n                words: action.payload,\n            }\n\n        case 'WORDS/ADD_WORD':\n            return {\n                ...state,\n                words: [...state.words, { id: uuid(), ...action.payload }],\n            }\n\n        case 'WORDS/REMOVE_WORD':\n            return {\n                ...state,\n                words: state.words.filter(word => word.id !== action.payload.id),\n            }\n\n        default:\n            throw new Error('[reducer] Unknown action type!')\n    }\n}\n","import { dispatch, useGlobalState } from './state/store'\nimport { RouteName } from './types/RouteName'\n\nexport const useRouter = () => {\n    const [route] = useGlobalState('route')\n\n    const setRoute = (route: RouteName) => {\n        dispatch({ type: 'ROUTER/SET_ROUTE', payload: { route } })\n    }\n\n    const goBack = () => {\n        dispatch({ type: 'ROUTER/BACK' })\n    }\n\n    return { route, setRoute, goBack }\n}\n","import { dispatch, useGlobalState } from './state/store'\n\nexport const useWords = () => {\n    const [words] = useGlobalState('words')\n\n    const addWord = (name: string, translation: string, example?: string) => {\n        dispatch({ type: 'WORDS/ADD_WORD', payload: { name, translation, example } })\n    }\n\n    const removeWord = (id: string) => {\n        dispatch({ type: 'WORDS/REMOVE_WORD', payload: { id } })\n    }\n\n    const randomWord = () => {\n        return words[Math.floor(Math.random() * words.length)]\n    }\n\n    return { words, addWord, removeWord, randomWord }\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\nimport { Keyboard } from '../../components/Keyboard'\nimport { Typewriter } from '../../components/Typewriter'\nimport { useWords, useRouter } from '../../store'\nimport { Word } from '../../store/state/types/State'\nimport { Icon } from '../../components/Icon'\nimport { good, white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\nimport ScaleText from 'react-scale-text'\n\nexport const Game = () => {\n    const { goBack } = useRouter()\n    const { randomWord } = useWords()\n    const [progress, setProgress] = useState(0)\n    const [word, setWord] = useState(randomWord())\n\n    const wordRight = word.name.substr(progress)\n    const isComplete = progress === word.name.length\n\n    const handleKeyPress = (key: string) => {\n        const currentWord = word.name[progress].toLocaleLowerCase()\n        if (key === currentWord) {\n            setProgress(progress + 1)\n        }\n    }\n\n    const handleNextWord = () => {\n        setWord(randomWord())\n        setProgress(0)\n    }\n\n    return (\n        <Container>\n            <Row>\n                <ScaleText maxFontSize={24}>\n                    <div>\n                        <h1>{word.translation}</h1>\n                        <h5>{isComplete ? word.example : '\\u00a0'}</h5>\n                    </div>\n                </ScaleText>\n            </Row>\n            <Row>\n                <Typewriter word={word.name} progress={progress} key={word.name} />\n                <button onClick={goBack}>Cancel</button>\n            </Row>\n            <Bottom>\n                <Keyboard word={wordRight} onPress={handleKeyPress} />\n                {isComplete && (\n                    <Complete>\n                        <h2>Done!</h2>\n                        <Button onClick={handleNextWord}>\n                            Next word\n                            <Icon name=\"play\" />\n                        </Button>\n\n                        <KeyHandler\n                            keyEventName={KEYPRESS}\n                            keyValue=\"Enter\" // enter\n                            onKeyHandle={handleNextWord}\n                        />\n                    </Complete>\n                )}\n            </Bottom>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    /* display: grid; */\n    /* grid-template-rows: 1fr 2fr auto; */\n    height: 100%;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    text-align: center;\n    overflow: hidden;\n`\nconst Row = styled.div`\n    width: 100%;\n    flex: 1 0 auto;\n`\n\nconst Bottom = styled.div`\n    width: 100%;\n    position: relative;\n`\n\nconst Complete = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Button = styled.button`\n    padding: 30px 50px;\n    border: none;\n    color: ${white};\n    background: ${good};\n    border-radius: 4px;\n    box-shadow: ${floatingShadow};\n    font-weight: bold;\n    font-size: 24px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useSpring, animated } from 'react-spring'\nimport { brand } from '../../styles/colors'\n\nexport const Logo = () => {\n    const reSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 200,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const wordSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 300,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-1.2em) scaleX(5)',\n        },\n    })\n\n    return (\n        <Container>\n            <First style={reSpring}>Re</First>\n            <Pipe style={pipeSpring} />\n            <Last style={wordSpring}>word</Last>\n        </Container>\n    )\n}\n\nconst Container = styled.h1`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n`\n\nconst First = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Last = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Pipe = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 0.05em;\n    vertical-align: middle;\n    background-color: ${brand};\n`\n","import React from 'react'\nimport { WordsState } from '../../store/state/types/State'\nimport { useRouter } from '../../store'\nimport { RouteName } from '../../store/types/RouteName'\nimport { Icon } from '../../components/Icon'\nimport { white, brand } from '../../styles/colors'\nimport styled from 'styled-components'\nimport { floatingShadow } from '../../styles/shadow'\n\ntype StartButtonProps = {\n    words: WordsState\n    loading: boolean\n}\n\nexport const StartButton = (props: StartButtonProps) => {\n    const { setRoute } = useRouter()\n\n    if (props.loading) {\n        return <CircleButton>Loading</CircleButton>\n    }\n\n    if (!props.words.length) {\n        return (\n            <CircleButton onClick={() => setRoute(RouteName.Words)}>\n                <Icon name=\"plus\" size=\"large\" block />\n                Word\n            </CircleButton>\n        )\n    }\n\n    return (\n        <CircleButton onClick={() => setRoute(RouteName.Game)}>\n            <Icon name=\"play\" size=\"large\" block />\n            Play\n        </CircleButton>\n    )\n}\n\nconst playSize = '45vmin'\n\nconst CircleButton = styled.button`\n    background: ${white};\n    border: none;\n    box-shadow: ${floatingShadow};\n    width: ${playSize};\n    height: ${playSize};\n    max-width: 260px;\n    max-height: 260px;\n    border-radius: 100%;\n    color: ${brand};\n    font-size: 36px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Logo } from '../../components/Logo'\nimport { useWords } from '../../store'\nimport { useGlobalState } from '../../store/state/store'\nimport { StartButton } from './StartButton'\n\nexport const Home = () => {\n    const [loading] = useGlobalState('loading')\n    const { words } = useWords()\n\n    return (\n        <Container>\n            <Logo />\n            <Container>\n                <StartButton words={words} loading={loading} />\n            </Container>\n            <WordsCount>\n                {!loading && (\n                    <>\n                        You added <b>{words.length}</b> words\n                    </>\n                )}\n            </WordsCount>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: grid;\n    height: 100%;\n    grid-auto-rows: 1fr 3fr 1fr;\n    align-items: center;\n    justify-items: center;\n`\n\nconst WordsCount = styled.div`\n    padding: 25px;\n    text-align: center;\n`\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { IconName, Icon } from '../Icon'\n\ntype HeaderProps = {\n    title: string\n    iconName: IconName\n    children?: ReactNode\n}\n\nexport const Header = (props: HeaderProps) => {\n    return (\n        <HeaderWrapper>\n            <Icon name={props.iconName} size=\"large\" />\n            <h1>{props.title}</h1>\n            {props.children}\n        </HeaderWrapper>\n    )\n}\n\nconst HeaderWrapper = styled.header`\n    display: flex;\n    min-height: 260px;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { brand, muted } from '../../styles/colors'\n\ntype InputProps = {\n    value: string\n    type?: string\n    name?: string\n    placeholder: string\n    onChange: (value: string) => void\n    autoFocus?: boolean\n}\n\nexport const Input = (props: InputProps) => {\n    const { value, type = 'text', placeholder, onChange, autoFocus, name } = props\n\n    const [focus, setFocus] = useState(false)\n\n    return (\n        <Label active={focus}>\n            <LabelName move={value !== ''}>{placeholder}</LabelName>\n            <InputStyled\n                type={type}\n                value={value}\n                onChange={event => onChange(event.target.value)}\n                onFocus={() => setFocus(true)}\n                onBlur={() => setFocus(false)}\n                autoFocus={autoFocus}\n                name={name}\n            />\n        </Label>\n    )\n}\n\nconst Label = styled.label<{ active: boolean }>`\n    position: relative;\n    display: block;\n    &:after {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: 2px;\n        opacity: 1;\n        transition: transform 0.25s ease-out;\n        transform: scaleX(${props => (props.active ? 1 : 0)});\n        background: ${brand};\n    }\n`\n\nconst LabelName = styled.span<{ move: boolean }>`\n    position: absolute;\n    top: 9px;\n    left: 0px;\n    font-size: 15px;\n    transition: transform 0.15s ease-out;\n    color: ${muted};\n    cursor: text;\n    transform-origin: 0 0; // top left for scale\n    transform: ${props =>\n        props.move ? `translateY(-17px) scale(0.8)` : `translate(0px)`};\n`\n\nconst InputStyled = styled.input`\n    padding: 12px 0 9px;\n    border: none;\n    font-size: 15px;\n    display: block;\n    width: 100%;\n    margin: 15px 0;\n    border-bottom: 2px solid ${muted};\n`\n","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyATMnw8FbczS1-0yJwrHl98EunKDAjE1DM',\n    authDomain: 'reword-1.firebaseapp.com',\n    databaseURL: 'https://reword-1.firebaseio.com',\n    projectId: 'reword-1',\n    storageBucket: 'reword-1.appspot.com',\n    messagingSenderId: '220877466530',\n    appId: '1:220877466530:web:7c95c058eaa3a7ed',\n}\nexport const firebaseApp = firebase.initializeApp(firebaseConfig)\n","import styled from 'styled-components'\nimport { brand } from '../../styles/colors'\n\nexport const Button = styled.button`\n    display: inline-block;\n    padding: 5px 15px;\n    border: 2px solid ${brand};\n    background: transparent;\n`\n","import styled from 'styled-components'\nimport { useRouter } from '../../store'\nimport { RouteName } from '../../store/types/RouteName'\nimport { Header } from '../../components/Header'\nimport { Input } from '../../components/Input'\nimport React, { useState } from 'react'\nimport { firebaseApp } from '../../store/firebase'\nimport { Button } from '../../components/Button'\n\nexport const Settings = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const { setRoute } = useRouter()\n    return (\n        <div>\n            <Header title=\"Settings\" iconName=\"profile\" />\n\n            <form\n                onSubmit={e => {\n                    e.preventDefault()\n                    firebaseApp\n                        .auth()\n                        .createUserWithEmailAndPassword(email, password)\n                        .catch(m => console.log(m))\n                }}\n            >\n                <FormWrapper>\n                    <Input\n                        name=\"email\"\n                        value={email}\n                        onChange={setEmail}\n                        placeholder=\"email\"\n                    />\n                    <Input\n                        name=\"password\"\n                        value={password}\n                        onChange={setPassword}\n                        placeholder=\"password\"\n                    />\n                    <Button>Sign up</Button>\n                </FormWrapper>\n            </form>\n        </div>\n    )\n}\n\nconst FormWrapper = styled.div`\n    padding: 30px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { IconName, Icon } from '../Icon'\nimport { brand, white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\nimport { NAV_HEIGHT } from '../Nav'\n\ntype FloatingButtonProps = {\n    onClick: () => void\n    iconName: IconName\n}\n\nexport const FloatingButton = (props: FloatingButtonProps) => (\n    <Button onClick={props.onClick}>\n        <Icon name={props.iconName} size=\"normal\" />\n    </Button>\n)\n\nconst Button = styled.button`\n    position: fixed;\n    bottom: ${NAV_HEIGHT + 15}px;\n    right: 15px;\n    padding: 12px;\n    border: 2px solid ${white};\n    color: ${brand};\n    box-shadow: ${floatingShadow};\n    border-radius: 50%;\n    background: ${white};\n    transition: 0.2s;\n    &:active {\n        border-color: ${brand};\n    }\n`\n","import {\n    ENTERING,\n    EXITED,\n    EXITING,\n    TransitionStatus,\n} from 'react-transition-group/Transition'\nimport { css, keyframes } from 'styled-components'\n\nexport const fadeDuration = 400\nconst easing = 'cubic-bezier(0.29, 0.87, 0.54, 0.99)'\n\nconst fadeUpKeyframes = keyframes`\n    from {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n    to {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n`\n\nconst fadeDownKeyframes = keyframes`\n    from {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n    to {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n`\n\nconst fadeInKeyframes = keyframes`\n    from { opacity: 0; }\n    to { opacity: 1; }\n`\n\nconst fadeOutKeyframes = keyframes`\n    from { opacity: 1; }\n    to { opacity: 0; }\n`\n\nexport const fadeUpAnimation = css`\n    animation: ${fadeUpKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeDownAnimation = css`\n    animation: ${fadeDownKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeUpDownAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeUpAnimation};\n    ${status === EXITING && fadeDownAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'display: none;'};\n`\n\nexport const fadeInAnimation = css`\n    animation: ${fadeInKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeOutAnimation = css`\n    animation: ${fadeOutKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeInOutAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeInAnimation};\n    ${status === EXITING && fadeOutAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'display: none;'};\n`\n","import React, { ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport Transition, { TransitionStatus } from 'react-transition-group/Transition'\nimport styled from 'styled-components'\nimport { fadeInOutAnimation, fadeUpDownAnimation } from '../../styles/animations'\nimport { white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\n\ntype ModalProps = {\n    show: boolean\n    children?: ReactNode\n    footer?: () => ReactNode\n    close?: () => void\n}\n\nexport const Modal = (props: ModalProps) => {\n    return ReactDOM.createPortal(\n        <Transition in={props.show} timeout={1000}>\n            {status => (\n                <>\n                    <ModalBox status={status}>\n                        {props.children}\n                        {props.footer && props.footer()}\n                    </ModalBox>\n                    <Overlay status={status} onClick={props.close} />\n                </>\n            )}\n        </Transition>,\n        modalRoot\n    )\n}\n\nconst modalRoot = document.getElementById('modals')\n\nconst ModalBox = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 15px;\n    margin: 0 auto auto;\n    width: calc(100vw - 20px);\n    max-height: calc(100vh - 20px);\n    overflow-y: auto;\n    background: ${white};\n    border-radius: 4px;\n    z-index: 1000;\n    padding: 15px;\n    box-shadow: ${floatingShadow};\n    ${p => fadeUpDownAnimation(p.status)};\n`\n\nconst Overlay = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.1);\n    z-index: 100;\n    ${p => fadeInOutAnimation(p.status)};\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\ntype SearchProps = {\n    value: string\n    onChange: (value: string) => void\n}\n\nexport const Search = (props: SearchProps) => (\n    <Input\n        type=\"search\"\n        value={props.value}\n        onChange={e => props.onChange(e.target.value)}\n        placeholder=\"Search…\"\n    />\n)\n\nconst Input = styled.input``\n","import { DictionaryItem } from './types'\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('')\nconst cache = {}\n\nexport const fetchDictionary = async (\n    letter: string\n): Promise<DictionaryItem[] | null> => {\n    if (!alphabet.includes(letter)) {\n        return null\n    }\n\n    if (cache[letter]) {\n        return cache[letter]\n    }\n\n    const res = await fetch(`/dictionary/en-pl/${letter}.json`)\n    const data: DictionaryItem[] = await res.json()\n\n    cache[letter] = data\n\n    return data\n}\n","import { useState, useMemo } from 'react'\nimport { useDebounce } from '../useDebounce'\nimport { fetchDictionary } from './fetchDictionary'\nimport { DictionaryItem } from './types'\n\nexport const useDictionary = (query: string) => {\n    const [currentQuery, setCurrentQuery] = useState('')\n\n    const [results, setResults] = useState<DictionaryItem[]>([])\n\n    useDebounce(() => setCurrentQuery(query.toLowerCase()), 400, [query])\n\n    useMemo(() => {\n        const letter = (currentQuery[0] || '').toLowerCase()\n\n        const run = async () => {\n            const list = await fetchDictionary(letter)\n\n            if (!list) {\n                setResults([])\n                return\n            }\n\n            const results = list\n                .filter(item => item.word.toLowerCase().startsWith(currentQuery))\n                .slice(0, 5)\n\n            setResults(results)\n        }\n\n        run()\n    }, [currentQuery])\n\n    return { results }\n}\n","import { useEffect } from 'react'\n\nexport const useDebounce = (fn: () => any, ms: number = 0, args: any[] = []) => {\n    useEffect(() => {\n        const handle = setTimeout(fn.bind(null, args), ms)\n\n        return () => {\n            clearTimeout(handle)\n        }\n    }, [args, fn, ms])\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Word } from '../../store/state/types/State'\n\ntype WordsItemProps = {\n    word: Word\n    removeWord: (id: string) => void\n}\n\nexport const WordsItem = (props: WordsItemProps) => (\n    <tr>\n        <td>\n            <b>{props.word.name}</b>\n        </td>\n        <td>\n            <i>{props.word.translation}</i>\n        </td>\n        <td>{props.word.example && <small>{props.word.example}</small>}</td>\n        <td>\n            <button onClick={() => props.removeWord(props.word.id)}>x</button>\n        </td>\n    </tr>\n)\n","import React, { useState } from 'react'\nimport { FloatingButton } from '../../components/FloatingButton'\nimport { Header } from '../../components/Header'\nimport { Input } from '../../components/Input'\nimport { Modal } from '../../components/Modal'\nimport { Search } from '../../components/Search'\nimport { useDictionary } from '../../hooks/useDictionary'\nimport { DictionaryTrans } from '../../hooks/useDictionary/types'\nimport { useWords } from '../../store'\nimport { WordsItem } from './WordsItem'\nimport styled from 'styled-components'\nimport { light } from '../../styles/colors'\n\nexport const Words = () => {\n    const { words, addWord, removeWord } = useWords()\n    const [search, setSearch] = useState('')\n\n    const [showModal, setShowModal] = useState(false)\n    const [word, setWord] = useState('')\n    const [translation, setTranslation] = useState('')\n    const [example, setExample] = useState('')\n\n    const { results } = useDictionary(word)\n\n    const addNewWord = () => {\n        addWord(word.trim(), translation.trim(), example.trim())\n        setWord('')\n        setTranslation('')\n        setExample('')\n    }\n\n    const getTrans = (trans: DictionaryTrans[]) => trans.map(t => t.texts[0]).join(', ')\n\n    return (\n        <div>\n            <Header title=\"Words\" iconName=\"words\">\n                <Search value={search} onChange={setSearch} />\n            </Header>\n            <table>\n                <thead>\n                    <tr>\n                        <td>Word</td>\n                        <td>Translation</td>\n                        <td>Example</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {words\n                        .filter(word => word.name.includes(search))\n                        .map(word => (\n                            <WordsItem\n                                key={word.id}\n                                word={word}\n                                removeWord={removeWord}\n                            />\n                        ))}\n                </tbody>\n            </table>\n            <FloatingButton onClick={() => setShowModal(!showModal)} iconName=\"plus\" />\n            <Modal\n                show={showModal}\n                footer={() => (\n                    <>\n                        <button onClick={() => setShowModal(false)}>Close</button>\n                        <button onClick={addNewWord}>Save</button>\n                    </>\n                )}\n                close={() => setShowModal(false)}\n            >\n                <div>\n                    <Input value={word} placeholder=\"Word\" onChange={setWord} />\n                </div>\n                {!translation && (\n                    <div>\n                        {results.map(item => (\n                            <AutocompleteItem\n                                key={item.id}\n                                onClick={() => {\n                                    setWord(item.word)\n                                    setTranslation(getTrans(item.trans))\n                                }}\n                            >\n                                <b>{item.word}</b> - {getTrans(item.trans)}\n                            </AutocompleteItem>\n                        ))}\n                    </div>\n                )}\n                <div>\n                    <Input\n                        value={translation}\n                        onChange={setTranslation}\n                        placeholder=\"Translation\"\n                    />\n                </div>\n                <div>\n                    <Input value={example} onChange={setExample} placeholder=\"Example\" />\n                </div>\n            </Modal>\n        </div>\n    )\n}\n\nconst AutocompleteItem = styled.button`\n    display: block;\n    width: 100%;\n    padding: 1em 0;\n    border: none;\n    border-bottom: 1px solid ${light};\n    text-align: left;\n    font-size: 14px;\n`\n","import React, { ElementType } from 'react'\nimport styled from 'styled-components'\nimport { Nav, NAV_HEIGHT } from './components/Nav'\nimport { Game } from './screens/Game'\nimport { Home } from './screens/Home'\nimport { Settings } from './screens/Settings'\nimport { Words } from './screens/Words'\nimport { useRouter, useWordsPersist } from './store'\nimport { RouteName } from './store/types/RouteName'\n\nconst screens: Record<RouteName, ElementType> = {\n    [RouteName.Home]: Home,\n    [RouteName.Words]: Words,\n    [RouteName.Settings]: Settings,\n    [RouteName.Game]: Game,\n}\n\nexport const App = () => {\n    useWordsPersist()\n    const { route, setRoute } = useRouter()\n\n    const Page = screens[route]\n\n    return (\n        <>\n            <Content>\n                <Page />\n            </Content>\n            <NavContainer>\n                <Nav active={route} onChange={setRoute} />\n            </NavContainer>\n        </>\n    )\n}\n\nconst Content = styled.main`\n    height: calc(100% - ${NAV_HEIGHT}px);\n    position: relative;\n    width: 100%;\n    overflow-y: auto;\n`\n\nconst NavContainer = styled.div`\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    left: 0;\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import * as Sentry from '@sentry/browser'\nimport React, { Component, ErrorInfo } from 'react'\n\ntype ErrorBoundaryState = {\n    error: Error | null\n    eventId: string | null\n}\n\nexport class ErrorBoundary extends Component<{}, ErrorBoundaryState> {\n    public state = {\n        error: null,\n        eventId: null,\n    }\n\n    public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        this.setState({ error })\n\n        Sentry.withScope(scope => {\n            scope.setExtras(errorInfo)\n            this.setState({ eventId: Sentry.captureException(error) })\n        })\n    }\n\n    public render() {\n        if (this.state.error) {\n            return (\n                <div>\n                    <h1>Error occurred ;(</h1>\n                    <a onClick={this.handleReportDialog}>Report feedback</a>\n                    <pre>{JSON.stringify(this.state.error, null, 2)}</pre>\n                </div>\n            )\n        }\n\n        return this.props.children\n    }\n\n    private handleReportDialog = () => {\n        Sentry.showReportDialog({ eventId: this.state.eventId })\n    }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport * as Sentry from '@sentry/browser'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './styles/global.css'\nimport { GlobalStateProvider } from './store'\nimport { ErrorBoundary } from './components/ErrorBoundary'\n\nSentry.init({\n    dsn: 'https://adf49e52f07d479098537009eb0044b0@sentry.io/1446350',\n})\n\nrender(\n    <ErrorBoundary>\n        <GlobalStateProvider>\n            <App />\n        </GlobalStateProvider>\n    </ErrorBoundary>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { dispatch, useGlobalState } from './state/store'\nimport { useEffect } from 'react'\n\nexport const useWordsPersist = () => {\n    const [words] = useGlobalState('words')\n\n    useEffect(() => {\n        if (words.length) {\n            localStorage.setItem('words', JSON.stringify(words))\n        }\n    }, [words])\n\n    useEffect(() => {\n        const json = localStorage.getItem('words')\n        if (json) {\n            const wordsFromStorage = JSON.parse(json)\n            // TODO remove timeout ;)\n            setTimeout(() => {\n                dispatch({ type: 'WORDS/SET', payload: wordsFromStorage })\n                dispatch({ type: 'APP/SET_LOADING', payload: false })\n            }, 500)\n        } else {\n            dispatch({ type: 'APP/SET_LOADING', payload: false })\n        }\n    }, [])\n}\n"],"sourceRoot":""}