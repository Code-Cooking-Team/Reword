{"version":3,"sources":["styles/colors.ts","styles/shadow.ts","components/Icon/icons/Home.tsx","components/Icon/icons/Play.tsx","components/Icon/icons/Plus.tsx","components/Icon/icons/Profile.tsx","components/Icon/icons/Reload.tsx","components/Icon/icons/Words.tsx","components/Icon/icons/Search.tsx","components/Icon/icons/Cross.tsx","components/Icon/Icon.tsx","store/types/RouteName.ts","styles/transitions.ts","store/state/types/State.ts","store/state/initialState.ts","store/state/reducer.ts","store/state/helpers/reducerLogger.ts","store/state/store.ts","store/useIsLoading.ts","components/Space/Space.tsx","components/Nav/Nav.tsx","components/Keyboard/getKeysForWord.tsx","components/Keyboard/Key.tsx","components/Keyboard/Keyboard.tsx","hooks/useElementSize.ts","components/Typewriter/Pointer.tsx","components/Typewriter/Typewriter.tsx","store/useRouter.ts","store/useWords.ts","store/firebase.ts","screens/Game/Game.tsx","styles/values.ts","components/Logo/Logo.tsx","screens/Home/StartButton.tsx","components/Loading/Loading.tsx","components/Loading/FullLoading.tsx","components/Input/Input.tsx","components/Tabs/Tabs.tsx","components/Tabs/TabsItem.tsx","store/useAuth.ts","screens/Home/AuthForm.tsx","screens/Home/Home.tsx","components/Button/Button.tsx","components/Header/Header.tsx","screens/Settings/Settings.tsx","components/FloatingButton/FloatingButton.tsx","components/Search/Search.tsx","styles/animations.ts","components/Modal/Modal.tsx","components/EditableList/EditableList.tsx","hooks/useDictionary/fetchDictionary.ts","hooks/useDictionary/useDictionary.ts","hooks/useDebounce.ts","screens/Words/WordForm.tsx","store/presets/index.ts","screens/Words/WordPresets.tsx","screens/Words/WordModal.tsx","screens/Words/WordsItem.tsx","screens/Words/Words.tsx","App.tsx","serviceWorker.ts","components/ErrorBoundary/ErrorBoundary.tsx","index.tsx","store/useWordsPersist.ts"],"names":["brand","white","light","muted","gray","barShadow","floatingShadow","Home","_ref","size","props","Object","objectWithoutProperties","react_default","a","createElement","assign","width","height","viewBox","fillRule","clipRule","d","Play","Plus","Profile","Reload","Words","Search","concat","fill","fillOpacity","Cross","RotatePlus","styled","_templateObject","RouteName","sizes","normal","big","large","Icon","name","_ref$size","_ref$block","block","IconContent","icons","Container","div","Icon_templateObject","p","fast","transition","_len","arguments","length","args","Array","_key","map","join","WordAction","initialState","route","lastRoutes","words","undefined","user","reducerFunc","localId","uuid","createStore","state","action","type","objectSpread","payload","toConsumableArray","slice","newWord","id","Add","newWords","word","Delete","Error","console","log","GlobalStateProvider","dispatch","useGlobalState","useIsLoading","_useGlobalState","slicedToArray","_useGlobalState3","isLoading","loggedIn","Space","Space_templateObject","Nav","prop","react","Nav_Container","show","NavList","NavButton","isActive","active","onClick","onChange","Icon_Icon","nav","Nav_templateObject","_templateObject2","button","_templateObject3","activeCSS","inActiveCSS","css","_templateObject4","_templateObject5","special","KEYS","row","split","getKey","key","fakeKeys","random","seedRandom","visible","includes","Key","Key_Container","onTouchStart","isSpace","symbol","esm","keyEventName","KEYPRESS","keyValue","onKeyHandle","Key_templateObject","highlight","Key_templateObject2","Keyboard","Keyboard_Container","originalWord","toLowerCase","k","getKeysForWord","i","Row","Key_Key","onPress","Keyboard_templateObject","Keyboard_templateObject2","getSize","el","_el$getBoundingClient","getBoundingClientRect","Pointer","pipeSpring","useSpring","transform","from","PipeContainer","style","animated","span","Pointer_templateObject","Typewriter","progress","document","body","_useState","useState","_useState2","setSize","useEffect","handleResize","window","addEventListener","removeEventListener","useElementSize","preview","setPreview","typed","substr","fontSize","Math","min","Typewriter_Container","onPointerDown","onPointerOut","TypeWrapper","w","Segment","Pointer_Pointer","Letter","hide","Hint","Typewriter_templateObject","Typewriter_templateObject2","Typewriter_templateObject3","Typewriter_templateObject4","small","Typewriter_templateObject5","useRouter","setRoute","goBack","useWords","addWord","addManyWords","removeWord","randomWord","floor","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Game_templateObject","Game_templateObject2","Bottom","Game_templateObject3","Complete","Game_templateObject4","DoneButton","Game_templateObject5","ActionButtonsWrapper","_templateObject6","ActionButton","_templateObject7","Logo","reSpring","opacity","delay","wordSpring","Logo_Container","First","Pipe","Last","h1","Logo_templateObject","Logo_templateObject2","Logo_templateObject3","Logo_templateObject4","StartButton","CircleButton","Game","StartButton_templateObject","Loading","Loading_Container","version","x","y","attributeType","attributeName","to","dur","repeatCount","Loading_templateObject","FullLoading","FullLoading_Container","Loading_Loading","FullLoading_templateObject","Input","value","_props$type","placeholder","autoFocus","focus","setFocus","_useState3","_useState4","linePosition","setLinePosition","labelRef","useRef","defaultLinePosition","current","Label","onMouseDown","e","pageX","ref","LabelName","move","InputStyled","event","target","onFocus","onBlur","transformOrigin","label","Input_templateObject","Input_templateObject2","input","Input_templateObject3","Tabs","items","Children","toArray","children","currentIndex","findIndex","setActive","prevActive","setPrevActive","refNav","refActive","pos","useLinePosition","activeItem","prevActiveItem","Tabs_Container","Tabs_Nav","index","NavItem","Line","left","Content","ContentItem","animation","Tabs_templateObject","Tabs_templateObject2","Tabs_templateObject3","animations","rightOut","keyframes","Tabs_templateObject4","rightIn","Tabs_templateObject5","leftOut","Tabs_templateObject6","leftIn","Tabs_templateObject7","_templateObject8","endsWith","_templateObject9","_templateObject10","_templateObject11","_templateObject12","wrapperEl","activeEl","deps","_useState5","_useState6","setLeft","_useState7","_useState8","setWidth","activeRect","wrapperRect","TabsItem","TabsItem_Container","TabsItem_templateObject","useAuthActions","signInError","setSignInError","createAccountError","setCreateAccountError","loading","setLoading","createAccount","asyncToGenerator","regenerator_default","mark","_callee","email","password","wrap","_context","prev","next","auth","createUserWithEmailAndPassword","t0","message","stop","_x","_x2","apply","this","signIn","_ref2","_callee2","_context2","signInWithEmailAndPassword","code","_x3","_x4","signOut","_ref3","_callee3","_context3","AuthForm","_useAuthActions","setEmail","setPassword","AuthForm_Container","Tabs_Tabs","TabsItem_TabsItem","onSubmit","preventDefault","ContentWrapper","ErrorMessage","Input_Input","FullButton","Overlay","AuthForm_templateObject","AuthForm_templateObject2","AuthForm_templateObject3","AuthForm_templateObject4","AuthForm_templateObject5","Home_templateObject","WordsCount","Home_templateObject2","AuthFormWrapper","main","Home_templateObject3","Button","Button_templateObject","color","Button_templateObject2","Button_templateObject3","Button_templateObject4","Header","HeaderWrapper","iconName","title","header","Header_templateObject","Center","Settings_templateObject","FloatingButton","FloatingButton_Button","FloatingButton_templateObject","SearchBox","Search_Input","IconPos","Search_templateObject","Search_templateObject2","Search_templateObject3","easing","fadeUpKeyframes","animations_templateObject","fadeDownKeyframes","animations_templateObject2","fadeInKeyframes","animations_templateObject3","fadeOutKeyframes","animations_templateObject4","fadeUpAnimation","animations_templateObject5","fadeDownAnimation","animations_templateObject6","fadeInAnimation","animations_templateObject8","fadeOutAnimation","animations_templateObject9","Modal","ReactDOM","createPortal","Transition","in","timeout","status","Fragment","ModalBox","Modal_Overlay","onOverlayClick","modalRoot","getElementById","Modal_templateObject","animations_templateObject7","ENTERING","EXITING","EXITED","Modal_templateObject2","animations_templateObject10","EditableList","react_beautiful_dnd_esm","onDragEnd","result","destination","reorder","list","source","droppableId","provided","snapshot","List","droppableProps","innerRef","item","draggableId","ListElement","draggableProps","dragHandleProps","EditableList_Cross","remove","filter","startIndex","endIndex","_result$splice","splice","removed","EditableList_templateObject","EditableList_templateObject2","EditableList_templateObject3","alphabet","cache","fetchDictionary","letter","res","data","abrupt","fetch","sent","json","useDictionary","query","currentQuery","setCurrentQuery","results","setResults","fn","ms","handle","setTimeout","bind","clearTimeout","useDebounce","useMemo","startsWith","run","WordForm","wordInput","setWordInput","translationInput","setTranslationInput","exampleInput","setExampleInput","_useList","useList","_useList2","translationList","translationListActions","_useList3","_useList4","exampleList","exampleListActions","Autocomplete","count","AutocompleteItem","translations","trans","t","texts","set","EditableList_EditableList","InputWithButtonWrapper","push","ModalActions","onDismiss","translation","example","clear","WordForm_templateObject","WordForm_templateObject2","WordForm_templateObject3","WordForm_templateObject4","WordForm_templateObject5","presets","getList","__webpack_require__","then","preset","WordPresets","WordPresets_Container","WordPresets_templateObject","WordModal","Modal_Modal","WordForm_WordForm","WordPresets_WordPresets","WordsItem","WordsItem_Container","Name","Translations","Examples","RemoveButton","WordsItem_templateObject","strong","WordsItem_templateObject2","WordsItem_templateObject3","WordsItem_templateObject4","WordsItem_templateObject5","Words_templateObject","screens","_screens","defineProperty","_useIsLoading","FullLoading_FullLoading","Home_Container","Logo_Logo","StartButton_StartButton","AuthForm_AuthForm","search","setSearch","_useWords","showModal","setShowModal","Words_Container","Header_Header","Search_Search_Search","toLocaleLowerCase","sort","b","localeCompare","WordsItem_WordsItem","FloatingButton_FloatingButton","WordModal_WordModal","setProgress","setWord","wordRight","isComplete","handleNextWord","Game_Container","Game_Row","Typewriter_Typewriter","Keyboard_Keyboard","App_templateObject","NavContainer","App_templateObject2","Boolean","location","hostname","match","ErrorBoundary","_Component","_getPrototypeOf2","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","error","eventId","handleReportDialog","Sentry","inherits","createClass","errorInfo","_this2","setState","scope","setExtras","JSON","stringify","Component","dsn","render","ErrorBoundary_ErrorBoundary","localWords","firestore","collection","doc","onSnapshot","serverWords","forEach","wordToAdd","wordToDelete","wordsFirebaseRef","add","delete","useWordsPersist","onAuthStateChanged","uid","displayName","_useRouter","Page","App_Content","Nav_Nav","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.636a5330.chunk.js","sourcesContent":["export const brand = '#9438EA'\nexport const white = '#FFFFFF'\nexport const black = '#000000'\nexport const varyLight = 'rgba(0, 0, 0, 0.05)'\nexport const light = 'rgba(0, 0, 0, 0.1)'\nexport const muted = 'rgba(0, 0, 0, 0.3)'\nexport const gray = 'rgba(0, 0, 0, 0.6)'\nexport const grayBg = 'rgba(196, 196, 196, 0.2)'\nexport const good = '#AED900'\nexport const danger = '#EA388D'\n","export const barShadow = '0 0 10px rgba(0, 0, 0, 0.1)'\nexport const floatingShadow = '2px 2px 7px rgba(0, 0, 0, 0.1)'\n","import React from 'react'\n\nimport { IconProps } from '../types'\n\nexport const Home = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M5 12.5H2L12 3.5L22 12.5H19V20.5H13V14.5H11V20.5H5V12.5ZM17 10.69L12 6.19L7 10.69V18.5H9V12.5H15V18.5H17V10.69Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Play = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 61 61\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M44.4792 30.5L16.5208 48.2917V12.7083L44.4792 30.5ZM34.9988 30.5L21.6042 21.96V39.04L34.9988 30.5Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Plus = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" {...props}>\n        <path d=\"M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Profile = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4ZM14 8C14 6.9 13.1 6 12 6C10.9 6 10 6.9 10 8C10 9.1 10.9 10 12 10C13.1 10 14 9.1 14 8ZM18 18C17.8 17.29 14.7 16 12 16C9.31 16 6.23 17.28 6 18H18ZM4 18C4 15.34 9.33 14 12 14C14.67 14 20 15.34 20 18V20H4V18Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Reload = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 42 42\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M19.3113 4.43625L27.2738 12.3987L19.3113 20.1862V13.3437C14.3413 14.1837 10.5613 18.4887 10.5613 23.6862C10.5613 28.8837 14.3413 33.1887 19.3113 34.0287V37.5637C12.3988 36.7062 7.06128 30.8262 7.06128 23.6862C7.06128 16.5462 12.4163 10.6662 19.3113 9.80875V4.43625ZM32.1038 15.1287C33.6788 17.1587 34.6413 19.5037 34.9388 21.9362H31.4038C31.1588 20.4137 30.5638 18.9262 29.6188 17.6137L32.1038 15.1287ZM22.8113 34.0113V37.5463C25.2438 37.2488 27.6063 36.3038 29.6363 34.7288L27.1163 32.2088C25.8038 33.1538 24.3338 33.7663 22.8113 34.0113ZM32.1038 32.2437L29.6188 29.7762C30.5638 28.4462 31.1588 26.9587 31.4038 25.4362H34.9388C34.6413 27.8687 33.6788 30.2137 32.1038 32.2437Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Words = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12.87 15.07L10.33 12.56L10.36 12.53C12.1 10.59 13.34 8.36 14.07 6H17V4H10V2H8V4H1V5.99H12.17C11.5 7.92 10.44 9.75 9 11.35C8.07 10.32 7.3 9.19 6.69 8H4.69C5.42 9.63 6.42 11.17 7.67 12.56L2.58 17.58L4 19L9 14L12.11 17.11L12.87 15.07ZM18.5 10H16.5L12 22H14L15.12 19H19.87L21 22H23L18.5 10ZM17.5 12.67L15.88 17H19.12L17.5 12.67Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Search = ({ size, ...props }: IconProps) => (\n    <svg\n        width={size}\n        height={size}\n        viewBox={`0 0 ${size} ${size}`}\n        fill=\"none\"\n        {...props}\n    >\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M15.731 14.255H16.521L21.511 19.255L20.021 20.745L15.021 15.755V14.965L14.751 14.685C13.611 15.665 12.131 16.255 10.521 16.255C6.931 16.255 4.021 13.345 4.021 9.755C4.021 6.165 6.931 3.255 10.521 3.255C14.111 3.255 17.021 6.165 17.021 9.755C17.021 11.365 16.431 12.845 15.451 13.985L15.731 14.255ZM6.021 9.755C6.021 12.245 8.031 14.255 10.521 14.255C13.011 14.255 15.021 12.245 15.021 9.755C15.021 7.26501 13.011 5.255 10.521 5.255C8.031 5.255 6.021 7.26501 6.021 9.755Z\"\n            fill=\"black\"\n            fillOpacity=\"0.54\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { Plus } from './Plus'\nimport { IconProps } from '../types'\nimport styled from 'styled-components'\n\nexport const Cross = (props: IconProps) => <RotatePlus {...props} />\n\nconst RotatePlus = styled(Plus)`\n    transform: rotate(45deg);\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport * as icons from './icons'\n\nconst sizes = {\n    normal: 24,\n    big: 35,\n    large: 62,\n}\n\nexport type IconName = keyof typeof icons\nexport type IconSize = keyof typeof sizes\n\ntype IconProps = {\n    name: IconName\n    size?: IconSize\n    block?: boolean\n}\n\nexport const Icon = ({ name, size = 'normal', block = false }: IconProps) => {\n    const IconContent = icons[name]\n    return (\n        <Container block={block}>\n            <IconContent size={sizes[size]} />\n        </Container>\n    )\n}\n\nconst Container = styled.div<{ block: boolean }>`\n    display: ${p => (p.block ? 'block' : 'inline-block')};\n    vertical-align: middle;\n    svg {\n        display: block;\n        margin: auto;\n        fill: currentColor;\n    }\n`\n","export enum RouteName {\n    Home = 'home',\n    Words = 'words',\n    Profile = 'profile',\n    Game = 'game',\n}\n","export const fast = '0.3s cubic-bezier(.21,.96,.43,.98)'\nexport const slow = '0.8s cubic-bezier(.21,.96,.43,.98)'\nexport const now = '0.1s cubic-bezier(.21,.96,.43,.98)'\nexport const transition = (...args: string[]) => `transition:${args\n    .map(name => `${name} ${fast}`)\n    .join(',')};\n`\n","import { RouteName } from '../../types/RouteName'\n\nexport enum WordAction {\n    Add,\n    Delete,\n}\n\nexport type Word = UnSavedWord & {\n    id: string\n    action?: WordAction\n}\n\nexport type UnSavedWord = {\n    name: string\n    translation: string[]\n    example: string[]\n    preset?: string\n}\n\nexport type WordsState = Word[]\n\nexport type UserState = {\n    id: string\n    email: string\n    name: string\n}\n\nexport type State = {\n    route: RouteName\n    lastRoutes: RouteName[]\n    words?: WordsState\n    user?: UserState | null\n}\n","import { RouteName } from '../types/RouteName'\nimport { State } from './types/State'\n\nexport const initialState: State = {\n    route: RouteName.Home,\n    lastRoutes: [],\n    words: undefined,\n    user: undefined,\n}\n","import uuid from 'uuid'\nimport { Actions } from './types/Actions'\nimport { State, Word, WordAction } from './types/State'\n\nconst localId = () => `local-${uuid()}`\n\nexport const reducer = (state: State, action: Actions) => {\n    switch (action.type) {\n        case 'ROUTER/SET_ROUTE':\n            return {\n                ...state,\n                route: action.payload.route,\n                lastRoutes: [state.route, ...state.lastRoutes],\n            }\n\n        case 'ROUTER/BACK':\n            return {\n                ...state,\n                route: state.lastRoutes[0],\n                lastRoutes: state.lastRoutes.slice(1),\n            }\n\n        case 'WORDS/SET':\n            return {\n                ...state,\n                words: action.payload,\n            }\n\n        case 'WORDS/ADD_WORD':\n            const newWord: Word = {\n                id: localId(),\n                action: WordAction.Add,\n                ...action.payload,\n            }\n            return {\n                ...state,\n                words: [...state.words, newWord],\n            }\n\n        case 'WORDS/ADD_MANY_WORDS':\n            const newWords: Word[] = action.payload.map(word => ({\n                id: localId(),\n                action: WordAction.Add,\n                ...word,\n            }))\n            return {\n                ...state,\n                words: [...state.words, ...newWords],\n            }\n\n        case 'WORDS/REMOVE_WORD':\n            return {\n                ...state,\n                words: state.words.map(word =>\n                    word.id === action.payload.id\n                        ? {\n                              ...word,\n                              action: WordAction.Delete,\n                          }\n                        : word\n                ),\n            }\n\n        case 'USER/CHANGE':\n            return {\n                ...state,\n                user: action.payload,\n            }\n\n        default:\n            throw new Error('[reducer] Unknown action type!')\n    }\n}\n","import { Actions } from '../types/Actions'\nimport { State } from '../types/State'\nimport { reducer } from '../reducer'\n\nexport const reducerLogger = (reducerFunc: typeof reducer) => (\n    state: State,\n    action: Actions\n) => {\n    console.log('→', action.type, action.payload)\n    return reducerFunc(state, action)\n}\n","import { createStore } from 'react-hooks-global-state'\nimport { reducerLogger } from './helpers/reducerLogger'\nimport { initialState } from './initialState'\nimport { reducer } from './reducer'\n\nexport const { GlobalStateProvider, dispatch, useGlobalState } = createStore(\n    reducerLogger(reducer),\n    initialState\n)\n","import { useGlobalState } from './state/store'\n\nexport const useIsLoading = () => {\n    const [words] = useGlobalState('words')\n    const [user] = useGlobalState('user')\n\n    return {\n        isLoading: words === undefined || user === undefined,\n        loggedIn: !!user,\n    }\n}\n","import styled from 'styled-components'\nexport const Space = styled.div`\n    max-width: 900px;\n    margin: auto;\n    width: 100%;\n`\n","import * as React from 'react'\nimport styled, { css } from 'styled-components'\nimport { white, gray, brand } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { Icon } from '../Icon'\nimport { fast } from '../../styles/transitions'\nimport { RouteName } from '../../store/types/RouteName'\nimport { useIsLoading } from '../../store/useIsLoading'\nimport { Space } from '../Space/Space'\n\nexport const NAV_HEIGHT = 60\n\ntype NavProps = {\n    active: RouteName\n    onChange(page: RouteName): void\n}\n\nexport const Nav = (prop: NavProps) => {\n    const { loggedIn } = useIsLoading()\n\n    return (\n        <Container show={loggedIn}>\n            <Space>\n                <NavList>\n                    <NavButton\n                        isActive={prop.active === RouteName.Home}\n                        onClick={() => prop.onChange(RouteName.Home)}\n                    >\n                        <Icon name=\"Home\" block />\n                        Home\n                    </NavButton>\n                    <NavButton\n                        isActive={prop.active === RouteName.Words}\n                        onClick={() => prop.onChange(RouteName.Words)}\n                    >\n                        <Icon name=\"Words\" block />\n                        Words\n                    </NavButton>\n                    <NavButton\n                        isActive={prop.active === RouteName.Profile}\n                        onClick={() => prop.onChange(RouteName.Profile)}\n                    >\n                        <Icon name=\"Profile\" block />\n                        Profile\n                    </NavButton>\n                </NavList>\n            </Space>\n        </Container>\n    )\n}\n\nconst Container = styled.nav<{ show: boolean }>`\n    background: ${white};\n    width: 100%;\n    min-height: ${NAV_HEIGHT}px;\n    box-shadow: ${barShadow};\n    overflow: hidden;\n    transform: translateY(${p => (p.show ? 0 : NAV_HEIGHT)}px);\n    transition: transform 300ms ease;\n`\nconst NavList = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n`\n\nconst NavButton = styled.button<{ isActive: boolean }>`\n    color: ${props => (props.isActive ? brand : gray)};\n    display: block;\n    background: none;\n    border: none;\n    padding: 10px 25px;\n    position: relative;\n    line-height: 1.5em;\n    &::after {\n        content: '';\n        display: block;\n        border-radius: 100%;\n        height: 60px;\n        width: 60px;\n        position: absolute;\n        margin: auto;\n        top: -50px;\n        bottom: -50px;\n        left: -50px;\n        right: -50px;\n        ${props => (props.isActive ? activeCSS : inActiveCSS)};\n    }\n    &:active::after {\n        transition: opacity 0.6s ease-out, background 0.6s ease-out, transform 1s ease-out;\n        opacity: 0.1;\n        transform: scale(1.2);\n        background: ${brand};\n    }\n`\n\nconst activeCSS = css`\n    transition: all ${fast};\n    opacity: 0;\n    transform: scale(2);\n    background: ${brand};\n`\n\nconst inActiveCSS = css`\n    transition: all 0 ease;\n    opacity: 0.3;\n    transform: scale(1);\n    background: rgba(255, 255, 255, 0);\n`\n","import seedRandom from 'seed-random'\n\nconst special = \"' ,\"\n\nconst KEYS = ['qwertyuiop', 'asdfghjkl', 'zxcvbnm', special].map(row => row.split(''))\n\ntype WordKey = {\n    visible: boolean\n    key: string\n}\n\ntype WordKeyList = WordKey[][]\n\nexport const getKeysForWord = (originalWord: string, fakeKeys = 0): WordKeyList => {\n    const word = originalWord.toLowerCase()\n\n    return KEYS.map(row => row.map(k => getKey(k, word, fakeKeys)))\n}\n\nconst getKey = (key: string, word: string, fakeKeys: number): WordKey => {\n    const random = fakeKeys ? seedRandom(key + word)() : 0\n\n    return {\n        key,\n        visible: word.includes(key) || (fakeKeys > random && !special.includes(key)),\n    }\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { brand, white } from '../../styles/colors'\nimport { fast } from '../../styles/transitions'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\n\ninterface KeyProps {\n    onClick(): void\n    symbol?: string\n    visible?: boolean\n}\n\nexport const Key = (props: KeyProps) => (\n    <Container\n        visible={props.visible}\n        onTouchStart={props.onClick}\n        isSpace={props.symbol === ' '}\n    >\n        {props.symbol}\n        <KeyHandler\n            keyEventName={KEYPRESS}\n            keyValue={props.symbol}\n            onKeyHandle={props.onClick}\n        />\n    </Container>\n)\n\nconst Container = styled.button<{ visible?: boolean; isSpace?: boolean }>`\n    width: ${p => (p.isSpace ? '47vw' : '8vw')};\n    height: 7vh;\n    padding: 0;\n    margin: 0 4px;\n    border: 0.4pt solid ${brand};\n    opacity: ${p => (p.visible ? 1 : 0.1)};\n    border-radius: 4px;\n    color: ${brand};\n    font-weight: bold;\n    font-size: 24px;\n    text-align: center;\n    background: none;\n    transition: all ${fast};\n\n    ${p => p.visible && highlight}\n`\nconst highlight = css`\n    &:active {\n        outline: none;\n        background-color: ${brand};\n        color: ${white};\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { getKeysForWord } from './getKeysForWord'\nimport { white } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { Key } from './Key'\n\ninterface KeyboardProps {\n    word: string\n    onPress(key: string): void\n    fakeKeys?: number\n}\n\nexport const Keyboard = (props: KeyboardProps) => (\n    <Container>\n        {getKeysForWord(props.word, props.fakeKeys).map((row, i) => (\n            <Row key={i}>\n                {row.map(k => (\n                    <Key\n                        key={k.key}\n                        symbol={k.key}\n                        visible={k.visible}\n                        onClick={() => {\n                            if (k.visible) {\n                                props.onPress(k.key)\n                            }\n                        }}\n                    />\n                ))}\n            </Row>\n        ))}\n    </Container>\n)\n\nconst Container = styled.div`\n    padding: 0 0 50px;\n    background: ${white};\n    box-shadow: ${barShadow};\n`\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 10px 5px 0;\n`\n\nexport const vibrateOk = () => navigator.vibrate(1)\nexport const vibrateBad = () => navigator.vibrate([1, 100, 1, 100, 1])\n","import { useEffect, useState } from 'react'\n\nexport const useElementSize = (el: HTMLElement | null = document.body) => {\n    const [size, setSize] = useState(() => getSize(el))\n\n    useEffect(() => {\n        const handleResize = () => {\n            setSize(getSize(el))\n        }\n\n        window.addEventListener('resize', handleResize)\n        return () => window.removeEventListener('resize', handleResize)\n    }, [el])\n\n    return size\n}\n\nconst getSize = (el: HTMLElement | null) => {\n    if (!el) {\n        return { width: 0, height: 0 }\n    }\n    const { width, height } = el.getBoundingClientRect()\n    return { width, height }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { animated, useSpring } from 'react-spring'\nimport { brand } from '../../styles/colors'\n\nexport const Pointer = () => {\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-0.3em) scaleX(3)',\n        },\n    })\n    return <PipeContainer style={pipeSpring} />\n}\n\nconst PipeContainer = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 -0.05em;\n    vertical-align: middle;\n    background-color: ${brand};\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useElementSize } from '../../hooks/useElementSize'\nimport { black, muted, light } from '../../styles/colors'\nimport { Pointer } from './Pointer'\n\ntype TypewriterProps = {\n    word: string\n    progress: number\n}\n\nexport const Typewriter = ({ word, progress }: TypewriterProps) => {\n    const { width } = useElementSize()\n    const [preview, setPreview] = useState(false)\n\n    const typed = word.substr(0, progress)\n    const fontSize = Math.min(width / word.length, 80)\n\n    return (\n        <Container\n            onPointerDown={() => setPreview(true)}\n            onPointerOut={() => setPreview(false)}\n            style={{ fontSize }}\n        >\n            <TypeWrapper>\n                {word.split('').map((w, i) => {\n                    return (\n                        <Segment key={w + i}>\n                            {i === progress && <Pointer key={typed} />}\n                            <Letter hide={progress <= i && !preview}>{w}</Letter>\n                        </Segment>\n                    )\n                })}\n            </TypeWrapper>\n            <Hint>Touch to preview</Hint>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n    padding: 0;\n    overflow: hidden;\n    height: 100%;\n`\n\nconst TypeWrapper = styled.div`\n    white-space: nowrap;\n    position: relative;\n    width: 100%;\n`\n\nconst Segment = styled.span`\n    display: inline-block;\n    line-height: 1em;\n    height: 1em;\n    margin: 0;\n    vertical-align: middle;\n    position: relative;\n`\n\nconst Letter = styled.span<{ hide: boolean }>`\n    display: inline-block;\n    text-align: center;\n    position: relative;\n    margin: 0 0.025em;\n    height: 100%;\n    min-width: 0.6em;\n    transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n    transform: ${props => (props.hide ? 'scale(0.5)' : 'scale(1)')};\n    color: ${props => (props.hide ? 'rgba(0,0,0,0.0)' : black)};\n    font-family: 'Ubuntu Mono', monospace;\n\n    &::after {\n        content: '*';\n        position: absolute;\n        text-align: center;\n        top: 0.8em;\n        left: 0;\n        right: 0;\n        line-height: 0.5em;\n        height: 1em;\n        transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n        color: ${muted};\n        transform: ${props => (props.hide ? 'scale(2)' : 'scale(0)')};\n        opacity: ${props => (props.hide ? 1 : 0)};\n    }\n`\n\nconst Hint = styled.small`\n    font-size: 11px;\n    color: ${light};\n`\n","import { dispatch, useGlobalState } from './state/store'\nimport { RouteName } from './types/RouteName'\n\nexport const useRouter = () => {\n    const [route] = useGlobalState('route')\n\n    const setRoute = (route: RouteName) => {\n        dispatch({ type: 'ROUTER/SET_ROUTE', payload: { route } })\n    }\n\n    const goBack = () => {\n        dispatch({ type: 'ROUTER/BACK' })\n    }\n\n    return { route, setRoute, goBack }\n}\n","import { dispatch, useGlobalState } from './state/store'\nimport { UnSavedWord, Word } from './state/types/State'\n\nexport const useWords = () => {\n    const [words] = useGlobalState('words')\n\n    const addWord = (word: UnSavedWord) => {\n        dispatch({ type: 'WORDS/ADD_WORD', payload: word })\n    }\n\n    const addManyWords = (words: UnSavedWord[]) => {\n        dispatch({ type: 'WORDS/ADD_MANY_WORDS', payload: words })\n    }\n\n    const removeWord = (id: string) => {\n        dispatch({ type: 'WORDS/REMOVE_WORD', payload: { id } })\n    }\n\n    const randomWord = (): Word | null => {\n        if (!words || !words.length) return null\n        return words[Math.floor(Math.random() * words.length)]\n    }\n\n    return { words, addWord, addManyWords, removeWord, randomWord }\n}\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyATMnw8FbczS1-0yJwrHl98EunKDAjE1DM',\n    authDomain: 'reword-1.firebaseapp.com',\n    databaseURL: 'https://reword-1.firebaseio.com',\n    projectId: 'reword-1',\n    storageBucket: 'reword-1.appspot.com',\n    messagingSenderId: '220877466530',\n    appId: '1:220877466530:web:7c95c058eaa3a7ed',\n}\nexport const firebaseApp = firebase.initializeApp(firebaseConfig)\n","import React, { useEffect, useState } from 'react'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\nimport styled from 'styled-components'\nimport { Icon } from '../../components/Icon'\nimport { Keyboard } from '../../components/Keyboard'\nimport { Typewriter } from '../../components/Typewriter'\nimport { useRouter, useWords } from '../../store'\nimport { brand, good, white, gray } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\nimport { radius } from '../../styles/values'\nimport { transition } from '../../styles/transitions'\n\nexport const Game = () => {\n    const { goBack } = useRouter()\n    const { words, randomWord } = useWords()\n    const [progress, setProgress] = useState(0)\n    const [word, setWord] = useState(randomWord())\n\n    // Update when words changes\n    useEffect(() => {\n        setWord(randomWord())\n    }, [words])\n\n    // Generally for development purposes only\n    if (!word) return null\n\n    const wordRight = word.name.substr(progress)\n    const isComplete = progress === word.name.length\n\n    const handleKeyPress = (key: string) => {\n        const currentWord = word.name[progress].toLocaleLowerCase()\n        if (key === currentWord) {\n            setProgress(progress + 1)\n        }\n    }\n\n    const handleNextWord = () => {\n        setWord(randomWord())\n        setProgress(0)\n    }\n\n    const handleRetry = () => {\n        setProgress(0)\n    }\n\n    return (\n        <Container>\n            <Row>\n                <div>\n                    <h1>{word.translation}</h1>\n                    <h5>{isComplete ? word.example : '\\u00a0'}</h5>\n                </div>\n            </Row>\n            <Row>\n                <Typewriter word={word.name} progress={progress} key={word.name} />\n            </Row>\n            <ActionButtonsWrapper>\n                <ActionButton onClick={goBack}>\n                    <Icon name=\"Cross\" /> <span>End</span>\n                </ActionButton>\n                <ActionButton onClick={handleRetry}>\n                    <Icon name=\"Reload\" /> <span>Retry</span>\n                </ActionButton>\n                <ActionButton onClick={handleNextWord}>\n                    <Icon name=\"Play\" /> <span>Skip</span>\n                </ActionButton>\n            </ActionButtonsWrapper>\n            <Bottom>\n                <Keyboard word={wordRight} onPress={handleKeyPress} />\n                {isComplete && (\n                    <Complete>\n                        <h2>Done!</h2>\n                        <DoneButton onClick={handleNextWord}>\n                            Next word\n                            <Icon name=\"Play\" />\n                        </DoneButton>\n\n                        <KeyHandler\n                            keyEventName={KEYPRESS}\n                            keyValue=\"Enter\"\n                            onKeyHandle={handleNextWord}\n                        />\n                    </Complete>\n                )}\n            </Bottom>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    height: 100%;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    text-align: center;\n    overflow: hidden;\n    user-select: none;\n`\nconst Row = styled.div`\n    width: 100%;\n    flex: 1 0 auto;\n`\n\nconst Bottom = styled.div`\n    width: 100%;\n    position: relative;\n`\n\nconst Complete = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nconst DoneButton = styled.button`\n    padding: 30px 50px;\n    border: none;\n    color: ${white};\n    background: ${good};\n    border-radius: 4px;\n    box-shadow: ${floatingShadow};\n    font-weight: bold;\n    font-size: 24px;\n`\n\nconst ActionButtonsWrapper = styled.div`\n    display: grid;\n    grid-auto-columns: 1fr;\n    grid-auto-flow: column;\n    /* grid-template-columns: 1fr 1fr 1fr; */\n    grid-gap: 10px;\n`\n\nconst ActionButton = styled.button`\n    padding: 25px 40px;\n    color: ${gray};\n    font-size: 1em;\n    background: none;\n    border: none;\n    border-radius: ${radius};\n    ${transition('background-color')};\n\n    span {\n        vertical-align: middle;\n    }\n\n    &:active {\n        background-color: rgba(0, 0, 0, 0.1);\n    }\n`\n","export const radius = '4px'\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useSpring, animated } from 'react-spring'\nimport { brand } from '../../styles/colors'\n\nexport const Logo = () => {\n    const reSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 200,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const wordSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 300,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-1.2em) scaleX(5)',\n        },\n    })\n\n    return (\n        <Container>\n            <First style={reSpring}>Re</First>\n            <Pipe style={pipeSpring} />\n            <Last style={wordSpring}>word</Last>\n        </Container>\n    )\n}\n\nconst Container = styled.h1`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n`\n\nconst First = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Last = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Pipe = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 0.05em;\n    vertical-align: middle;\n    background-color: ${brand};\n`\n","import React from 'react'\nimport { WordsState } from '../../store/state/types/State'\nimport { useRouter } from '../../store'\nimport { RouteName } from '../../store/types/RouteName'\nimport { Icon } from '../../components/Icon'\nimport { white, brand } from '../../styles/colors'\nimport styled from 'styled-components'\nimport { floatingShadow } from '../../styles/shadow'\n\ntype StartButtonProps = {\n    words: WordsState\n}\n\nexport const StartButton = (props: StartButtonProps) => {\n    const { setRoute } = useRouter()\n\n    if (!props.words && !props.words.length) {\n        return (\n            <CircleButton onClick={() => setRoute(RouteName.Words)}>\n                <Icon name=\"Plus\" size=\"large\" block />\n                Word\n            </CircleButton>\n        )\n    }\n\n    return (\n        <CircleButton onClick={() => setRoute(RouteName.Game)}>\n            <Icon name=\"Play\" size=\"large\" block />\n            Play\n        </CircleButton>\n    )\n}\n\nconst playSize = '45vmin'\n\nconst CircleButton = styled.button`\n    background: ${white};\n    border: none;\n    box-shadow: ${floatingShadow};\n    width: ${playSize};\n    height: ${playSize};\n    max-width: 260px;\n    max-height: 260px;\n    border-radius: 100%;\n    color: ${brand};\n    font-size: 36px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { brand } from '../../styles/colors'\n\nexport const Loading = () => (\n    <Container>\n        <svg\n            version=\"1.1\"\n            id=\"loader-1\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"40px\"\n            height=\"40px\"\n            viewBox=\"0 0 50 50\"\n        >\n            <path\n                fill={brand}\n                d=\"M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z\"\n            >\n                <animateTransform\n                    attributeType=\"xml\"\n                    attributeName=\"transform\"\n                    type=\"rotate\"\n                    from=\"0 25 25\"\n                    to=\"360 25 25\"\n                    dur=\"0.6s\"\n                    repeatCount=\"indefinite\"\n                />\n            </path>\n        </svg>\n    </Container>\n)\n\nconst Container = styled.div`\n    display: inline-block;\n    padding: 10px;\n`\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Loading } from './Loading'\n\nexport const FullLoading: FC = () => {\n    return (\n        <Container>\n            <Loading />\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { brand, muted } from '../../styles/colors'\n\ntype InputProps = {\n    value: string\n    type?: string\n    name?: string\n    placeholder: string\n    onChange: (value: string) => void\n    autoFocus?: boolean\n}\n\nexport const Input = (props: InputProps) => {\n    const { value, type = 'text', placeholder, onChange, autoFocus, name } = props\n\n    const [focus, setFocus] = useState(false)\n    const [linePosition, setLinePosition] = useState(0)\n\n    const labelRef = useRef<HTMLLabelElement>(null)\n\n    const defaultLinePosition = labelRef.current\n        ? labelRef.current.getBoundingClientRect().width / 2\n        : 0\n\n    useEffect(() => {\n        setLinePosition(defaultLinePosition)\n    }, [defaultLinePosition])\n\n    return (\n        <Label\n            active={focus}\n            onMouseDown={e => {\n                setLinePosition(e.pageX)\n            }}\n            ref={labelRef}\n        >\n            <LabelName move={value !== ''}>{placeholder}</LabelName>\n            <InputStyled\n                type={type}\n                value={value}\n                onChange={event => onChange(event.target.value)}\n                onFocus={() => setFocus(true)}\n                onBlur={() => {\n                    setLinePosition(defaultLinePosition)\n                    setFocus(false)\n                }}\n                autoFocus={autoFocus}\n                name={name}\n            />\n            <span style={{ transformOrigin: `${linePosition}px 0` }} />\n        </Label>\n    )\n}\n\nconst Label = styled.label<{ active: boolean }>`\n    position: relative;\n    display: block;\n    span {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: 2px;\n        opacity: 1;\n        transition: transform 0.25s ease-out;\n        transform: scaleX(${props => (props.active ? 1 : 0)});\n        background: ${brand};\n        pointer-events: none;\n    }\n`\n\nconst LabelName = styled.div<{ move: boolean }>`\n    position: absolute;\n    top: 9px;\n    left: 0px;\n    font-size: 15px;\n    transition: transform 0.15s ease-out;\n    color: ${muted};\n    cursor: text;\n    transform-origin: 0 0; // top left for scale\n    transform: ${props =>\n        props.move ? `translateY(-17px) scale(0.8)` : `translate(0px)`};\n`\n\nconst InputStyled = styled.input`\n    padding: 12px 0 9px;\n    border: none;\n    font-size: 15px;\n    display: block;\n    width: 100%;\n    margin: 15px 0;\n    border-bottom: 2px solid ${muted};\n`\n","import React, {\n    Children,\n    DependencyList,\n    ReactElement,\n    RefObject,\n    useEffect,\n    useRef,\n    useState,\n} from 'react'\nimport styled, { css, keyframes } from 'styled-components'\nimport { TabsItemProps } from '.'\nimport { black, brand } from '../../styles/colors'\nimport { fast, transition } from '../../styles/transitions'\n\ntype TabsProps = {\n    children: ReactElement<TabsItemProps>[] | ReactElement<TabsItemProps>\n}\n\nexport const Tabs = (props: TabsProps) => {\n    const items = Children.toArray<ReactElement<TabsItemProps>>(props.children)\n\n    const currentIndex = items.findIndex(el => el.props.isActive)\n    const [active, setActive] = useState(currentIndex > 0 ? currentIndex : 0)\n    const [prevActive, setPrevActive] = useState<number | null>(null)\n\n    const refNav = useRef(null)\n    const refActive = useRef(null)\n\n    const pos = useLinePosition(refNav, refActive, [active])\n\n    const activeItem = items[active]\n    const prevActiveItem = items[prevActive]\n\n    return (\n        <Container>\n            <Nav ref={refNav}>\n                {items.map((el, index) => (\n                    <NavItem\n                        ref={index === active ? refActive : null}\n                        key={index}\n                        onClick={() => {\n                            if (active === index) return\n                            setPrevActive(active)\n                            setActive(index)\n                        }}\n                        active={index === active}\n                    >\n                        {el.props.name}\n                    </NavItem>\n                ))}\n                <Line\n                    style={{ transform: `translateX(${pos.left}px)`, width: pos.width }}\n                />\n            </Nav>\n            <Content>\n                {prevActiveItem && (\n                    <ContentItem\n                        animation={prevActive > active ? 'rightOut' : 'leftOut'}\n                        key={prevActiveItem.props.name}\n                    >\n                        <prevActiveItem.type {...prevActiveItem.props} />\n                    </ContentItem>\n                )}\n                <ContentItem\n                    animation={\n                        prevActiveItem && (prevActive < active ? 'rightIn' : 'leftIn')\n                    }\n                    key={activeItem.props.name}\n                >\n                    <activeItem.type {...activeItem.props} />\n                </ContentItem>\n            </Content>\n        </Container>\n    )\n}\n\nconst Container = styled.div``\nconst Nav = styled.div`\n    position: relative;\n    display: grid;\n    grid-auto-columns: 1fr;\n    grid-auto-flow: column;\n`\nconst Content = styled.div`\n    position: relative;\n    overflow: hidden;\n`\n\nconst rightOut = keyframes`\n  from {\n    transform: translateX(0%);\n  }\n\n  to {\n    transform: translateX(100%);\n  }\n`\nconst rightIn = keyframes`\n  from {\n    transform: translateX(100%);\n  }\n\n  to {\n    transform: translateX(0%);\n  }\n`\nconst leftOut = keyframes`\n  from {\n    transform: translateX(0%);\n  }\n\n  to {\n    transform: translateX(-100%);\n  }\n`\nconst leftIn = keyframes`\n  from {\n    transform: translateX(-100%);\n  }\n\n  to {\n    transform: translateX(0%);\n  }\n`\n\nconst animations = {\n    rightOut,\n    rightIn,\n    leftOut,\n    leftIn,\n}\n\nconst ContentItem = styled.div<{ animation?: string }>`\n    position: relative;\n    display: block;\n    top: 0;\n    left: 0;\n    width: 100%;\n    ${props =>\n        props.animation &&\n        props.animation.endsWith('Out') &&\n        css`\n            position: absolute;\n        `}\n    ${props =>\n        props.animation &&\n        css`\n            animation: ${animations[props.animation]} ${fast} forwards;\n        `}\n`\n\nconst Line = styled.div`\n    height: 2px;\n    ${transition('transform', 'width')}\n    position: absolute;\n    top: 100%;\n    z-index: 10;\n    background: ${brand};\n`\n\nconst NavItem = styled.button<{ active: boolean }>`\n    display: block;\n    padding: 15px 10px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: ${p => (p.active ? brand : black)};\n`\n\nconst useLinePosition = (\n    wrapperEl: RefObject<HTMLElement>,\n    activeEl: RefObject<HTMLElement>,\n    deps: DependencyList\n) => {\n    const [left, setLeft] = useState(0)\n    const [width, setWidth] = useState(0)\n    // const { innerWidth } = useWindowSize();\n\n    useEffect(() => {\n        if (!activeEl.current || !wrapperEl.current) {\n            return\n        }\n        const activeRect = activeEl.current.getBoundingClientRect()\n        const wrapperRect = wrapperEl.current.getBoundingClientRect()\n\n        setLeft(activeRect.left - wrapperRect.left)\n        setWidth(activeRect.width)\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [...deps, activeEl, wrapperEl])\n    // [...deps, innerWidth]\n    return { left, width }\n}\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nexport type TabsItemProps = {\n    name: string\n    isActive?: boolean\n    children: ReactNode\n}\n\nexport const TabsItem = (props: TabsItemProps) => <Container>{props.children}</Container>\n\nconst Container = styled.div``\n","import { firebaseApp } from './firebase'\nimport { dispatch } from './state/store'\nimport { useEffect, useState } from 'react'\nimport { useRouter } from './useRouter'\nimport { RouteName } from './types/RouteName'\n\nexport const useAuthActions = () => {\n    const { setRoute } = useRouter()\n    const [signInError, setSignInError] = useState('')\n    const [createAccountError, setCreateAccountError] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    const createAccount = async (email: string, password: string) => {\n        setLoading(true)\n        try {\n            await firebaseApp.auth().createUserWithEmailAndPassword(email, password)\n        } catch (e) {\n            setCreateAccountError(e.message)\n        }\n        setLoading(false)\n    }\n\n    const signIn = async (email: string, password: string) => {\n        setLoading(true)\n        try {\n            await firebaseApp.auth().signInWithEmailAndPassword(email, password)\n        } catch (e) {\n            if (e.code === 'auth/user-not-found') {\n                setSignInError('User not found')\n            } else {\n                setSignInError(e.message)\n            }\n        }\n        setLoading(false)\n    }\n\n    const signOut = async () => {\n        setLoading(true)\n        await firebaseApp.auth().signOut()\n        setRoute(RouteName.Home)\n        setLoading(false)\n    }\n\n    return { signIn, signOut, createAccount, signInError, createAccountError, loading }\n}\n\nexport const useWatchAuthChange = () => {\n    useEffect(() => {\n        firebaseApp.auth().onAuthStateChanged(user => {\n            dispatch({\n                type: 'USER/CHANGE',\n                payload: user\n                    ? { email: user.email, id: user.uid, name: user.displayName }\n                    : null,\n            })\n        })\n    }, [])\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Input } from '../../components/Input'\nimport { Tabs, TabsItem } from '../../components/Tabs'\nimport { useAuthActions } from '../../store/useAuth'\nimport { brand, white, danger } from '../../styles/colors'\nimport { FullLoading, Loading } from '../../components/Loading'\n\nexport const AuthForm = () => {\n    const {\n        signIn,\n        signInError,\n        createAccount,\n        createAccountError,\n        loading,\n    } = useAuthActions()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    return (\n        <Container>\n            <Tabs>\n                <TabsItem name=\"Sign in\">\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault()\n                            signIn(email, password)\n                        }}\n                    >\n                        <ContentWrapper>\n                            <h2>I already have an account</h2>\n                            <ErrorMessage>{signInError}</ErrorMessage>\n                            <Input\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                placeholder=\"email\"\n                            />\n                            <Input\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                placeholder=\"password\"\n                            />\n                        </ContentWrapper>\n                        <FullButton>Sign in</FullButton>\n                    </form>\n                </TabsItem>\n                <TabsItem name=\"Sing up\">\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault()\n                            createAccount(email, password)\n                        }}\n                    >\n                        <ContentWrapper>\n                            <h2>Create an account</h2>\n                            <ErrorMessage>{createAccountError}</ErrorMessage>\n                            <Input\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                placeholder=\"email\"\n                            />\n                            <Input\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                placeholder=\"password\"\n                            />\n                        </ContentWrapper>\n                        <FullButton>Sign up</FullButton>\n                    </form>\n                </TabsItem>\n            </Tabs>\n            {loading && (\n                <Overlay>\n                    <Loading />\n                </Overlay>\n            )}\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    position: relative;\n`\n\nconst Overlay = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(255, 255, 255, 0.8);\n    z-index: 10;\n`\n\nconst ContentWrapper = styled.div`\n    padding: 40px 30px;\n`\n\nconst FullButton = styled.button`\n    display: block;\n    width: 100%;\n    text-align: center;\n    color: ${white};\n    font-weight: bold;\n    padding: 18px 0;\n    border: none;\n    background: ${brand};\n`\n\nconst ErrorMessage = styled.div`\n    color: ${danger};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Logo } from '../../components/Logo'\nimport { useWords } from '../../store'\nimport { useIsLoading } from '../../store/useIsLoading'\nimport { StartButton } from './StartButton'\nimport { FullLoading } from '../../components/Loading'\nimport { AuthForm } from './AuthForm'\nimport { white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\n\nexport const Home = () => {\n    const { isLoading, loggedIn } = useIsLoading()\n    const { words } = useWords()\n\n    if (isLoading) {\n        return <FullLoading />\n    }\n\n    return (\n        <Container>\n            <Logo />\n            {loggedIn ? (\n                <>\n                    <Container>\n                        <StartButton words={words} />\n                    </Container>\n                    <WordsCount>\n                        You added <b>{words.length}</b> words\n                    </WordsCount>\n                </>\n            ) : (\n                <AuthFormWrapper>\n                    <AuthForm />\n                </AuthFormWrapper>\n            )}\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: grid;\n    height: 100%;\n    grid-auto-rows: 1fr 3fr 1fr;\n    align-items: center;\n    justify-items: center;\n`\n\nconst WordsCount = styled.div`\n    padding: 25px;\n    text-align: center;\n`\n\nconst AuthFormWrapper = styled.main`\n    background: ${white};\n    box-shadow: ${floatingShadow};\n    border-radius: 5px;\n    width: 100%;\n    max-width: 360px;\n    overflow: hidden;\n`\n","import styled, { css } from 'styled-components'\nimport { brand, white, black } from '../../styles/colors'\nimport { now, slow } from '../../styles/transitions'\n\nexport const Button = styled.button<{ size?: string; color?: string }>`\n    display: inline-block;\n    padding: 10px 25px;\n    transition: opacity ${slow};\n    font-size: ${p => (p.size && p.size == '20px' ? '20px' : '14px')};\n\n    ${p => {\n        if (p.color == 'transparent') {\n            return css`\n                border: 2px solid transparent;\n                color: ${black};\n                background: transparent;\n            `\n        } else if (p.color == 'primary') {\n            return css`\n                border: 2px solid ${brand};\n                color: ${white};\n                background: ${brand};\n            `\n        } else {\n            return css`\n                border: 2px solid ${brand};\n                color: ${black};\n                background: transparent;\n            `\n        }\n    }};\n    border-radius: 5px;\n    &:active {\n        opacity: 0.8;\n        transition: opacity ${now};\n    }\n`\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { IconName, Icon } from '../Icon'\nimport { grayBg } from '../../styles/colors'\n\ntype HeaderProps = {\n    title: string\n    iconName: IconName\n    children?: ReactNode\n}\n\nexport const Header = (props: HeaderProps) => {\n    return (\n        <HeaderWrapper>\n            <Icon name={props.iconName} size=\"large\" />\n            <h1>{props.title}</h1>\n            {props.children}\n        </HeaderWrapper>\n    )\n}\n\nconst HeaderWrapper = styled.header`\n    background: ${grayBg};\n    display: flex;\n    min-height: 260px;\n    padding: 15px;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n","import React from 'react'\nimport { Button } from '../../components/Button'\nimport { Header } from '../../components/Header'\nimport { useAuthActions } from '../../store/useAuth'\nimport styled from 'styled-components'\nimport { useGlobalState } from '../../store/state/store'\n\nexport const Settings = () => {\n    const { signOut } = useAuthActions()\n    const [user] = useGlobalState('user')\n\n    return (\n        <div>\n            <Header title=\"Profile\" iconName=\"Profile\" />\n            <Center>\n                Logged as <strong>{user.email}</strong>\n            </Center>\n            <Center>\n                <Button type=\"button\" onClick={() => signOut()}>\n                    Sign out\n                </Button>\n            </Center>\n        </div>\n    )\n}\n\nconst Center = styled.div`\n    text-align: center;\n    padding: 20px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { IconName, Icon } from '../Icon'\nimport { brand, white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\nimport { NAV_HEIGHT } from '../Nav'\n\ntype FloatingButtonProps = {\n    onClick: () => void\n    iconName: IconName\n}\n\nexport const FloatingButton = (props: FloatingButtonProps) => (\n    <Button onClick={props.onClick}>\n        <Icon name={props.iconName} size=\"big\" />\n    </Button>\n)\n\nconst Button = styled.button`\n    position: relative;\n    display: block;\n    padding: 13px;\n    border: 2px solid ${white};\n    color: ${brand};\n    box-shadow: ${floatingShadow};\n    border-radius: 50%;\n    background: ${white};\n    transition: 0.2s;\n    margin: 15px 15px 17px auto;\n    position: sticky;\n    bottom: 17px;\n    &:active {\n        border-color: ${brand};\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { barShadow } from '../../styles/shadow'\nimport { Icon } from '../Icon'\n\ntype SearchProps = {\n    value: string\n    onChange: (value: string) => void\n}\n\nexport const Search = (props: SearchProps) => (\n    <SearchBox>\n        <Input\n            type=\"text\"\n            value={props.value}\n            onChange={e => props.onChange(e.target.value)}\n            placeholder=\"Search…\"\n        />\n        <IconPos onClick={() => props.onChange('')}>\n            {props.value ? (\n                <Icon name=\"Cross\" size=\"normal\" />\n            ) : (\n                <Icon name=\"Search\" size=\"normal\" />\n            )}\n        </IconPos>\n    </SearchBox>\n)\n\nconst SearchBox = styled.div`\n    position: relative;\n    margin-top: 15px;\n`\n\nconst Input = styled.input`\n    padding: 13px 20px;\n    width: 100%;\n    max-width: 290px;\n    border-radius: 20px;\n    border: 1px solid #fff;\n    box-shadow: ${barShadow};\n`\n\nconst IconPos = styled.div`\n    position: absolute;\n    top: 0;\n    right: 15px;\n    bottom: 0;\n    margin: auto 0;\n    height: 24px;\n    line-height: 0;\n`\n","import {\n    ENTERING,\n    EXITED,\n    EXITING,\n    TransitionStatus,\n} from 'react-transition-group/Transition'\nimport { css, keyframes } from 'styled-components'\n\nexport const fadeDuration = 400\nexport const easing = 'cubic-bezier(0.29, 0.87, 0.54, 0.99)'\n\nconst fadeUpKeyframes = keyframes`\n    from {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n    to {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n`\n\nconst fadeDownKeyframes = keyframes`\n    from {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n    to {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n`\n\nconst fadeInKeyframes = keyframes`\n    from { opacity: 0; }\n    to { opacity: 1; }\n`\n\nconst fadeOutKeyframes = keyframes`\n    from { opacity: 1; }\n    to { opacity: 0; }\n`\n\nexport const fadeUpAnimation = css`\n    animation: ${fadeUpKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeDownAnimation = css`\n    animation: ${fadeDownKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeUpDownAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeUpAnimation};\n    ${status === EXITING && fadeDownAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'pointer-events: none; opacity: 0;'};\n`\n\nexport const fadeInAnimation = css`\n    animation: ${fadeInKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeOutAnimation = css`\n    animation: ${fadeOutKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeInOutAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeInAnimation};\n    ${status === EXITING && fadeOutAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'pointer-events: none; opacity: 0;'};\n`\n","import React, { ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport Transition, { TransitionStatus } from 'react-transition-group/Transition'\nimport styled from 'styled-components'\nimport { fadeInOutAnimation, fadeUpDownAnimation } from '../../styles/animations'\nimport { white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\n\ntype ModalProps = {\n    show: boolean\n    children?: ReactNode\n    onOverlayClick?: () => void\n}\n\nexport const Modal = (props: ModalProps) => {\n    return ReactDOM.createPortal(\n        <Transition in={props.show} timeout={1000}>\n            {status => (\n                <>\n                    <ModalBox status={status}>{props.children}</ModalBox>\n                    <Overlay status={status} onClick={props.onOverlayClick} />\n                </>\n            )}\n        </Transition>,\n        modalRoot\n    )\n}\n\nconst modalRoot = document.getElementById('modals')\n\nconst ModalBox = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    left: 0;\n    max-width: 750px;\n    right: 0;\n    display: block;\n    bottom: 15px;\n    margin: 0 auto auto;\n    width: calc(100vw - 20px);\n    max-height: calc(100vh - 20px);\n    overflow-y: auto;\n    background: ${white};\n    border-radius: 4px;\n    z-index: 1000;\n    padding: 15px;\n    box-shadow: ${floatingShadow};\n    ${p => fadeUpDownAnimation(p.status)};\n`\n\nconst Overlay = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.1);\n    z-index: 100;\n    ${p => fadeInOutAnimation(p.status)};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport { brand, white } from '../../styles/colors'\nimport { Icon } from '../Icon'\n\ntype EditableListProps = {\n    list: string[]\n    onChange: (list: string[]) => void\n}\nexport const EditableList = (props: EditableListProps) => (\n    <DragDropContext\n        onDragEnd={result => {\n            if (!result.destination) return\n\n            const items = reorder(\n                props.list,\n                result.source.index,\n                result.destination.index\n            )\n            props.onChange(items)\n        }}\n    >\n        <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n                <List {...provided.droppableProps} ref={provided.innerRef}>\n                    {props.list.map((item, index) => (\n                        <Draggable key={item} draggableId={item} index={index}>\n                            {(provided, snapshot) => (\n                                <ListElement\n                                    key={index}\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={provided.draggableProps.style}\n                                >\n                                    {item}\n                                    <Cross\n                                        onClick={() => {\n                                            props.onChange(remove(props.list, index))\n                                        }}\n                                    >\n                                        <Icon name=\"Cross\" size=\"normal\" />\n                                    </Cross>\n                                </ListElement>\n                            )}\n                        </Draggable>\n                    ))}\n                    {provided.placeholder}\n                </List>\n            )}\n        </Droppable>\n    </DragDropContext>\n)\n\nconst remove = (list: string[], index: number) => list.filter((el, i) => index !== i)\n\nconst reorder = (list: string[], startIndex: number, endIndex: number) => {\n    const result = Array.from(list)\n    const [removed] = result.splice(startIndex, 1)\n    result.splice(endIndex, 0, removed)\n\n    return result\n}\n\nconst List = styled.div``\nconst ListElement = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n`\nconst Cross = styled.button`\n    border: none;\n    padding: 4px;\n    width: 32px;\n    color: ${brand};\n    background: none;\n`\n","import { DictionaryItem } from './types'\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('')\nconst cache = {}\n\nexport const fetchDictionary = async (\n    letter: string\n): Promise<DictionaryItem[] | null> => {\n    if (!alphabet.includes(letter)) {\n        return null\n    }\n\n    if (cache[letter]) {\n        return cache[letter]\n    }\n\n    const res = await fetch(`/dictionary/en-pl/${letter}.json`)\n    const data: DictionaryItem[] = await res.json()\n\n    cache[letter] = data\n\n    return data\n}\n","import { useState, useMemo } from 'react'\nimport { useDebounce } from '../useDebounce'\nimport { fetchDictionary } from './fetchDictionary'\nimport { DictionaryItem } from './types'\n\nexport const useDictionary = (query: string) => {\n    const [currentQuery, setCurrentQuery] = useState('')\n\n    const [results, setResults] = useState<DictionaryItem[]>([])\n\n    useDebounce(() => setCurrentQuery(query.toLowerCase()), 400, [query])\n\n    useMemo(() => {\n        const letter = (currentQuery[0] || '').toLowerCase()\n\n        const run = async () => {\n            const list = await fetchDictionary(letter)\n\n            if (!list) {\n                setResults([])\n                return\n            }\n\n            const results = list\n                .filter(item => item.word.toLowerCase().startsWith(currentQuery))\n                .slice(0, 5)\n\n            setResults(results)\n        }\n\n        run()\n    }, [currentQuery])\n\n    return { results }\n}\n","import { useEffect } from 'react'\n\nexport const useDebounce = (fn: () => any, ms: number = 0, args: any[] = []) => {\n    useEffect(() => {\n        const handle = setTimeout(fn.bind(null, args), ms)\n\n        return () => {\n            clearTimeout(handle)\n        }\n    }, [args, fn, ms])\n}\n","import React, { useState } from 'react'\nimport useList from 'react-use/lib/useList'\nimport styled, { keyframes, css } from 'styled-components'\nimport { Button } from '../../components/Button'\nimport { EditableList } from '../../components/EditableList'\nimport { Input } from '../../components/Input'\nimport { useDictionary } from '../../hooks/useDictionary'\nimport { DictionaryTrans } from '../../hooks/useDictionary/types'\nimport { UnSavedWord } from '../../store/state/types/State'\nimport { light, white, varyLight, brand } from '../../styles/colors'\nimport { useWords } from '../../store'\nimport { floatingShadow } from '../../styles/shadow'\nimport { fadeDuration, easing } from '../../styles/animations'\nimport { fast } from '../../styles/transitions'\n\ntype WordFormProps = {\n    onDismiss: () => void\n}\n\nexport const WordForm = (props: WordFormProps) => {\n    const { addWord } = useWords()\n\n    const [wordInput, setWordInput] = useState('')\n    const [translationInput, setTranslationInput] = useState('')\n    const [exampleInput, setExampleInput] = useState('')\n\n    const [translationList, translationListActions] = useList<string>()\n    const [exampleList, exampleListActions] = useList<string>()\n\n    const { results } = useDictionary(wordInput)\n\n    const addNewWord = () => {\n        if (wordInput && translationList.length) {\n            addWord({\n                name: wordInput,\n                translation: translationList,\n                example: exampleList,\n            })\n            setWordInput('')\n            setTranslationInput('')\n            setExampleInput('')\n            translationListActions.clear()\n            exampleListActions.clear()\n            props.onDismiss()\n        }\n    }\n\n    const getTrans = (trans: DictionaryTrans[]) => trans.map(t => t.texts[0]).join(', ')\n\n    return (\n        <>\n            <h4>Word</h4>\n            <div>\n                <Input value={wordInput} placeholder=\"Word\" onChange={setWordInput} />\n            </div>\n            {!translationList.length && (\n                <Autocomplete count={results.length}>\n                    {results.map(item => (\n                        <AutocompleteItem\n                            key={item.id}\n                            onClick={() => {\n                                setWordInput(item.word)\n                                const translations = item.trans.map(t => t.texts[0])\n                                translationListActions.set(translations)\n                            }}\n                        >\n                            <b>{item.word}</b> - {getTrans(item.trans)}\n                        </AutocompleteItem>\n                    ))}\n                </Autocomplete>\n            )}\n\n            <h4>Translations</h4>\n            <EditableList list={translationList} onChange={translationListActions.set} />\n            <InputWithButtonWrapper>\n                <div>\n                    <Input\n                        value={translationInput}\n                        onChange={setTranslationInput}\n                        placeholder=\"Translation\"\n                    />\n                </div>\n                <Button\n                    onClick={() => {\n                        if (!translationInput) return\n                        translationListActions.push(translationInput)\n                        setTranslationInput('')\n                    }}\n                >\n                    +\n                </Button>\n            </InputWithButtonWrapper>\n\n            <h4>Examples</h4>\n            <EditableList list={exampleList} onChange={translationListActions.set} />\n            <InputWithButtonWrapper>\n                <div>\n                    <Input\n                        value={exampleInput}\n                        onChange={setExampleInput}\n                        placeholder=\"Example\"\n                    />\n                </div>\n                <Button\n                    onClick={() => {\n                        if (!exampleInput) return\n                        exampleListActions.push(exampleInput)\n                        setExampleInput('')\n                    }}\n                >\n                    +\n                </Button>\n            </InputWithButtonWrapper>\n            <ModalActions>\n                <Button onClick={props.onDismiss} color=\"transparent\">\n                    Close\n                </Button>\n                <Button onClick={addNewWord} color=\"primary\">\n                    Save\n                </Button>\n            </ModalActions>\n        </>\n    )\n}\n\nconst Autocomplete = styled.div<{ count }>`\n    ${p =>\n        css`\n            height: ${p.count * 46}px;\n        `};\n\n    transition: height ${fadeDuration}ms ${easing};\n    background: ${varyLight};\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst AutocompleteItem = styled.button`\n    border-radius: 5px;\n    transition: all ${fast};\n    display: block;\n    width: 100%;\n    padding: 15px;\n    border: none;\n    border-bottom: 1px solid ${varyLight};\n    background: none;\n    text-align: left;\n    font-size: 14px;\n    white-space: nowrap;\n    overflow: hidden;\n    box-shadow: 0 0 0 1px rgba(255, 255, 255, 0) inset;\n    text-emphasis: emphasis;\n\n    &:last-child {\n        border-bottom: none;\n    }\n    &:focus {\n        background: ${white};\n        box-shadow: 0 0 0 1px ${brand} inset;\n    }\n`\n\nconst InputWithButtonWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n`\n\nconst ModalActions = styled.div`\n    margin-top: 15px;\n    display: grid;\n    grid-auto-flow: column;\n    grid-auto-columns: auto;\n    grid-gap: 15px;\n    justify-content: end;\n`\n","import { UnSavedWord } from '../state/types/State'\n\ntype Preset = {\n    id: string\n    name: string\n    getList(): Promise<UnSavedWord[]>\n}\n\nexport const presets: Preset[] = [\n    {\n        id: 'basic-weekdays',\n        name: 'Weekdays',\n        getList: () =>\n            import('./base/weekdays').then(({ list }) =>\n                list.map(el => ({ ...el, preset: 'basic-weekdays' }))\n            ),\n    },\n]\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../components/Button'\nimport { presets } from '../../store/presets'\nimport { useWords } from '../../store'\n\nexport const WordPresets = () => {\n    const { addManyWords } = useWords()\n\n    return (\n        <Container>\n            <ul>\n                {presets.map(item => (\n                    <li key={item.id}>\n                        {item.name}\n                        <Button onClick={() => item.getList().then(addManyWords)}>\n                            +\n                        </Button>\n                    </li>\n                ))}\n            </ul>\n        </Container>\n    )\n}\n\nconst Container = styled.div``\n","import React from 'react'\nimport { Modal } from '../../components/Modal'\nimport { UnSavedWord } from '../../store/state/types/State'\nimport { Tabs, TabsItem } from '../../components/Tabs'\nimport { WordForm } from './WordForm'\nimport { WordPresets } from './WordPresets'\n\ntype WordModalProps = {\n    show: boolean\n    onDismiss: () => void\n}\n\nexport const WordModal = (props: WordModalProps) => {\n    return (\n        <Modal show={props.show} onOverlayClick={props.onDismiss}>\n            <Tabs>\n                <TabsItem name=\"New word\">\n                    <WordForm onDismiss={props.onDismiss} />\n                </TabsItem>\n                <TabsItem name=\"Presets\">\n                    <WordPresets />\n                </TabsItem>\n            </Tabs>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Word } from '../../store/state/types/State'\nimport { light, brand, gray } from '../../styles/colors'\nimport { Icon } from '../../components/Icon'\n\ntype WordsItemProps = {\n    word: Word\n    removeWord: () => void\n}\n\nexport const WordsItem = (props: WordsItemProps) => (\n    <Container>\n        <div>\n            <Name>{props.word.name} - </Name>\n            <Translations>{props.word.translation.join(', ')}</Translations>\n\n            {props.word.action && 'Loading…'}\n            {!!props.word.example.length && (\n                <Examples>{props.word.example.join(', ')}</Examples>\n            )}\n        </div>\n\n        <RemoveButton onClick={props.removeWord}>\n            <Icon name=\"Cross\" size=\"normal\" />\n        </RemoveButton>\n    </Container>\n)\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    padding: 12px;\n    border-bottom: 1px solid ${light};\n`\n\nconst Name = styled.strong`\n    font-weight: normal;\n    font-size: 1.2em;\n`\n\nconst Translations = styled.span`\n    color: ${brand};\n    font-size: 1.2em;\n`\n\nconst Examples = styled.div`\n    color: ${gray};\n    font-size: 0.8em;\n    font-style: italic;\n`\n\nconst RemoveButton = styled.button`\n    border: none;\n    background: none;\n`\n","import React, { useState } from 'react'\nimport { FloatingButton } from '../../components/FloatingButton'\nimport { Header } from '../../components/Header'\nimport { Search } from '../../components/Search'\nimport { useWords } from '../../store'\nimport { WordModal } from './WordModal'\nimport { WordsItem } from './WordsItem'\nimport styled from 'styled-components'\nimport { Space } from '../../components/Space/Space'\n\nexport const Words = () => {\n    const [search, setSearch] = useState('')\n\n    const { words, removeWord } = useWords()\n    const [showModal, setShowModal] = useState(false)\n\n    return (\n        <Container>\n            <Header title=\"Words\" iconName=\"Words\">\n                <Search value={search} onChange={setSearch} />\n            </Header>\n            <Space>\n                {words &&\n                    words\n                        .filter(word =>\n                            word.name\n                                .toLocaleLowerCase()\n                                .includes(search.toLocaleLowerCase())\n                        )\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .map(word => (\n                            <WordsItem\n                                key={word.id}\n                                word={word}\n                                removeWord={() => removeWord(word.id)}\n                            />\n                        ))}\n            </Space>\n            <FloatingButton onClick={() => setShowModal(!showModal)} iconName=\"Plus\" />\n            <WordModal show={showModal} onDismiss={() => setShowModal(false)} />\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    height: 100%;\n    display: grid;\n    grid-template-rows: auto 1fr auto;\n`\n","import React, { ElementType } from 'react'\nimport styled from 'styled-components'\nimport { Nav, NAV_HEIGHT } from './components/Nav'\nimport { Game } from './screens/Game'\nimport { Home } from './screens/Home'\nimport { Settings } from './screens/Settings'\nimport { Words } from './screens/Words'\nimport { useRouter, useWordsPersist } from './store'\nimport { RouteName } from './store/types/RouteName'\nimport { useWatchAuthChange } from './store/useAuth'\n\nconst screens: Record<RouteName, ElementType> = {\n    [RouteName.Home]: Home,\n    [RouteName.Words]: Words,\n    [RouteName.Profile]: Settings,\n    [RouteName.Game]: Game,\n}\n\nexport const App = () => {\n    useWordsPersist()\n    useWatchAuthChange()\n\n    const { route, setRoute } = useRouter()\n    const Page = screens[route]\n\n    return (\n        <>\n            <Content>\n                <Page />\n            </Content>\n            <NavContainer>\n                <Nav active={route} onChange={setRoute} />\n            </NavContainer>\n        </>\n    )\n}\n\nconst Content = styled.main`\n    height: calc(100% - ${NAV_HEIGHT}px);\n    position: relative;\n    width: 100%;\n    overflow-y: auto;\n`\n\nconst NavContainer = styled.div`\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    left: 0;\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import * as Sentry from '@sentry/browser'\nimport React, { Component, ErrorInfo } from 'react'\n\ntype ErrorBoundaryState = {\n    error: Error | null\n    eventId: string | null\n}\n\nexport class ErrorBoundary extends Component<{}, ErrorBoundaryState> {\n    public state = {\n        error: null,\n        eventId: null,\n    }\n\n    public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        this.setState({ error })\n\n        Sentry.withScope(scope => {\n            scope.setExtras(errorInfo)\n            this.setState({ eventId: Sentry.captureException(error) })\n        })\n    }\n\n    public render() {\n        if (this.state.error) {\n            return (\n                <div>\n                    <h1>Error occurred ;(</h1>\n                    <a onClick={this.handleReportDialog}>Report feedback</a>\n                    <pre>{JSON.stringify(this.state.error, null, 2)}</pre>\n                </div>\n            )\n        }\n\n        return this.props.children\n    }\n\n    private handleReportDialog = () => {\n        Sentry.showReportDialog({ eventId: this.state.eventId })\n    }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport * as Sentry from '@sentry/browser'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './styles/global.css'\nimport { GlobalStateProvider } from './store'\nimport { ErrorBoundary } from './components/ErrorBoundary'\n\nSentry.init({\n    dsn: 'https://adf49e52f07d479098537009eb0044b0@sentry.io/1446350',\n})\n\nrender(\n    <ErrorBoundary>\n        <GlobalStateProvider>\n            <App />\n        </GlobalStateProvider>\n    </ErrorBoundary>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { dispatch, useGlobalState } from './state/store'\nimport { useEffect, useState } from 'react'\nimport { firebaseApp } from './firebase'\nimport { Word, WordAction } from './state/types/State'\n\nexport const useWordsPersist = () => {\n    const [user] = useGlobalState('user')\n    const [localWords] = useGlobalState('words')\n\n    useEffect(() => {\n        // Waiting for user status…\n        if (user === undefined) return\n\n        // User is logged out\n        if (user === null) {\n            dispatch({ type: 'WORDS/SET', payload: [] })\n            return\n        }\n\n        // Listen on words updates\n        const unsubscribe = firebaseApp\n            .firestore()\n            .collection('users')\n            .doc(user.id)\n            .collection('words')\n            .onSnapshot(snapshot => {\n                const serverWords: Word[] = []\n\n                snapshot.forEach(doc => {\n                    const data = doc.data()\n                    serverWords.push({\n                        id: doc.id,\n                        name: data.name,\n                        translation: data.translation,\n                        example: data.example,\n                    })\n                })\n\n                dispatch({ type: 'WORDS/SET', payload: serverWords })\n            })\n\n        return unsubscribe\n    }, [user])\n\n    // This one react only when words are changed (action field in Word)\n    useEffect(() => {\n        if (!localWords) return\n\n        const wordToAdd = localWords.filter(w => w.action === WordAction.Add)\n        const wordToDelete = localWords.filter(w => w.action === WordAction.Delete)\n\n        if ((!wordToAdd && !wordToDelete) || !user) return\n\n        const wordsFirebaseRef = firebaseApp\n            .firestore()\n            .collection('users')\n            .doc(user.id)\n            .collection('words')\n\n        wordToAdd.forEach(word => {\n            const newWord: Word = { ...word }\n            // Very important one, without this we will have infinite loop :O\n            delete newWord.action\n            delete newWord.id // Also we can remove local ID\n\n            wordsFirebaseRef.add(newWord)\n        })\n\n        wordToDelete.forEach(word => {\n            wordsFirebaseRef.doc(word.id).delete()\n        })\n    }, [localWords, user])\n}\n"],"sourceRoot":""}