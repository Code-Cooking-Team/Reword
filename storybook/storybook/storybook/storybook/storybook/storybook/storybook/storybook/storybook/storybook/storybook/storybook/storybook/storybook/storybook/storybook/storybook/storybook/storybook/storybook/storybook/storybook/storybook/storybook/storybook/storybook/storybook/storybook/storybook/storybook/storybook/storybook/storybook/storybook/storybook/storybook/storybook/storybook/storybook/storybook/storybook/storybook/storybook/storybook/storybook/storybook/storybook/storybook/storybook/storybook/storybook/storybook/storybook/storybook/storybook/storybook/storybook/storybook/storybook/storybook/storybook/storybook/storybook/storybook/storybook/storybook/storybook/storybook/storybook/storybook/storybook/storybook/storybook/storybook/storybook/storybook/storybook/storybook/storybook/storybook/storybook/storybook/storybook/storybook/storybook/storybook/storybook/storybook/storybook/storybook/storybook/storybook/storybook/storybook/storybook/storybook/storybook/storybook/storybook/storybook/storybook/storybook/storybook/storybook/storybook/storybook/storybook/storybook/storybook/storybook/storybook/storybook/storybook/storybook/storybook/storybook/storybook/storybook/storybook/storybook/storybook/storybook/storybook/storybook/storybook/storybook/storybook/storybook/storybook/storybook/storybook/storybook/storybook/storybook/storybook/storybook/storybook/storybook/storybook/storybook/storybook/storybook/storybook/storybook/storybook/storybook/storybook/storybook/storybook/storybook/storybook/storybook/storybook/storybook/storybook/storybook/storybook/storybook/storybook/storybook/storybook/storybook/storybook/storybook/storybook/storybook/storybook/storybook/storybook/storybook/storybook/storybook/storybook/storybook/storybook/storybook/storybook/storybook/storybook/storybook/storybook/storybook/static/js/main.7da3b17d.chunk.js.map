{"version":3,"sources":["styles/colors.ts","styles/shadow.ts","components/Icon/icons/home.tsx","components/Icon/icons/play.tsx","components/Icon/icons/plus.tsx","components/Icon/icons/profile.tsx","components/Icon/icons/words.tsx","components/Icon/Icon.tsx","store/types/RouteName.ts","styles/transitions.ts","components/Nav/Nav.tsx","components/Keyboard/getKeysForWord.tsx","components/Keyboard/Key.tsx","components/Keyboard/Keyboard.tsx","components/Typewriter/Pointer.tsx","components/Typewriter/Typewriter.tsx","store/state/types/State.ts","store/state/initialState.ts","store/state/reducer.ts","store/state/helpers/reducerLogger.ts","store/state/store.ts","store/useRouter.ts","store/useWords.ts","store/firebase.ts","screens/Game/Game.tsx","components/Logo/Logo.tsx","store/useIsLoading.ts","screens/Home/StartButton.tsx","screens/Home/Home.tsx","components/Button/Button.tsx","components/Header/Header.tsx","store/useAuth.ts","components/Input/Input.tsx","components/Tabs/Tabs.tsx","components/Tabs/TabsItem.tsx","screens/Settings/AuthForm.tsx","components/FloatingButton/FloatingButton.tsx","components/Search/Search.tsx","styles/animations.ts","components/Modal/Modal.tsx","components/EditableList/EditableList.tsx","hooks/useDictionary/fetchDictionary.ts","hooks/useDictionary/useDictionary.ts","hooks/useDebounce.ts","screens/Words/WordForm.tsx","store/presets/index.ts","screens/Words/WordPresets.tsx","screens/Words/WordModal.tsx","screens/Words/WordsItem.tsx","App.tsx","screens/Words/Words.tsx","screens/Settings/Settings.tsx","serviceWorker.ts","components/ErrorBoundary/ErrorBoundary.tsx","index.tsx","store/useWordsPersist.ts"],"names":["brand","white","light","muted","gray","floatingShadow","home","size","react_default","a","createElement","width","height","viewBox","fillRule","clipRule","d","play","plus","profile","words","RouteName","sizes","normal","large","Icon","_ref","name","_ref$size","_ref$block","block","Container","icons","styled","div","_templateObject","p","fast","Nav","prop","react","Nav_Container","NavButton","isActive","active","Home","onClick","onChange","Icon_Icon","Words","Profile","nav","Nav_templateObject","button","_templateObject2","props","activeCSS","inActiveCSS","css","_templateObject3","_templateObject4","special","KEYS","map","row","split","getKey","key","word","fakeKeys","random","seedRandom","visible","includes","Key","Key_Container","onTouchStart","isSpace","symbol","esm","keyEventName","KEYPRESS","keyValue","onKeyHandle","Key_templateObject","highlight","Key_templateObject2","Keyboard","Keyboard_Container","originalWord","arguments","length","undefined","toLowerCase","k","getKeysForWord","i","Row","Key_Key","onPress","Keyboard_templateObject","Keyboard_templateObject2","Pointer","pipeSpring","useSpring","transform","from","PipeContainer","style","animated","span","Pointer_templateObject","WordAction","Typewriter","progress","typed","substr","_useState","useState","_useState2","Object","slicedToArray","preview","setPreview","Typewriter_Container","onPointerDown","onPointerOut","TypeWrapper","w","Segment","Pointer_Pointer","Letter","hide","Typewriter_templateObject","Typewriter_templateObject2","Typewriter_templateObject3","Typewriter_templateObject4","initialState","route","lastRoutes","user","reducerFunc","localId","concat","uuid","createStore","state","action","type","objectSpread","payload","toConsumableArray","slice","newWord","id","Add","newWords","Delete","Error","console","log","GlobalStateProvider","dispatch","useGlobalState","useRouter","_useGlobalState","setRoute","goBack","useWords","addWord","addManyWords","removeWord","randomWord","Math","floor","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Game_templateObject","Game_templateObject2","Bottom","Game_templateObject3","Complete","Game_templateObject4","Button","_templateObject5","Logo","reSpring","opacity","delay","wordSpring","Logo_Container","First","Pipe","Last","h1","Logo_templateObject","Logo_templateObject2","Logo_templateObject3","Logo_templateObject4","useIsLoading","_useGlobalState3","StartButton","loading","CircleButton","Game","StartButton_templateObject","Home_templateObject","WordsCount","Home_templateObject2","Button_templateObject","Header","HeaderWrapper","iconName","title","children","header","Header_templateObject","useAuthActions","createAccount","asyncToGenerator","regenerator_default","mark","_callee","email","password","wrap","_context","prev","next","auth","createUserWithEmailAndPassword","stop","_x","_x2","apply","this","logIn","_ref2","_callee2","_context2","signInWithEmailAndPassword","_x3","_x4","logOut","signOut","Input","value","_props$type","placeholder","autoFocus","focus","setFocus","_useState3","_useState4","linePosition","setLinePosition","labelRef","useRef","defaultLinePosition","current","getBoundingClientRect","useEffect","Label","onMouseDown","e","pageX","ref","LabelName","move","InputStyled","event","target","onFocus","onBlur","transformOrigin","label","Input_templateObject","Input_templateObject2","input","Input_templateObject3","Tabs","items","Children","toArray","currentIndex","findIndex","el","setActive","prevActive","setPrevActive","refNav","refActive","pos","useLinePosition","activeItem","prevActiveItem","Tabs_Container","Tabs_Nav","index","NavItem","Line","left","Content","ContentItem","animation","Tabs_templateObject","Tabs_templateObject2","Tabs_templateObject3","animations","rightOut","keyframes","Tabs_templateObject4","rightIn","Tabs_templateObject5","leftOut","_templateObject6","leftIn","_templateObject7","_templateObject8","endsWith","_templateObject9","_templateObject10","_templateObject11","_len","args","Array","_key","join","transition","_templateObject12","wrapperEl","activeEl","deps","_useState5","_useState6","setLeft","_useState7","_useState8","setWidth","activeRect","wrapperRect","TabsItem","TabsItem_Container","TabsItem_templateObject","AuthForm","_useAuthActions","setEmail","setPassword","Tabs_Tabs","TabsItem_TabsItem","onSubmit","preventDefault","FormWrapper","Input_Input","Button_Button","AuthForm_templateObject","FloatingButton","FloatingButton_Button","FloatingButton_templateObject","NAV_HEIGHT","Search","Search_Input","Search_templateObject","easing","fadeUpKeyframes","animations_templateObject","fadeDownKeyframes","animations_templateObject2","fadeInKeyframes","animations_templateObject3","fadeOutKeyframes","animations_templateObject4","fadeUpAnimation","animations_templateObject5","fadeDownAnimation","animations_templateObject6","fadeInAnimation","animations_templateObject8","fadeOutAnimation","animations_templateObject9","Modal","ReactDOM","createPortal","Transition","in","show","timeout","status","Fragment","ModalBox","Overlay","close","modalRoot","document","getElementById","Modal_templateObject","animations_templateObject7","ENTERING","EXITING","EXITED","Modal_templateObject2","animations_templateObject10","EditableList","react_beautiful_dnd_esm","onDragEnd","result","destination","reorder","list","source","droppableId","provided","snapshot","List","assign","droppableProps","innerRef","item","draggableId","ListElement","draggableProps","dragHandleProps","Cross","remove","filter","startIndex","endIndex","_result$splice","splice","removed","EditableList_templateObject","EditableList_templateObject2","EditableList_templateObject3","alphabet","cache","fetchDictionary","letter","res","data","abrupt","fetch","sent","json","useDictionary","query","currentQuery","setCurrentQuery","results","setResults","fn","ms","handle","setTimeout","bind","clearTimeout","useDebounce","useMemo","startsWith","run","WordForm","wordInput","setWordInput","translationInput","setTranslationInput","exampleInput","setExampleInput","_useList","useList","_useList2","translationList","translationListActions","_useList3","_useList4","exampleList","exampleListActions","AutocompleteItem","translations","trans","t","texts","set","EditableList_EditableList","InputWithButtonWrapper","push","translation","example","WordForm_templateObject","WordForm_templateObject2","presets","getList","__webpack_require__","then","preset","WordPresets","WordPresets_Container","WordPresets_templateObject","WordModal","Modal_Modal","onClose","WordForm_WordForm","WordPresets_WordPresets","WordsItem","WordsItem_Container","Name","Translations","Examples","RemoveButton","WordsItem_templateObject","strong","WordsItem_templateObject2","WordsItem_templateObject3","WordsItem_templateObject4","WordsItem_templateObject5","screens","_screens","defineProperty","isLoading","Home_Container","Logo_Logo","StartButton_StartButton","search","setSearch","_useWords","showModal","setShowModal","Header_Header","Search_Search","WordsItem_WordsItem","FloatingButton_FloatingButton","WordModal_WordModal","AuthForm_AuthForm","setProgress","setWord","wordRight","isComplete","handleNextWord","Game_Container","Game_Row","Typewriter_Typewriter","Keyboard_Keyboard","toLocaleLowerCase","main","App_templateObject","NavContainer","App_templateObject2","Boolean","window","location","hostname","match","ErrorBoundary","_Component","_getPrototypeOf2","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","error","eventId","handleReportDialog","Sentry","inherits","createClass","errorInfo","_this2","setState","scope","setExtras","JSON","stringify","Component","dsn","render","ErrorBoundary_ErrorBoundary","localWords","firestore","collection","doc","onSnapshot","serverWords","forEach","wordToAdd","wordToDelete","wordsFirebaseRef","add","delete","useWordsPersist","onAuthStateChanged","uid","displayName","_useRouter","Page","App_Content","Nav_Nav","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7da3b17d.chunk.js","sourcesContent":["export const brand = '#9438EA'\nexport const white = '#FFFFFF'\nexport const black = '#000000'\nexport const light = 'rgba(0, 0, 0, 0.1)'\nexport const muted = 'rgba(0, 0, 0, 0.3)'\nexport const gray = 'rgba(0, 0, 0, 0.6)'\nexport const good = '#AED900'\nexport const danger = '#EA388D'\n","export const barShadow = '0 0 10px rgba(0, 0, 0, 0.1)'\nexport const floatingShadow = '2px 2px 7px rgba(0, 0, 0, 0.1)'\n","import React from 'react'\n\nexport const home = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M5 12.5H2L12 3.5L22 12.5H19V20.5H13V14.5H11V20.5H5V12.5ZM17 10.69L12 6.19L7 10.69V18.5H9V12.5H15V18.5H17V10.69Z\"\n        />\n    </svg>\n)\n","import React from 'react'\n\nexport const play = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 61 61\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M44.4792 30.5L16.5208 48.2917V12.7083L44.4792 30.5ZM34.9988 30.5L21.6042 21.96V39.04L34.9988 30.5Z\"\n        />\n    </svg>\n)\n","import React from 'react'\n\nexport const plus = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path d=\"M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n    </svg>\n)\n","import React from 'react'\n\nexport const profile = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4ZM14 8C14 6.9 13.1 6 12 6C10.9 6 10 6.9 10 8C10 9.1 10.9 10 12 10C13.1 10 14 9.1 14 8ZM18 18C17.8 17.29 14.7 16 12 16C9.31 16 6.23 17.28 6 18H18ZM4 18C4 15.34 9.33 14 12 14C14.67 14 20 15.34 20 18V20H4V18Z\"\n        />\n    </svg>\n)\n","import React from 'react'\n\nexport const words = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12.87 15.07L10.33 12.56L10.36 12.53C12.1 10.59 13.34 8.36 14.07 6H17V4H10V2H8V4H1V5.99H12.17C11.5 7.92 10.44 9.75 9 11.35C8.07 10.32 7.3 9.19 6.69 8H4.69C5.42 9.63 6.42 11.17 7.67 12.56L2.58 17.58L4 19L9 14L12.11 17.11L12.87 15.07ZM18.5 10H16.5L12 22H14L15.12 19H19.87L21 22H23L18.5 10ZM17.5 12.67L15.88 17H19.12L17.5 12.67Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport * as icons from './icons'\n\nconst sizes = {\n    normal: 24,\n    large: 62,\n}\n\nexport type IconName = keyof typeof icons\nexport type IconSize = keyof typeof sizes\n\ntype IconProps = {\n    name: IconName\n    size?: IconSize\n    block?: boolean\n}\n\nexport const Icon = ({ name, size = 'normal', block = false }: IconProps) => (\n    <Container block={block}>{icons[name](sizes[size])}</Container>\n)\n\nconst Container = styled.div<{ block: boolean }>`\n    display: ${p => (p.block ? 'block' : 'inline-block')};\n    vertical-align: middle;\n    svg {\n        display: block;\n        margin: auto;\n        fill: currentColor;\n    }\n`\n","export enum RouteName {\n    Home = 'home',\n    Words = 'words',\n    Profile = 'profile',\n    Game = 'game',\n}\n","export const fast = '0.3s cubic-bezier(.21,.96,.43,.98)'\nexport const transition = (...args: string[]) => `transition:${args\n    .map(name => `${name} ${fast}`)\n    .join(',')};\n`\n","import * as React from 'react'\nimport styled, { css } from 'styled-components'\nimport { white, gray, brand } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { Icon } from '../Icon'\nimport { fast } from '../../styles/transitions'\nimport { RouteName } from '../../store/types/RouteName'\n\nexport const NAV_HEIGHT = 60\n\ntype NavProps = {\n    active: RouteName\n    onChange(page: RouteName): void\n}\n\nexport const Nav = (prop: NavProps) => {\n    return (\n        <Container>\n            <NavButton\n                isActive={prop.active === RouteName.Home}\n                onClick={() => prop.onChange(RouteName.Home)}\n            >\n                <Icon name=\"home\" block />\n                Home\n            </NavButton>\n            <NavButton\n                isActive={prop.active === RouteName.Words}\n                onClick={() => prop.onChange(RouteName.Words)}\n            >\n                <Icon name=\"words\" block />\n                Words\n            </NavButton>\n            <NavButton\n                isActive={prop.active === RouteName.Profile}\n                onClick={() => prop.onChange(RouteName.Profile)}\n            >\n                <Icon name=\"profile\" block />\n                Profile\n            </NavButton>\n        </Container>\n    )\n}\n\nconst Container = styled.nav`\n    background: ${white};\n    display: flex;\n    width: 100%;\n    min-height: ${NAV_HEIGHT}px;\n    justify-content: space-evenly;\n    box-shadow: ${barShadow};\n    overflow: hidden;\n`\n\nconst NavButton = styled.button<{ isActive: boolean }>`\n    color: ${props => (props.isActive ? brand : gray)};\n    display: block;\n    background: none;\n    border: none;\n    padding: 10px 25px;\n    position: relative;\n    line-height: 1.5em;\n    &::after {\n        content: '';\n        display: block;\n        border-radius: 100%;\n        height: 60px;\n        width: 60px;\n        position: absolute;\n        margin: auto;\n        top: -50px;\n        bottom: -50px;\n        left: -50px;\n        right: -50px;\n        ${props => (props.isActive ? activeCSS : inActiveCSS)};\n    }\n    &:active::after {\n        transition: opacity 0.6s ease-out, background 0.6s ease-out, transform 1s ease-out;\n        opacity: 0.1;\n        transform: scale(1.2);\n        background: ${brand};\n    }\n`\n\nconst activeCSS = css`\n    transition: all ${fast};\n    opacity: 0;\n    transform: scale(2);\n    background: ${brand};\n`\n\nconst inActiveCSS = css`\n    transition: all 0 ease;\n    opacity: 0.3;\n    transform: scale(1);\n    background: rgba(255, 255, 255, 0);\n`\n","import seedRandom from 'seed-random'\n\nconst special = \"' ,\"\n\nconst KEYS = ['qwertyuiop', 'asdfghjkl', 'zxcvbnm', special].map(row => row.split(''))\n\ntype WordKey = {\n    visible: boolean\n    key: string\n}\n\ntype WordKeyList = WordKey[][]\n\nexport const getKeysForWord = (originalWord: string, fakeKeys = 0): WordKeyList => {\n    const word = originalWord.toLowerCase()\n\n    return KEYS.map(row => row.map(k => getKey(k, word, fakeKeys)))\n}\n\nconst getKey = (key: string, word: string, fakeKeys: number): WordKey => {\n    const random = fakeKeys ? seedRandom(key + word)() : 0\n\n    return {\n        key,\n        visible: word.includes(key) || (fakeKeys > random && !special.includes(key)),\n    }\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { brand, white } from '../../styles/colors'\nimport { fast } from '../../styles/transitions'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\n\ninterface KeyProps {\n    onClick(): void\n    symbol?: string\n    visible?: boolean\n}\n\nexport const Key = (props: KeyProps) => (\n    <Container\n        visible={props.visible}\n        onTouchStart={props.onClick}\n        isSpace={props.symbol === ' '}\n    >\n        {props.symbol}\n        <KeyHandler\n            keyEventName={KEYPRESS}\n            keyValue={props.symbol}\n            onKeyHandle={props.onClick}\n        />\n    </Container>\n)\n\nconst Container = styled.button<{ visible?: boolean; isSpace?: boolean }>`\n    width: ${p => (p.isSpace ? '47vw' : '8vw')};\n    height: 7vh;\n    padding: 0;\n    margin: 0 4px;\n    border: 2px solid ${brand};\n    opacity: ${p => (p.visible ? 1 : 0.1)};\n    border-radius: 4px;\n    color: ${brand};\n    font-weight: bold;\n    font-size: 24px;\n    text-align: center;\n    background: none;\n    transition: all ${fast};\n\n    ${p => p.visible && highlight}\n`\nconst highlight = css`\n    &:active {\n        outline: none;\n        background-color: ${brand};\n        color: ${white};\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { getKeysForWord } from './getKeysForWord'\nimport { white } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { Key } from './Key'\n\ninterface KeyboardProps {\n    word: string\n    onPress(key: string): void\n    fakeKeys?: number\n}\n\nexport const Keyboard = (props: KeyboardProps) => (\n    <Container>\n        {getKeysForWord(props.word, props.fakeKeys).map((row, i) => (\n            <Row key={i}>\n                {row.map(k => (\n                    <Key\n                        key={k.key}\n                        symbol={k.key}\n                        visible={k.visible}\n                        onClick={() => {\n                            if (k.visible) {\n                                props.onPress(k.key)\n                            }\n                        }}\n                    />\n                ))}\n            </Row>\n        ))}\n    </Container>\n)\n\nconst Container = styled.div`\n    padding: 0 0 50px;\n    background: ${white};\n    box-shadow: ${barShadow};\n`\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 10px 5px 0;\n`\n\nexport const vibrateOk = () => navigator.vibrate(1)\nexport const vibrateBad = () => navigator.vibrate([1, 100, 1, 100, 1])\n","import React from 'react'\nimport styled from 'styled-components'\nimport { animated, useSpring } from 'react-spring'\nimport { brand } from '../../styles/colors'\n\nexport const Pointer = () => {\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-0.3em) scaleX(3)',\n        },\n    })\n    return <PipeContainer style={pipeSpring} />\n}\n\nconst PipeContainer = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 -0.05em;\n    vertical-align: middle;\n    background-color: ${brand};\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { muted, black } from '../../styles/colors'\nimport { Pointer } from './Pointer'\n\ntype TypewriterProps = {\n    word: string\n    progress: number\n}\n\nexport const Typewriter = (props: TypewriterProps) => {\n    const { word, progress } = props\n    const typed = word.substr(0, progress)\n    const [preview, setPreview] = useState(false)\n\n    return (\n        <Container\n            onPointerDown={() => setPreview(true)}\n            onPointerOut={() => setPreview(false)}\n        >\n            <TypeWrapper>\n                {word.split('').map((w, i) => {\n                    return (\n                        <Segment key={w + i}>\n                            {i === progress && <Pointer key={typed} />}\n                            <Letter hide={progress <= i && !preview}>{w}</Letter>\n                        </Segment>\n                    )\n                })}\n            </TypeWrapper>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n    padding: 0px 25px;\n    overflow: hidden;\n    height: 2em;\n    width: 100%;\n    line-height: 2em;\n`\n\nconst TypeWrapper = styled.div`\n    white-space: nowrap;\n    position: relative;\n    width: 100%;\n`\n\nconst Segment = styled.span`\n    display: inline-block;\n    line-height: 1em;\n    height: 90px;\n    margin: 0 1px;\n    vertical-align: middle;\n    position: relative;\n`\n\nconst Letter = styled.span<{ hide: boolean }>`\n    display: inline-block;\n    text-align: center;\n    position: relative;\n    margin: 0 0.025em;\n    height: 100%;\n    min-width: 25px;\n    transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n    transform: ${props => (props.hide ? 'scale(0.5)' : 'scale(1)')};\n    color: ${props => (props.hide ? 'rgba(255,255,255,0)' : black)};\n    font-family: 'Ubuntu Mono', monospace;\n\n    &::after {\n        content: '*';\n        position: absolute;\n        text-align: center;\n        top: 0.5em;\n        left: 0;\n        right: 0;\n        line-height: 0.5em;\n        height: 20px;\n        transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n        color: ${muted};\n        transform: ${props => (props.hide ? 'scale(2)' : 'scale(0)')};\n        opacity: ${props => (props.hide ? 1 : 0)};\n    }\n`\n","import { RouteName } from '../../types/RouteName'\n\nexport enum WordAction {\n    Add,\n    Delete,\n}\n\nexport type Word = UnSavedWord & {\n    id: string\n    action?: WordAction\n}\n\nexport type UnSavedWord = {\n    name: string\n    translation: string[]\n    example: string[]\n    preset?: string\n}\n\nexport type WordsState = Word[]\n\nexport type UserState = {\n    id: string\n    email: string\n    name: string\n}\n\nexport type State = {\n    route: RouteName\n    lastRoutes: RouteName[]\n    words?: WordsState\n    user?: UserState | null\n}\n","import { RouteName } from '../types/RouteName'\nimport { State } from './types/State'\n\nexport const initialState: State = {\n    route: RouteName.Home,\n    lastRoutes: [],\n    words: undefined,\n    user: undefined,\n}\n","import uuid from 'uuid'\nimport { Actions } from './types/Actions'\nimport { State, Word, WordAction } from './types/State'\n\nconst localId = () => `local-${uuid()}`\n\nexport const reducer = (state: State, action: Actions) => {\n    switch (action.type) {\n        case 'ROUTER/SET_ROUTE':\n            return {\n                ...state,\n                route: action.payload.route,\n                lastRoutes: [state.route, ...state.lastRoutes],\n            }\n\n        case 'ROUTER/BACK':\n            return {\n                ...state,\n                route: state.lastRoutes[0],\n                lastRoutes: state.lastRoutes.slice(1),\n            }\n\n        case 'WORDS/SET':\n            return {\n                ...state,\n                words: action.payload,\n            }\n\n        case 'WORDS/ADD_WORD':\n            const newWord: Word = {\n                id: localId(),\n                action: WordAction.Add,\n                ...action.payload,\n            }\n            return {\n                ...state,\n                words: [...state.words, newWord],\n            }\n\n        case 'WORDS/ADD_MANY_WORDS':\n            const newWords: Word[] = action.payload.map(word => ({\n                id: localId(),\n                action: WordAction.Add,\n                ...word,\n            }))\n            return {\n                ...state,\n                words: [...state.words, ...newWords],\n            }\n\n        case 'WORDS/REMOVE_WORD':\n            return {\n                ...state,\n                words: state.words.map(word =>\n                    word.id === action.payload.id\n                        ? {\n                              ...word,\n                              action: WordAction.Delete,\n                          }\n                        : word\n                ),\n            }\n\n        case 'USER/CHANGE':\n            return {\n                ...state,\n                user: action.payload,\n            }\n\n        default:\n            throw new Error('[reducer] Unknown action type!')\n    }\n}\n","import { Actions } from '../types/Actions'\nimport { State } from '../types/State'\nimport { reducer } from '../reducer'\n\nexport const reducerLogger = (reducerFunc: typeof reducer) => (\n    state: State,\n    action: Actions\n) => {\n    console.log('→', action.type, action.payload)\n    return reducerFunc(state, action)\n}\n","import { createStore } from 'react-hooks-global-state'\nimport { reducerLogger } from './helpers/reducerLogger'\nimport { initialState } from './initialState'\nimport { reducer } from './reducer'\n\nexport const { GlobalStateProvider, dispatch, useGlobalState } = createStore(\n    reducerLogger(reducer),\n    initialState\n)\n","import { dispatch, useGlobalState } from './state/store'\nimport { RouteName } from './types/RouteName'\n\nexport const useRouter = () => {\n    const [route] = useGlobalState('route')\n\n    const setRoute = (route: RouteName) => {\n        dispatch({ type: 'ROUTER/SET_ROUTE', payload: { route } })\n    }\n\n    const goBack = () => {\n        dispatch({ type: 'ROUTER/BACK' })\n    }\n\n    return { route, setRoute, goBack }\n}\n","import { dispatch, useGlobalState } from './state/store'\nimport { UnSavedWord, Word } from './state/types/State'\n\nexport const useWords = () => {\n    const [words] = useGlobalState('words')\n\n    const addWord = (word: UnSavedWord) => {\n        dispatch({ type: 'WORDS/ADD_WORD', payload: word })\n    }\n\n    const addManyWords = (words: UnSavedWord[]) => {\n        dispatch({ type: 'WORDS/ADD_MANY_WORDS', payload: words })\n    }\n\n    const removeWord = (id: string) => {\n        dispatch({ type: 'WORDS/REMOVE_WORD', payload: { id } })\n    }\n\n    const randomWord = (): Word | null => {\n        if (!words || !words.length) return null\n        return words[Math.floor(Math.random() * words.length)]\n    }\n\n    return { words, addWord, addManyWords, removeWord, randomWord }\n}\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyATMnw8FbczS1-0yJwrHl98EunKDAjE1DM',\n    authDomain: 'reword-1.firebaseapp.com',\n    databaseURL: 'https://reword-1.firebaseio.com',\n    projectId: 'reword-1',\n    storageBucket: 'reword-1.appspot.com',\n    messagingSenderId: '220877466530',\n    appId: '1:220877466530:web:7c95c058eaa3a7ed',\n}\nexport const firebaseApp = firebase.initializeApp(firebaseConfig)\n","import React, { useEffect, useState } from 'react'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\nimport styled from 'styled-components'\nimport { Icon } from '../../components/Icon'\nimport { Keyboard } from '../../components/Keyboard'\nimport { Typewriter } from '../../components/Typewriter'\nimport { useRouter, useWords } from '../../store'\nimport { good, white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\n\nexport const Game = () => {\n    const { goBack } = useRouter()\n    const { words, randomWord } = useWords()\n    const [progress, setProgress] = useState(0)\n    const [word, setWord] = useState(randomWord())\n\n    // Update when words changes\n    useEffect(() => {\n        setWord(randomWord())\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [words])\n\n    // Generally for development purposes only\n    if (!word) return null\n\n    const wordRight = word.name.substr(progress)\n    const isComplete = progress === word.name.length\n\n    const handleKeyPress = (key: string) => {\n        const currentWord = word.name[progress].toLocaleLowerCase()\n        if (key === currentWord) {\n            setProgress(progress + 1)\n        }\n    }\n\n    const handleNextWord = () => {\n        setWord(randomWord())\n        setProgress(0)\n    }\n\n    return (\n        <Container>\n            <Row>\n                <div>\n                    <h1>{word.translation}</h1>\n                    <h5>{isComplete ? word.example : '\\u00a0'}</h5>\n                </div>\n            </Row>\n            <Row>\n                <Typewriter word={word.name} progress={progress} key={word.name} />\n                <button onClick={goBack}>Cancel</button>\n            </Row>\n            <Bottom>\n                <Keyboard word={wordRight} onPress={handleKeyPress} />\n                {isComplete && (\n                    <Complete>\n                        <h2>Done!</h2>\n                        <Button onClick={handleNextWord}>\n                            Next word\n                            <Icon name=\"play\" />\n                        </Button>\n\n                        <KeyHandler\n                            keyEventName={KEYPRESS}\n                            keyValue=\"Enter\"\n                            onKeyHandle={handleNextWord}\n                        />\n                    </Complete>\n                )}\n            </Bottom>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    height: 100%;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    text-align: center;\n    overflow: hidden;\n    user-select: none;\n`\nconst Row = styled.div`\n    width: 100%;\n    flex: 1 0 auto;\n`\n\nconst Bottom = styled.div`\n    width: 100%;\n    position: relative;\n`\n\nconst Complete = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Button = styled.button`\n    padding: 30px 50px;\n    border: none;\n    color: ${white};\n    background: ${good};\n    border-radius: 4px;\n    box-shadow: ${floatingShadow};\n    font-weight: bold;\n    font-size: 24px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useSpring, animated } from 'react-spring'\nimport { brand } from '../../styles/colors'\n\nexport const Logo = () => {\n    const reSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 200,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const wordSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 300,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-1.2em) scaleX(5)',\n        },\n    })\n\n    return (\n        <Container>\n            <First style={reSpring}>Re</First>\n            <Pipe style={pipeSpring} />\n            <Last style={wordSpring}>word</Last>\n        </Container>\n    )\n}\n\nconst Container = styled.h1`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n`\n\nconst First = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Last = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Pipe = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 0.05em;\n    vertical-align: middle;\n    background-color: ${brand};\n`\n","import { useGlobalState } from './state/store'\n\nexport const useIsLoading = () => {\n    const [words] = useGlobalState('words')\n    const [user] = useGlobalState('user')\n\n    return words === undefined || user === undefined\n}\n","import React from 'react'\nimport { WordsState } from '../../store/state/types/State'\nimport { useRouter } from '../../store'\nimport { RouteName } from '../../store/types/RouteName'\nimport { Icon } from '../../components/Icon'\nimport { white, brand } from '../../styles/colors'\nimport styled from 'styled-components'\nimport { floatingShadow } from '../../styles/shadow'\n\ntype StartButtonProps = {\n    words: WordsState\n    loading: boolean\n}\n\nexport const StartButton = (props: StartButtonProps) => {\n    const { setRoute } = useRouter()\n\n    if (props.loading) {\n        return <CircleButton>Loading</CircleButton>\n    }\n\n    if (!props.words.length) {\n        return (\n            <CircleButton onClick={() => setRoute(RouteName.Words)}>\n                <Icon name=\"plus\" size=\"large\" block />\n                Word\n            </CircleButton>\n        )\n    }\n\n    return (\n        <CircleButton onClick={() => setRoute(RouteName.Game)}>\n            <Icon name=\"play\" size=\"large\" block />\n            Play\n        </CircleButton>\n    )\n}\n\nconst playSize = '45vmin'\n\nconst CircleButton = styled.button`\n    background: ${white};\n    border: none;\n    box-shadow: ${floatingShadow};\n    width: ${playSize};\n    height: ${playSize};\n    max-width: 260px;\n    max-height: 260px;\n    border-radius: 100%;\n    color: ${brand};\n    font-size: 36px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Logo } from '../../components/Logo'\nimport { useWords } from '../../store'\nimport { useIsLoading } from '../../store/useIsLoading'\nimport { StartButton } from './StartButton'\n\nexport const Home = () => {\n    const isLoading = useIsLoading()\n    const { words } = useWords()\n\n    return (\n        <Container>\n            <Logo />\n            <Container>\n                <StartButton words={words} loading={isLoading} />\n            </Container>\n            <WordsCount>\n                {!isLoading && (\n                    <>\n                        You added <b>{words.length}</b> words\n                    </>\n                )}\n            </WordsCount>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: grid;\n    height: 100%;\n    grid-auto-rows: 1fr 3fr 1fr;\n    align-items: center;\n    justify-items: center;\n`\n\nconst WordsCount = styled.div`\n    padding: 25px;\n    text-align: center;\n`\n","import styled from 'styled-components'\nimport { brand } from '../../styles/colors'\n\nexport const Button = styled.button`\n    display: inline-block;\n    padding: 5px 15px;\n    border: 2px solid ${brand};\n    border-radius: 5px;\n    background: transparent;\n`\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { IconName, Icon } from '../Icon'\n\ntype HeaderProps = {\n    title: string\n    iconName: IconName\n    children?: ReactNode\n}\n\nexport const Header = (props: HeaderProps) => {\n    return (\n        <HeaderWrapper>\n            <Icon name={props.iconName} size=\"large\" />\n            <h1>{props.title}</h1>\n            {props.children}\n        </HeaderWrapper>\n    )\n}\n\nconst HeaderWrapper = styled.header`\n    display: flex;\n    min-height: 260px;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n","import { firebaseApp } from './firebase'\nimport { dispatch } from './state/store'\nimport { useEffect } from 'react'\n\nexport const useAuthActions = () => {\n    const createAccount = async (email: string, password: string) => {\n        await firebaseApp.auth().createUserWithEmailAndPassword(email, password)\n    }\n\n    const logIn = async (email: string, password: string) => {\n        await firebaseApp.auth().signInWithEmailAndPassword(email, password)\n    }\n\n    const logOut = () => {\n        firebaseApp.auth().signOut()\n    }\n\n    return { logIn, logOut, createAccount }\n}\n\nexport const useWatchAuthChange = () => {\n    useEffect(() => {\n        firebaseApp.auth().onAuthStateChanged(user => {\n            dispatch({\n                type: 'USER/CHANGE',\n                payload: user\n                    ? { email: user.email, id: user.uid, name: user.displayName }\n                    : null,\n            })\n        })\n    }, [])\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { brand, muted } from '../../styles/colors'\n\ntype InputProps = {\n    value: string\n    type?: string\n    name?: string\n    placeholder: string\n    onChange: (value: string) => void\n    autoFocus?: boolean\n}\n\nexport const Input = (props: InputProps) => {\n    const { value, type = 'text', placeholder, onChange, autoFocus, name } = props\n\n    const [focus, setFocus] = useState(false)\n    const [linePosition, setLinePosition] = useState(0)\n\n    const labelRef = useRef<HTMLLabelElement>(null)\n\n    const defaultLinePosition = labelRef.current\n        ? labelRef.current.getBoundingClientRect().width / 2\n        : 0\n\n    useEffect(() => {\n        setLinePosition(defaultLinePosition)\n    }, [defaultLinePosition])\n\n    return (\n        <Label\n            active={focus}\n            onMouseDown={e => {\n                setLinePosition(e.pageX)\n            }}\n            ref={labelRef}\n        >\n            <LabelName move={value !== ''}>{placeholder}</LabelName>\n            <InputStyled\n                type={type}\n                value={value}\n                onChange={event => onChange(event.target.value)}\n                onFocus={() => setFocus(true)}\n                onBlur={() => {\n                    setLinePosition(defaultLinePosition)\n                    setFocus(false)\n                }}\n                autoFocus={autoFocus}\n                name={name}\n            />\n            <span style={{ transformOrigin: `${linePosition}px 0` }} />\n        </Label>\n    )\n}\n\nconst Label = styled.label<{ active: boolean }>`\n    position: relative;\n    display: block;\n    span {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: 2px;\n        opacity: 1;\n        transition: transform 0.25s ease-out;\n        transform: scaleX(${props => (props.active ? 1 : 0)});\n        background: ${brand};\n        pointer-events: none;\n    }\n`\n\nconst LabelName = styled.div<{ move: boolean }>`\n    position: absolute;\n    top: 9px;\n    left: 0px;\n    font-size: 15px;\n    transition: transform 0.15s ease-out;\n    color: ${muted};\n    cursor: text;\n    transform-origin: 0 0; // top left for scale\n    transform: ${props =>\n        props.move ? `translateY(-17px) scale(0.8)` : `translate(0px)`};\n`\n\nconst InputStyled = styled.input`\n    padding: 12px 0 9px;\n    border: none;\n    font-size: 15px;\n    display: block;\n    width: 100%;\n    margin: 15px 0;\n    border-bottom: 2px solid ${muted};\n`\n","import React, {\n    RefObject,\n    DependencyList,\n    useState,\n    useEffect,\n    ReactNode,\n    Children,\n    ReactElement,\n    useRef,\n} from 'react'\nimport styled, { css, keyframes } from 'styled-components'\nimport { TabsItemProps } from '.'\nimport { brand, black } from '../../styles/colors'\nimport { transition, fast } from '../../styles/transitions'\n\ntype TabsProps = {\n    children: ReactElement<TabsItemProps>[] | ReactElement<TabsItemProps>\n}\n\nexport const Tabs = (props: TabsProps) => {\n    const items = Children.toArray<ReactElement<TabsItemProps>>(props.children)\n\n    const currentIndex = items.findIndex(el => el.props.isActive)\n    const [active, setActive] = useState(currentIndex > 0 ? currentIndex : 0)\n    const [prevActive, setPrevActive] = useState<number | null>(null)\n\n    const refNav = useRef(null)\n    const refActive = useRef(null)\n\n    const pos = useLinePosition(refNav, refActive, [active])\n\n    const activeItem = items[active]\n    const prevActiveItem = items[prevActive]\n\n    return (\n        <Container>\n            <Nav ref={refNav}>\n                {items.map((el, index) => (\n                    <NavItem\n                        ref={index === active ? refActive : null}\n                        key={index}\n                        onClick={() => {\n                            if (active === index) return\n                            setPrevActive(active)\n                            setActive(index)\n                        }}\n                        active={index === active}\n                    >\n                        {el.props.name}\n                    </NavItem>\n                ))}\n                <Line\n                    style={{ transform: `translateX(${pos.left}px)`, width: pos.width }}\n                />\n            </Nav>\n            <Content>\n                {prevActiveItem && (\n                    <ContentItem\n                        animation={prevActive > active ? 'rightOut' : 'leftOut'}\n                        key={prevActiveItem.props.name}\n                    >\n                        <prevActiveItem.type {...prevActiveItem.props} />\n                    </ContentItem>\n                )}\n                <ContentItem\n                    animation={\n                        prevActiveItem && (prevActive < active ? 'rightIn' : 'leftIn')\n                    }\n                    key={activeItem.props.name}\n                >\n                    <activeItem.type {...activeItem.props} />\n                </ContentItem>\n            </Content>\n        </Container>\n    )\n}\n\nconst Container = styled.div``\nconst Nav = styled.div`\n    position: relative;\n    display: grid;\n    grid-auto-columns: 1fr;\n    grid-auto-flow: column;\n`\nconst Content = styled.div`\n    position: relative;\n    overflow: hidden;\n`\n\nconst rightOut = keyframes`\n  from {\n    transform: translateX(0%);\n  }\n\n  to {\n    transform: translateX(100%);\n  }\n`\nconst rightIn = keyframes`\n  from {\n    transform: translateX(100%);\n  }\n\n  to {\n    transform: translateX(0%);\n  }\n`\nconst leftOut = keyframes`\n  from {\n    transform: translateX(0%);\n  }\n\n  to {\n    transform: translateX(-100%);\n  }\n`\nconst leftIn = keyframes`\n  from {\n    transform: translateX(-100%);\n  }\n\n  to {\n    transform: translateX(0%);\n  }\n`\n\nconst animations = {\n    rightOut,\n    rightIn,\n    leftOut,\n    leftIn,\n}\n\nconst ContentItem = styled.div<{ animation?: string }>`\n    position: relative;\n    display: block;\n    top: 0;\n    left: 0;\n    width: 100%;\n    ${props =>\n        props.animation &&\n        props.animation.endsWith('Out') &&\n        css`\n            position: absolute;\n        `}\n    ${props =>\n        props.animation &&\n        css`\n            animation: ${animations[props.animation]} ${fast} forwards;\n        `}\n`\n\nconst Line = styled.div`\n    height: 2px;\n    ${transition('transform', 'width')}\n    position: absolute;\n    top: 100%;\n    z-index: 10;\n    background: ${brand};\n`\n\nconst NavItem = styled.button<{ active: boolean }>`\n    display: block;\n    padding: 15px 10px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: ${p => (p.active ? brand : black)};\n`\n\nconst useLinePosition = (\n    wrapperEl: RefObject<HTMLElement>,\n    activeEl: RefObject<HTMLElement>,\n    deps: DependencyList\n) => {\n    const [left, setLeft] = useState(0)\n    const [width, setWidth] = useState(0)\n    // const { innerWidth } = useWindowSize();\n\n    useEffect(() => {\n        if (!activeEl.current || !wrapperEl.current) {\n            return\n        }\n        const activeRect = activeEl.current.getBoundingClientRect()\n        const wrapperRect = wrapperEl.current.getBoundingClientRect()\n\n        setLeft(activeRect.left - wrapperRect.left)\n        setWidth(activeRect.width)\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [...deps, activeEl, wrapperEl])\n    // [...deps, innerWidth]\n    return { left, width }\n}\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nexport type TabsItemProps = {\n    name: string\n    isActive?: boolean\n    children: ReactNode\n}\n\nexport const TabsItem = (props: TabsItemProps) => <Container>{props.children}</Container>\n\nconst Container = styled.div``\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../components/Button'\nimport { Input } from '../../components/Input'\nimport { Tabs, TabsItem } from '../../components/Tabs'\nimport { useAuthActions } from '../../store/useAuth'\n\nexport const AuthForm = () => {\n    const { logIn, createAccount } = useAuthActions()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    return (\n        <Tabs>\n            <TabsItem name=\"Sign up\">\n                <form\n                    onSubmit={e => {\n                        e.preventDefault()\n                        logIn(email, password)\n                    }}\n                >\n                    <FormWrapper>\n                        <h2>Create an account</h2>\n                        <Input\n                            name=\"email\"\n                            value={email}\n                            onChange={setEmail}\n                            placeholder=\"email\"\n                        />\n                        <Input\n                            name=\"password\"\n                            type=\"password\"\n                            value={password}\n                            onChange={setPassword}\n                            placeholder=\"password\"\n                        />\n                        <Button>Sign up</Button>\n                    </FormWrapper>\n                </form>\n            </TabsItem>\n            <TabsItem name=\"Sing in\">\n                <form\n                    onSubmit={e => {\n                        e.preventDefault()\n                        createAccount(email, password)\n                    }}\n                >\n                    <FormWrapper>\n                        <h2>I already have an account</h2>\n                        <Input\n                            name=\"email\"\n                            value={email}\n                            onChange={setEmail}\n                            placeholder=\"email\"\n                        />\n                        <Input\n                            name=\"password\"\n                            type=\"password\"\n                            value={password}\n                            onChange={setPassword}\n                            placeholder=\"password\"\n                        />\n                        <Button>Sign in</Button>\n                    </FormWrapper>\n                </form>\n            </TabsItem>\n        </Tabs>\n    )\n}\n\nconst FormWrapper = styled.div`\n    padding: 30px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { IconName, Icon } from '../Icon'\nimport { brand, white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\nimport { NAV_HEIGHT } from '../Nav'\n\ntype FloatingButtonProps = {\n    onClick: () => void\n    iconName: IconName\n}\n\nexport const FloatingButton = (props: FloatingButtonProps) => (\n    <Button onClick={props.onClick}>\n        <Icon name={props.iconName} size=\"normal\" />\n    </Button>\n)\n\nconst Button = styled.button`\n    position: fixed;\n    bottom: ${NAV_HEIGHT + 15}px;\n    right: 15px;\n    padding: 12px;\n    border: 2px solid ${white};\n    color: ${brand};\n    box-shadow: ${floatingShadow};\n    border-radius: 50%;\n    background: ${white};\n    transition: 0.2s;\n    &:active {\n        border-color: ${brand};\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\ntype SearchProps = {\n    value: string\n    onChange: (value: string) => void\n}\n\nexport const Search = (props: SearchProps) => (\n    <Input\n        type=\"search\"\n        value={props.value}\n        onChange={e => props.onChange(e.target.value)}\n        placeholder=\"Search…\"\n    />\n)\n\nconst Input = styled.input``\n","import {\n    ENTERING,\n    EXITED,\n    EXITING,\n    TransitionStatus,\n} from 'react-transition-group/Transition'\nimport { css, keyframes } from 'styled-components'\n\nexport const fadeDuration = 400\nconst easing = 'cubic-bezier(0.29, 0.87, 0.54, 0.99)'\n\nconst fadeUpKeyframes = keyframes`\n    from {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n    to {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n`\n\nconst fadeDownKeyframes = keyframes`\n    from {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n    to {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n`\n\nconst fadeInKeyframes = keyframes`\n    from { opacity: 0; }\n    to { opacity: 1; }\n`\n\nconst fadeOutKeyframes = keyframes`\n    from { opacity: 1; }\n    to { opacity: 0; }\n`\n\nexport const fadeUpAnimation = css`\n    animation: ${fadeUpKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeDownAnimation = css`\n    animation: ${fadeDownKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeUpDownAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeUpAnimation};\n    ${status === EXITING && fadeDownAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'display: none;'};\n`\n\nexport const fadeInAnimation = css`\n    animation: ${fadeInKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeOutAnimation = css`\n    animation: ${fadeOutKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeInOutAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeInAnimation};\n    ${status === EXITING && fadeOutAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'display: none;'};\n`\n","import React, { ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport Transition, { TransitionStatus } from 'react-transition-group/Transition'\nimport styled from 'styled-components'\nimport { fadeInOutAnimation, fadeUpDownAnimation } from '../../styles/animations'\nimport { white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\n\ntype ModalProps = {\n    show: boolean\n    children?: ReactNode\n    close?: () => void\n}\n\nexport const Modal = (props: ModalProps) => {\n    return ReactDOM.createPortal(\n        <Transition in={props.show} timeout={1000}>\n            {status => (\n                <>\n                    <ModalBox status={status}>{props.children}</ModalBox>\n                    <Overlay status={status} onClick={props.close} />\n                </>\n            )}\n        </Transition>,\n        modalRoot\n    )\n}\n\nconst modalRoot = document.getElementById('modals')\n\nconst ModalBox = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 15px;\n    margin: 0 auto auto;\n    width: calc(100vw - 20px);\n    max-height: calc(100vh - 20px);\n    overflow-y: auto;\n    background: ${white};\n    border-radius: 4px;\n    z-index: 1000;\n    padding: 15px;\n    box-shadow: ${floatingShadow};\n    ${p => fadeUpDownAnimation(p.status)};\n`\n\nconst Overlay = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.1);\n    z-index: 100;\n    ${p => fadeInOutAnimation(p.status)};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\ntype EditableListProps = {\n    list: string[]\n    onChange: (list: string[]) => void\n}\nexport const EditableList = (props: EditableListProps) => (\n    <DragDropContext\n        onDragEnd={result => {\n            console.log(result)\n            if (!result.destination) return\n\n            const items = reorder(\n                props.list,\n                result.source.index,\n                result.destination.index\n            )\n            props.onChange(items)\n        }}\n    >\n        <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n                <List {...provided.droppableProps} ref={provided.innerRef}>\n                    {props.list.map((item, index) => (\n                        <Draggable key={item} draggableId={item} index={index}>\n                            {(provided, snapshot) => (\n                                <ListElement\n                                    key={index}\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={provided.draggableProps.style}\n                                >\n                                    {item}\n                                    <Cross\n                                        onClick={() => {\n                                            props.onChange(remove(props.list, index))\n                                        }}\n                                    />\n                                </ListElement>\n                            )}\n                        </Draggable>\n                    ))}\n                    {provided.placeholder}\n                </List>\n            )}\n        </Droppable>\n    </DragDropContext>\n)\n\nconst remove = (list: string[], index: number) => list.filter((el, i) => index !== i)\n\nconst reorder = (list: string[], startIndex: number, endIndex: number) => {\n    const result = Array.from(list)\n    const [removed] = result.splice(startIndex, 1)\n    result.splice(endIndex, 0, removed)\n\n    return result\n}\n\nconst List = styled.div``\nconst ListElement = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n`\nconst Cross = styled.button`\n    border-left: 1px solid #ccc;\n    color: red;\n    padding: 3px;\n    :after {\n        content: 'x';\n    }\n`\n","import { DictionaryItem } from './types'\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('')\nconst cache = {}\n\nexport const fetchDictionary = async (\n    letter: string\n): Promise<DictionaryItem[] | null> => {\n    if (!alphabet.includes(letter)) {\n        return null\n    }\n\n    if (cache[letter]) {\n        return cache[letter]\n    }\n\n    const res = await fetch(`/dictionary/en-pl/${letter}.json`)\n    const data: DictionaryItem[] = await res.json()\n\n    cache[letter] = data\n\n    return data\n}\n","import { useState, useMemo } from 'react'\nimport { useDebounce } from '../useDebounce'\nimport { fetchDictionary } from './fetchDictionary'\nimport { DictionaryItem } from './types'\n\nexport const useDictionary = (query: string) => {\n    const [currentQuery, setCurrentQuery] = useState('')\n\n    const [results, setResults] = useState<DictionaryItem[]>([])\n\n    useDebounce(() => setCurrentQuery(query.toLowerCase()), 400, [query])\n\n    useMemo(() => {\n        const letter = (currentQuery[0] || '').toLowerCase()\n\n        const run = async () => {\n            const list = await fetchDictionary(letter)\n\n            if (!list) {\n                setResults([])\n                return\n            }\n\n            const results = list\n                .filter(item => item.word.toLowerCase().startsWith(currentQuery))\n                .slice(0, 5)\n\n            setResults(results)\n        }\n\n        run()\n    }, [currentQuery])\n\n    return { results }\n}\n","import { useEffect } from 'react'\n\nexport const useDebounce = (fn: () => any, ms: number = 0, args: any[] = []) => {\n    useEffect(() => {\n        const handle = setTimeout(fn.bind(null, args), ms)\n\n        return () => {\n            clearTimeout(handle)\n        }\n    }, [args, fn, ms])\n}\n","import React, { useState } from 'react'\nimport useList from 'react-use/lib/useList'\nimport styled from 'styled-components'\nimport { Button } from '../../components/Button'\nimport { EditableList } from '../../components/EditableList'\nimport { Input } from '../../components/Input'\nimport { Modal } from '../../components/Modal'\nimport { useDictionary } from '../../hooks/useDictionary'\nimport { DictionaryTrans } from '../../hooks/useDictionary/types'\nimport { UnSavedWord } from '../../store/state/types/State'\nimport { light } from '../../styles/colors'\nimport { useWords } from '../../store'\n\nexport const WordForm = () => {\n    const { addWord } = useWords()\n\n    const [wordInput, setWordInput] = useState('')\n    const [translationInput, setTranslationInput] = useState('')\n    const [exampleInput, setExampleInput] = useState('')\n\n    const [translationList, translationListActions] = useList<string>()\n    const [exampleList, exampleListActions] = useList<string>()\n\n    const { results } = useDictionary(wordInput)\n\n    const addNewWord = () => {\n        addWord({\n            name: wordInput,\n            translation: translationList,\n            example: exampleList,\n        })\n        setWordInput('')\n        setTranslationInput('')\n        setExampleInput('')\n    }\n\n    const getTrans = (trans: DictionaryTrans[]) => trans.map(t => t.texts[0]).join(', ')\n\n    return (\n        <>\n            <h4>Word</h4>\n            <div>\n                <Input value={wordInput} placeholder=\"Word\" onChange={setWordInput} />\n            </div>\n            {!translationList.length && (\n                <div>\n                    {results.map(item => (\n                        <AutocompleteItem\n                            key={item.id}\n                            onClick={() => {\n                                setWordInput(item.word)\n                                const translations = item.trans.map(t => t.texts[0])\n                                translationListActions.set(translations)\n                            }}\n                        >\n                            <b>{item.word}</b> - {getTrans(item.trans)}\n                        </AutocompleteItem>\n                    ))}\n                </div>\n            )}\n\n            <h4>Translations</h4>\n            <EditableList list={translationList} onChange={translationListActions.set} />\n            <InputWithButtonWrapper>\n                <div>\n                    <Input\n                        value={translationInput}\n                        onChange={setTranslationInput}\n                        placeholder=\"Translation\"\n                    />\n                </div>\n                <Button\n                    onClick={() => {\n                        if (!translationInput) return\n                        translationListActions.push(translationInput)\n                        setTranslationInput('')\n                    }}\n                >\n                    +\n                </Button>\n            </InputWithButtonWrapper>\n\n            <h4>Examples</h4>\n            <EditableList list={exampleList} onChange={translationListActions.set} />\n            <InputWithButtonWrapper>\n                <div>\n                    <Input\n                        value={exampleInput}\n                        onChange={setExampleInput}\n                        placeholder=\"Example\"\n                    />\n                </div>\n                <Button\n                    onClick={() => {\n                        if (!exampleInput) return\n                        exampleListActions.push(exampleInput)\n                        setExampleInput('')\n                    }}\n                >\n                    +\n                </Button>\n            </InputWithButtonWrapper>\n\n            {/* <Button onClick={props.onClose}>Close</Button> */}\n            <Button onClick={addNewWord}>Save</Button>\n        </>\n    )\n}\n\nconst AutocompleteItem = styled.button`\n    display: block;\n    width: 100%;\n    padding: 1em 0;\n    border: none;\n    border-bottom: 1px solid ${light};\n    text-align: left;\n    font-size: 14px;\n`\n\nconst InputWithButtonWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n`\n","import { UnSavedWord } from '../state/types/State'\n\ntype Preset = {\n    id: string\n    name: string\n    getList(): Promise<UnSavedWord[]>\n}\n\nexport const presets: Preset[] = [\n    {\n        id: 'basic-weekdays',\n        name: 'Weekdays',\n        getList: () =>\n            import('./base/weekdays').then(({ list }) =>\n                list.map(el => ({ ...el, preset: 'basic-weekdays' }))\n            ),\n    },\n]\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../components/Button'\nimport { presets } from '../../store/presets'\nimport { useWords } from '../../store'\n\nexport const WordPresets = () => {\n    const { addManyWords } = useWords()\n\n    return (\n        <Container>\n            <ul>\n                {presets.map(item => (\n                    <li key={item.id}>\n                        {item.name}\n                        <Button onClick={() => item.getList().then(addManyWords)}>\n                            +\n                        </Button>\n                    </li>\n                ))}\n            </ul>\n        </Container>\n    )\n}\n\nconst Container = styled.div``\n","import React from 'react'\nimport { Modal } from '../../components/Modal'\nimport { UnSavedWord } from '../../store/state/types/State'\nimport { Tabs, TabsItem } from '../../components/Tabs'\nimport { WordForm } from './WordForm'\nimport { WordPresets } from './WordPresets'\n\ntype WordModalProps = {\n    show: boolean\n    onClose: () => void\n}\n\nexport const WordModal = (props: WordModalProps) => {\n    return (\n        <Modal show={props.show} close={props.onClose}>\n            <Tabs>\n                <TabsItem name=\"New word\">\n                    <WordForm />\n                </TabsItem>\n                <TabsItem name=\"Presets\">\n                    <WordPresets />\n                </TabsItem>\n            </Tabs>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Word } from '../../store/state/types/State'\nimport { light, brand, gray } from '../../styles/colors'\n\ntype WordsItemProps = {\n    word: Word\n    removeWord: () => void\n}\n\nexport const WordsItem = (props: WordsItemProps) => (\n    <Container>\n        <div>\n            <Name>{props.word.name} - </Name>\n            <Translations>{props.word.translation.join(', ')}</Translations>\n\n            {props.word.action && 'Loading…'}\n            {!!props.word.example.length && (\n                <Examples>{props.word.example.join(', ')}</Examples>\n            )}\n        </div>\n\n        <RemoveButton onClick={props.removeWord}>✖</RemoveButton>\n    </Container>\n)\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    padding: 12px;\n    border-bottom: 1px solid ${light};\n`\n\nconst Name = styled.strong`\n    font-weight: normal;\n    font-size: 1.2em;\n`\n\nconst Translations = styled.span`\n    color: ${brand};\n    font-size: 1.2em;\n`\n\nconst Examples = styled.div`\n    color: ${gray};\n    font-size: 0.8em;\n    font-style: italic;\n`\n\nconst RemoveButton = styled.button`\n    border: none;\n    background: none;\n`\n","import React, { ElementType } from 'react'\nimport styled from 'styled-components'\nimport { Nav, NAV_HEIGHT } from './components/Nav'\nimport { Game } from './screens/Game'\nimport { Home } from './screens/Home'\nimport { Settings } from './screens/Settings'\nimport { Words } from './screens/Words'\nimport { useRouter, useWordsPersist } from './store'\nimport { RouteName } from './store/types/RouteName'\nimport { useWatchAuthChange } from './store/useAuth'\n\nconst screens: Record<RouteName, ElementType> = {\n    [RouteName.Home]: Home,\n    [RouteName.Words]: Words,\n    [RouteName.Profile]: Settings,\n    [RouteName.Game]: Game,\n}\n\nexport const App = () => {\n    useWordsPersist()\n    useWatchAuthChange()\n\n    const { route, setRoute } = useRouter()\n    const Page = screens[route]\n\n    return (\n        <>\n            <Content>\n                <Page />\n            </Content>\n            <NavContainer>\n                <Nav active={route} onChange={setRoute} />\n            </NavContainer>\n        </>\n    )\n}\n\nconst Content = styled.main`\n    height: calc(100% - ${NAV_HEIGHT}px);\n    position: relative;\n    width: 100%;\n    overflow-y: auto;\n`\n\nconst NavContainer = styled.div`\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    left: 0;\n`\n","import React, { useState } from 'react'\nimport { FloatingButton } from '../../components/FloatingButton'\nimport { Header } from '../../components/Header'\nimport { Search } from '../../components/Search'\nimport { useWords } from '../../store'\nimport { WordModal } from './WordModal'\nimport { WordsItem } from './WordsItem'\n\nexport const Words = () => {\n    const [search, setSearch] = useState('')\n\n    const { words, removeWord } = useWords()\n    const [showModal, setShowModal] = useState(false)\n\n    return (\n        <div>\n            <Header title=\"Words\" iconName=\"words\">\n                <Search value={search} onChange={setSearch} />\n            </Header>\n            <div>\n                {words &&\n                    words\n                        .filter(word => word.name.includes(search))\n                        .map(word => (\n                            <WordsItem\n                                key={word.id}\n                                word={word}\n                                removeWord={() => removeWord(word.id)}\n                            />\n                        ))}\n            </div>\n            <FloatingButton onClick={() => setShowModal(!showModal)} iconName=\"plus\" />\n            <WordModal show={showModal} onClose={() => setShowModal(false)} />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Button } from '../../components/Button'\nimport { Header } from '../../components/Header'\nimport { useGlobalState } from '../../store/state/store'\nimport { useAuthActions } from '../../store/useAuth'\nimport { useIsLoading } from '../../store/useIsLoading'\nimport { AuthForm } from './AuthForm'\n\nexport const Settings = () => {\n    const isLoading = useIsLoading()\n    const { logOut } = useAuthActions()\n    const [user] = useGlobalState('user')\n\n    if (isLoading) {\n        return (\n            <div>\n                <Header title=\"Settings\" iconName=\"profile\" />\n                <p>Loading…</p>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Header title=\"Settings\" iconName=\"profile\" />\n            {!user ? (\n                <AuthForm />\n            ) : (\n                <Button type=\"button\" onClick={() => logOut()}>\n                    Sign out\n                </Button>\n            )}\n        </div>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import * as Sentry from '@sentry/browser'\nimport React, { Component, ErrorInfo } from 'react'\n\ntype ErrorBoundaryState = {\n    error: Error | null\n    eventId: string | null\n}\n\nexport class ErrorBoundary extends Component<{}, ErrorBoundaryState> {\n    public state = {\n        error: null,\n        eventId: null,\n    }\n\n    public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        this.setState({ error })\n\n        Sentry.withScope(scope => {\n            scope.setExtras(errorInfo)\n            this.setState({ eventId: Sentry.captureException(error) })\n        })\n    }\n\n    public render() {\n        if (this.state.error) {\n            return (\n                <div>\n                    <h1>Error occurred ;(</h1>\n                    <a onClick={this.handleReportDialog}>Report feedback</a>\n                    <pre>{JSON.stringify(this.state.error, null, 2)}</pre>\n                </div>\n            )\n        }\n\n        return this.props.children\n    }\n\n    private handleReportDialog = () => {\n        Sentry.showReportDialog({ eventId: this.state.eventId })\n    }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport * as Sentry from '@sentry/browser'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './styles/global.css'\nimport { GlobalStateProvider } from './store'\nimport { ErrorBoundary } from './components/ErrorBoundary'\n\nSentry.init({\n    dsn: 'https://adf49e52f07d479098537009eb0044b0@sentry.io/1446350',\n})\n\nrender(\n    <ErrorBoundary>\n        <GlobalStateProvider>\n            <App />\n        </GlobalStateProvider>\n    </ErrorBoundary>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { dispatch, useGlobalState } from './state/store'\nimport { useEffect, useState } from 'react'\nimport { firebaseApp } from './firebase'\nimport { Word, WordAction } from './state/types/State'\n\nexport const useWordsPersist = () => {\n    const [user] = useGlobalState('user')\n    const [localWords] = useGlobalState('words')\n\n    useEffect(() => {\n        // Waiting for user status…\n        if (user === undefined) return\n\n        // User is logged out\n        if (user === null) {\n            dispatch({ type: 'WORDS/SET', payload: [] })\n            return\n        }\n\n        // Listen on words updates\n        const unsubscribe = firebaseApp\n            .firestore()\n            .collection('users')\n            .doc(user.id)\n            .collection('words')\n            .onSnapshot(snapshot => {\n                const serverWords: Word[] = []\n\n                snapshot.forEach(doc => {\n                    const data = doc.data()\n                    serverWords.push({\n                        id: doc.id,\n                        name: data.name,\n                        translation: data.translation,\n                        example: data.example,\n                    })\n                })\n\n                dispatch({ type: 'WORDS/SET', payload: serverWords })\n            })\n\n        return unsubscribe\n    }, [user])\n\n    // This one react only when words are changed (action field in Word)\n    useEffect(() => {\n        if (!localWords) return\n\n        const wordToAdd = localWords.filter(w => w.action === WordAction.Add)\n        const wordToDelete = localWords.filter(w => w.action === WordAction.Delete)\n\n        if ((!wordToAdd && !wordToDelete) || !user) return\n\n        const wordsFirebaseRef = firebaseApp\n            .firestore()\n            .collection('users')\n            .doc(user.id)\n            .collection('words')\n\n        wordToAdd.forEach(word => {\n            const newWord: Word = { ...word }\n            // Very important one, without this we will have infinite loop :O\n            delete newWord.action\n            delete newWord.id // Also we can remove local ID\n\n            wordsFirebaseRef.add(newWord)\n        })\n\n        wordToDelete.forEach(word => {\n            wordsFirebaseRef.doc(word.id).delete()\n        })\n    }, [localWords, user])\n}\n"],"sourceRoot":""}