{"version":3,"sources":["styles/colors.ts","styles/shadow.ts","components/Icon/icons/home.tsx","components/Icon/icons/play.tsx","components/Icon/icons/plus.tsx","components/Icon/icons/profile.tsx","components/Icon/icons/words.tsx","components/Icon/Icon.tsx","store/types/RouteName.ts","components/Nav/Nav.tsx","styles/transitions.ts","components/Keyboard/getKeysForWord.tsx","components/Keyboard/Key.tsx","components/Keyboard/Keyboard.tsx","components/Typewriter/Pipe.tsx","components/Typewriter/Typewriter.tsx","store/state/types/State.ts","store/state/initialState.ts","store/state/reducer.ts","store/state/helpers/reducerLogger.ts","store/state/store.ts","store/useRouter.ts","store/useWords.ts","store/firebase.ts","screens/Game/Game.tsx","components/Logo/Logo.tsx","store/useIsLoading.ts","screens/Home/StartButton.tsx","screens/Home/Home.tsx","components/Button/Button.tsx","components/Header/Header.tsx","components/Input/Input.tsx","screens/Settings/Settings.tsx","components/FloatingButton/FloatingButton.tsx","components/Search/Search.tsx","components/EditableList/EditableList.tsx","styles/animations.ts","components/Modal/Modal.tsx","hooks/useDictionary/fetchDictionary.ts","hooks/useDictionary/useDictionary.ts","hooks/useDebounce.ts","screens/Words/WordForm.tsx","screens/Words/WordsItem.tsx","App.tsx","screens/Words/Words.tsx","serviceWorker.ts","components/ErrorBoundary/ErrorBoundary.tsx","index.tsx","store/useWordsPersist.ts"],"names":["brand","white","light","muted","gray","floatingShadow","home","size","react_default","a","createElement","width","height","viewBox","fillRule","clipRule","d","play","plus","profile","words","RouteName","sizes","normal","large","Icon","_ref","name","_ref$size","_ref$block","block","Container","icons","styled","div","_templateObject","p","Nav","prop","react","Nav_Container","NavButton","isActive","active","Home","onClick","onChange","Icon_Icon","Words","Profile","nav","Nav_templateObject","button","_templateObject2","props","activeCSS","inActiveCSS","css","_templateObject3","_templateObject4","special","KEYS","map","row","split","getKey","key","word","fakeKeys","random","seedRandom","visible","includes","Key","Key_Container","onTouchStart","isSpace","symbol","esm","keyEventName","KEYPRESS","keyValue","onKeyHandle","Key_templateObject","highlight","Key_templateObject2","Keyboard","Keyboard_Container","originalWord","arguments","length","undefined","toLowerCase","k","getKeysForWord","i","Row","Key_Key","onPress","Keyboard_templateObject","Keyboard_templateObject2","Pipe","pipeSpring","useSpring","transform","from","PipeContainer","style","animated","span","Pipe_templateObject","WordAction","Typewriter","progress","typed","substr","Typewriter_Container","TypeWrapper","w","Segment","Pipe_Pipe","Letter","letterState","Typewriter_templateObject","Typewriter_templateObject2","Typewriter_templateObject3","Typewriter_templateObject4","initialState","route","lastRoutes","user","reducerFunc","createStore","state","action","type","Object","objectSpread","payload","concat","toConsumableArray","slice","newWord","id","uuid","Add","Delete","Error","console","log","GlobalStateProvider","dispatch","useGlobalState","useRouter","_useGlobalState","slicedToArray","setRoute","goBack","useWords","addWord","removeWord","randomWord","Math","floor","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Game_templateObject","Game_templateObject2","Bottom","Game_templateObject3","Complete","Game_templateObject4","Button","_templateObject5","Logo","reSpring","opacity","delay","wordSpring","Logo_Container","First","Logo_Pipe","Last","h1","Logo_templateObject","Logo_templateObject2","Logo_templateObject3","Logo_templateObject4","useIsLoading","_useGlobalState3","StartButton","loading","CircleButton","Game","StartButton_templateObject","Home_templateObject","WordsCount","Home_templateObject2","Button_templateObject","Header","HeaderWrapper","iconName","title","children","header","Header_templateObject","Input","value","_props$type","placeholder","autoFocus","_useState","useState","_useState2","focus","setFocus","_useState3","_useState4","linePosition","setLinePosition","labelRef","useRef","defaultLinePosition","current","getBoundingClientRect","useEffect","Label","onMouseDown","e","pageX","ref","LabelName","move","InputStyled","event","target","onFocus","onBlur","transformOrigin","label","Input_templateObject","Input_templateObject2","input","Input_templateObject3","FormWrapper","Settings_templateObject","FloatingButton","FloatingButton_Button","FloatingButton_templateObject","NAV_HEIGHT","Search","Search_Input","Search_templateObject","EditableList","react_beautiful_dnd_esm","onDragEnd","result","destination","items","reorder","list","source","index","droppableId","provided","snapshot","List","assign","droppableProps","innerRef","item","draggableId","ListElement","draggableProps","dragHandleProps","Cross","remove","filter","el","startIndex","endIndex","Array","_result$splice","splice","removed","EditableList_templateObject","EditableList_templateObject2","EditableList_templateObject3","easing","fadeUpKeyframes","keyframes","animations_templateObject","fadeDownKeyframes","animations_templateObject2","fadeInKeyframes","animations_templateObject3","fadeOutKeyframes","animations_templateObject4","fadeUpAnimation","animations_templateObject5","fadeDownAnimation","_templateObject6","fadeInAnimation","_templateObject8","fadeOutAnimation","_templateObject9","Modal","ReactDOM","createPortal","Transition","in","show","timeout","status","Fragment","ModalBox","footer","Overlay","close","modalRoot","document","getElementById","Modal_templateObject","_templateObject7","ENTERING","EXITING","EXITED","Modal_templateObject2","_templateObject10","alphabet","cache","fetchDictionary","asyncToGenerator","regenerator_default","mark","_callee","letter","res","data","wrap","_context","prev","next","abrupt","fetch","sent","json","stop","_x","apply","this","useDictionary","query","currentQuery","setCurrentQuery","results","setResults","fn","ms","args","handle","setTimeout","bind","clearTimeout","useDebounce","useMemo","startsWith","run","WordForm","wordInput","setWordInput","translationInput","setTranslationInput","_useState5","_useState6","exampleInput","setExampleInput","_useList","useList","_useList2","translationList","translationListActions","_useList3","_useList4","exampleList","exampleListActions","addNewWord","onSave","translation","example","onClose","Modal_Modal","Button_Button","Input_Input","AutocompleteItem","translations","trans","t","texts","set","join","EditableList_EditableList","InputWithButtonWrapper","push","WordForm_templateObject","WordForm_templateObject2","WordsItem","WordsItem_Container","Name","Translations","Examples","RemoveButton","WordsItem_templateObject","strong","WordsItem_templateObject2","WordsItem_templateObject3","WordsItem_templateObject4","WordsItem_templateObject5","screens","_screens","defineProperty","isLoading","Home_Container","Logo_Logo","StartButton_StartButton","_useWords","search","setSearch","showModal","setShowModal","Header_Header","Search_Search","WordsItem_WordsItem","FloatingButton_FloatingButton","WordForm_WordForm","email","setEmail","password","setPassword","auth","signOut","onSubmit","preventDefault","createUserWithEmailAndPassword","catch","m","signInWithEmailAndPassword","setProgress","setWord","wordRight","isComplete","handleNextWord","Game_Container","Game_Row","Typewriter_Typewriter","Keyboard_Keyboard","toLocaleLowerCase","Content","main","App_templateObject","NavContainer","App_templateObject2","Boolean","window","location","hostname","match","ErrorBoundary","_Component","_getPrototypeOf2","_this","classCallCheck","_len","_key","possibleConstructorReturn","getPrototypeOf","call","error","eventId","handleReportDialog","Sentry","inherits","createClass","errorInfo","_this2","setState","scope","setExtras","JSON","stringify","Component","dsn","render","ErrorBoundary_ErrorBoundary","localWords","firestore","collection","doc","onSnapshot","serverWords","forEach","wordToAdd","wordToDelete","wordsFirebaseRef","add","delete","useWordsPersist","_useRouter","Page","onAuthStateChanged","uid","displayName","Nav_Nav","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6XAAaA,EAAQ,UACRC,EAAQ,UAERC,EAAQ,qBACRC,EAAQ,qBACRC,EAAO,qBCJPC,EAAiB,iCCCjBC,EAAO,SAACC,GAAD,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,MAAOJ,EAAMK,OAAQL,EAAMM,QAAQ,aACpCL,EAAAC,EAAAC,cAAA,QACII,SAAS,UACTC,SAAS,UACTC,EAAE,sHCLDC,EAAO,SAACV,GAAD,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,MAAOJ,EAAMK,OAAQL,EAAMM,QAAQ,aACpCL,EAAAC,EAAAC,cAAA,QACII,SAAS,UACTC,SAAS,UACTC,EAAE,yGCLDE,EAAO,SAACX,GAAD,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,MAAOJ,EAAMK,OAAQL,EAAMM,QAAQ,aACpCL,EAAAC,EAAAC,cAAA,QAAMM,EAAE,gDCFHG,EAAU,SAACZ,GAAD,OACnBC,EAAAC,EAAAC,cAAA,OAAKC,MAAOJ,EAAMK,OAAQL,EAAMM,QAAQ,aACpCL,EAAAC,EAAAC,cAAA,QACII,SAAS,UACTC,SAAS,UACTC,EAAE,6SCLDI,EAAQ,SAACb,GAAD,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,MAAOJ,EAAMK,OAAQL,EAAMM,QAAQ,aACpCL,EAAAC,EAAAC,cAAA,QACII,SAAS,UACTC,SAAS,UACTC,EAAE,kiBCHd,ICJYK,EDINC,EAAQ,CACVC,OAAQ,GACRC,MAAO,IAYEC,EAAO,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAHC,EAAAF,EAASnB,YAAT,IAAAqB,EAAgB,SAAhBA,EAAAC,EAAAH,EAA0BI,aAA1B,IAAAD,KAAA,OAChBrB,EAAAC,EAAAC,cAACqB,EAAD,CAAWD,MAAOA,GAAQE,EAAML,GAAML,EAAMf,MAG1CwB,EAAYE,IAAOC,IAAVC,IACA,SAAAC,GAAC,OAAKA,EAAEN,MAAQ,QAAU,8zCCvB7BT,+ECQL,IAOMgB,EAAM,SAACC,GAChB,OACIC,EAAA,cAACC,EAAD,KACID,EAAA,cAACE,EAAD,CACIC,SAAUJ,EAAKK,SAAWtB,EAAUuB,KACpCC,QAAS,kBAAMP,EAAKQ,SAASzB,EAAUuB,QAEvCL,EAAA,cAACQ,EAAD,CAAMpB,KAAK,OAAOG,OAAK,IAJ3B,QAOAS,EAAA,cAACE,EAAD,CACIC,SAAUJ,EAAKK,SAAWtB,EAAU2B,MACpCH,QAAS,kBAAMP,EAAKQ,SAASzB,EAAU2B,SAEvCT,EAAA,cAACQ,EAAD,CAAMpB,KAAK,QAAQG,OAAK,IAJ5B,SAOAS,EAAA,cAACE,EAAD,CACIC,SAAUJ,EAAKK,SAAWtB,EAAU4B,QACpCJ,QAAS,kBAAMP,EAAKQ,SAASzB,EAAU4B,WAEvCV,EAAA,cAACQ,EAAD,CAAMpB,KAAK,UAAUG,OAAK,IAJ9B,aAWNC,EAAYE,IAAOiB,IAAVC,IACGlD,EApCQ,GRRD,+BQqDnBwC,EAAYR,IAAOmB,OAAVC,IACF,SAAAC,GAAK,OAAKA,EAAMZ,SAAW1C,EAAQI,GAmBtC,SAAAkD,GAAK,OAAKA,EAAMZ,SAAWa,EAAYC,GAM3BxD,GAIhBuD,EAAYE,YAAHC,ICnFK,YDuFF1D,GAGZwD,EAAcC,YAAHE,qCExFXC,EAAU,MAEVC,EAAO,CAAC,aAAc,YAAa,UAAWD,GAASE,IAAI,SAAAC,GAAG,OAAIA,EAAIC,MAAM,MAe5EC,EAAS,SAACC,EAAaC,EAAcC,GACvC,IAAMC,EAASD,EAAWE,IAAWJ,EAAMC,EAAjBG,GAA2B,EAErD,MAAO,CACHJ,MACAK,QAASJ,EAAKK,SAASN,IAASE,EAAWC,IAAWT,EAAQY,SAASN,2hBCZxE,IAAMO,EAAM,SAACnB,GAAD,OACf9C,EAAAC,EAAAC,cAACgE,EAAD,CACIH,QAASjB,EAAMiB,QACfI,aAAcrB,EAAMT,QACpB+B,QAA0B,MAAjBtB,EAAMuB,QAEdvB,EAAMuB,OACPrE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACIC,aAAcC,IACdC,SAAU3B,EAAMuB,OAChBK,YAAa5B,EAAMT,YAKzBd,EAAYE,IAAOmB,OAAV+B,IACF,SAAA/C,GAAC,OAAKA,EAAEwC,QAAU,OAAS,OAIhB5E,EACT,SAAAoC,GAAC,OAAKA,EAAEmC,QAAU,EAAI,IAExBvE,EFnCO,YE0Cd,SAAAoC,GAAC,OAAIA,EAAEmC,SAAWa,IAElBA,EAAY3B,YAAH4B,IAGarF,EACXC,iSCnCV,IAAMqF,EAAW,SAAChC,GAAD,OACpB9C,EAAAC,EAAAC,cAAC6E,EAAD,KFD0B,SAACC,GAAoD,IAA9BpB,EAA8BqB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnB,EACtDtB,EAAOqB,EAAaI,cAE1B,OAAO/B,EAAKC,IAAI,SAAAC,GAAG,OAAIA,EAAID,IAAI,SAAA+B,GAAC,OAAI5B,EAAO4B,EAAG1B,EAAMC,OED/C0B,CAAexC,EAAMa,KAAMb,EAAMc,UAAUN,IAAI,SAACC,EAAKgC,GAAN,OAC5CvF,EAAAC,EAAAC,cAACsF,EAAD,CAAK9B,IAAK6B,GACLhC,EAAID,IAAI,SAAA+B,GAAC,OACNrF,EAAAC,EAAAC,cAACuF,EAAD,CACI/B,IAAK2B,EAAE3B,IACPW,OAAQgB,EAAE3B,IACVK,QAASsB,EAAEtB,QACX1B,QAAS,WACDgD,EAAEtB,SACFjB,EAAM4C,QAAQL,EAAE3B,eAU1CnC,EAAYE,IAAOC,IAAViE,IAEGlG,EZpCO,+BYwCnB+F,EAAM/D,IAAOC,IAAVkE,yOCnCF,IAAMC,GAAO,WAChB,IAAMC,EAAaC,aAAU,CACzBC,UAAW,yBACXC,KAAM,CACFD,UAAW,iCAGnB,OAAOhG,EAAAC,EAAAC,cAACgG,GAAD,CAAeC,MAAOL,KAG3BI,GAAgBzE,YAAO2E,KAASC,KAAhB5E,CAAH6E,KAMK9G,ixCCXjB,ICRK+G,GDQCC,GAAa,SAAC1D,GAA2B,IAC1Ca,EAAmBb,EAAnBa,KAAM8C,EAAa3D,EAAb2D,SACRC,EAAQ/C,EAAKgD,OAAO,EAAGF,GAE7B,OACIzG,EAAAC,EAAAC,cAAC0G,GAAD,KACI5G,EAAAC,EAAAC,cAAC2G,GAAD,KACKlD,EAAKH,MAAM,IAAIF,IAAI,SAACwD,EAAGvB,GACpB,OACIvF,EAAAC,EAAAC,cAAC6G,GAAD,CAASrD,IAAKoD,EAAIvB,GACbA,IAAMkB,GAAYzG,EAAAC,EAAAC,cAAC8G,GAAD,CAAMtD,IAAKgD,IAC9B1G,EAAAC,EAAAC,cAAC+G,GAAD,CAAQC,YAAaT,GAAYlB,GAAIuB,SAS3DvF,GAAYE,IAAOC,IAAVyF,MAWTN,GAAcpF,IAAOC,IAAV0F,MAMXL,GAAUtF,IAAO4E,KAAVgB,MASPJ,GAASxF,IAAO4E,KAAViB,KAQK,SAAAxE,GAAK,OAAKA,EAAMoE,YAAc,aAAe,YACjD,SAAApE,GAAK,OAAKA,EAAMoE,YAAc,sBf/DtB,We2EJvH,EACI,SAAAmD,GAAK,OAAKA,EAAMoE,YAAc,WAAa,YAC7C,SAAApE,GAAK,OAAKA,EAAMoE,YAAc,EAAI,aE5ExCK,GAAsB,CAC/BC,MAAO3G,EAAUuB,KACjBqF,WAAY,GACZ7G,WAAOuE,EACPuC,UAAMvC,mDDLEoB,yDEEL,ICAuBoB,MCCmCC,cDDnCD,GDAP,SAACE,EAAcC,GAClC,OAAQA,EAAOC,MACX,IAAK,mBACD,OAAOC,OAAAC,GAAA,EAAAD,CAAA,GACAH,EADP,CAEIL,MAAOM,EAAOI,QAAQV,MACtBC,WAAU,CAAGI,EAAML,OAATW,OAAAH,OAAAI,GAAA,EAAAJ,CAAmBH,EAAMJ,eAG3C,IAAK,cACD,OAAOO,OAAAC,GAAA,EAAAD,CAAA,GACAH,EADP,CAEIL,MAAOK,EAAMJ,WAAW,GACxBA,WAAYI,EAAMJ,WAAWY,MAAM,KAG3C,IAAK,YACD,OAAOL,OAAAC,GAAA,EAAAD,CAAA,GACAH,EADP,CAEIjH,MAAOkH,EAAOI,UAGtB,IAAK,iBACD,IAAMI,EAAaN,OAAAC,GAAA,EAAAD,CAAA,CACfO,GAAE,SAAAJ,OAAWK,QACbV,OAAQvB,GAAWkC,KAChBX,EAAOI,SAEd,OAAOF,OAAAC,GAAA,EAAAD,CAAA,GACAH,EADP,CAEIjH,MAAK,GAAAuH,OAAAH,OAAAI,GAAA,EAAAJ,CAAMH,EAAMjH,OAAZ,CAAmB0H,MAGhC,IAAK,oBACD,OAAON,OAAAC,GAAA,EAAAD,CAAA,GACAH,EADP,CAEIjH,MAAOiH,EAAMjH,MAAM0C,IAAI,SAAAK,GAAI,OACvBA,EAAK4E,KAAOT,EAAOI,QAAQK,GAA3BP,OAAAC,GAAA,EAAAD,CAAA,GAEarE,EAFb,CAGUmE,OAAQvB,GAAWmC,SAEvB/E,MAIlB,IAAK,cACD,OAAOqE,OAAAC,GAAA,EAAAD,CAAA,GACAH,EADP,CAEIH,KAAMI,EAAOI,UAGrB,QACI,MAAM,IAAIS,MAAM,oCCrDkC,SAC1Dd,EACAC,GAGA,OADAc,QAAQC,IAAI,SAAKf,EAAOC,KAAMD,EAAOI,SAC9BP,GAAYE,EAAOC,KCF1BP,IAFWuB,0BAAqBC,eAAUC,qBCFjCC,GAAY,WAAM,IAAAC,EACXF,GAAe,SAU/B,MAAO,CAAExB,MAXkBQ,OAAAmB,EAAA,EAAAnB,CAAAkB,EAAA,MAWXE,SARC,SAAC5B,GACduB,GAAS,CAAEhB,KAAM,mBAAoBG,QAAS,CAAEV,YAO1B6B,OAJX,WACXN,GAAS,CAAEhB,KAAM,mBCRZuB,GAAW,WAAM,IAAAJ,EACVF,GAAe,SAAxBpI,EADmBoH,OAAAmB,EAAA,EAAAnB,CAAAkB,EAAA,MAgB1B,MAAO,CAAEtI,QAAO2I,QAbA,SAAC5F,GACboF,GAAS,CAAEhB,KAAM,iBAAkBG,QAASvE,KAYvB6F,WATN,SAACjB,GAChBQ,GAAS,CAAEhB,KAAM,oBAAqBG,QAAS,CAAEK,SAQhBkB,WALlB,WACf,OAAK7I,GAAUA,EAAMsE,OACdtE,EAAM8I,KAAKC,MAAMD,KAAK7F,SAAWjD,EAAMsE,SADV,4BCF/B0E,gBAAcC,KAASC,cATb,CACnBC,OAAQ,0CACRC,WAAY,2BACZC,YAAa,kCACbC,UAAW,WACXC,cAAe,uBACfC,kBAAmB,eACnBC,MAAO,qkCCDJ,IAgED9I,GAAYE,IAAOC,IAAV4I,MAWT9E,GAAM/D,IAAOC,IAAV6I,MAKHC,GAAS/I,IAAOC,IAAV+I,MAKNC,GAAWjJ,IAAOC,IAAViJ,MAYRC,GAASnJ,IAAOmB,OAAViI,KAGCpL,ExBxGO,UwB2GFI,yjBC5GX,IAAMiL,GAAO,WAChB,IAAMC,EAAWhF,aAAU,CACvBiF,QAAS,EACThF,UAAW,eACXiF,MAAO,IACPhF,KAAM,CACF+E,QAAS,EACThF,UAAW,uBAGbkF,EAAanF,aAAU,CACzBiF,QAAS,EACThF,UAAW,eACXiF,MAAO,IACPhF,KAAM,CACF+E,QAAS,EACThF,UAAW,uBAGbF,EAAaC,aAAU,CACzBC,UAAW,yBACXC,KAAM,CACFD,UAAW,iCAInB,OACIhG,EAAAC,EAAAC,cAACiL,GAAD,KACInL,EAAAC,EAAAC,cAACkL,GAAD,CAAOjF,MAAO4E,GAAd,MACA/K,EAAAC,EAAAC,cAACmL,GAAD,CAAMlF,MAAOL,IACb9F,EAAAC,EAAAC,cAACoL,GAAD,CAAMnF,MAAO+E,GAAb,UAKN3J,GAAYE,IAAO8J,GAAVC,MAMTJ,GAAQ3J,YAAO2E,KAASC,KAAhB5E,CAAHgK,MAILH,GAAO7J,YAAO2E,KAASC,KAAhB5E,CAAHiK,MAIJ7F,GAAOpE,YAAO2E,KAASC,KAAhB5E,CAAHkK,KAMcnM,GC1DXoM,GAAe,WAAM,IAAA1C,EACdF,GAAe,SAAxBpI,EADuBoH,OAAAmB,EAAA,EAAAnB,CAAAkB,EAAA,MAAA2C,EAEf7C,GAAe,QAAvBtB,EAFuBM,OAAAmB,EAAA,EAAAnB,CAAA6D,EAAA,MAI9B,YAAiB1G,IAAVvE,QAAgCuE,IAATuC,8RCQ3B,IAAMoE,GAAc,SAAChJ,GAA4B,IAC5CsG,EAAaH,KAAbG,SAER,OAAItG,EAAMiJ,QACC/L,EAAAC,EAAAC,cAAC8L,GAAD,gBAGNlJ,EAAMlC,MAAMsE,OAUblF,EAAAC,EAAAC,cAAC8L,GAAD,CAAc3J,QAAS,kBAAM+G,EAASvI,EAAUoL,QAC5CjM,EAAAC,EAAAC,cAACqC,EAAD,CAAMpB,KAAK,OAAOpB,KAAK,QAAQuB,OAAK,IADxC,QARItB,EAAAC,EAAAC,cAAC8L,GAAD,CAAc3J,QAAS,kBAAM+G,EAASvI,EAAU2B,SAC5CxC,EAAAC,EAAAC,cAACqC,EAAD,CAAMpB,KAAK,OAAOpB,KAAK,QAAQuB,OAAK,IADxC,SAiBN0K,GAAevK,IAAOmB,OAAVsJ,KACAzM,EAEAI,EALD,kBAWJL,iUC1CN,IAqBD+B,GAAYE,IAAOC,IAAVyK,MAQTC,GAAa3K,IAAOC,IAAV2K,sNCjCT,IAAMzB,GAASnJ,IAAOmB,OAAV0J,KAGK9M,iOCIjB,IAAM+M,GAAS,SAACzJ,GACnB,OACI9C,EAAAC,EAAAC,cAACsM,GAAD,KACIxM,EAAAC,EAAAC,cAACqC,EAAD,CAAMpB,KAAM2B,EAAM2J,SAAU1M,KAAK,UACjCC,EAAAC,EAAAC,cAAA,UAAK4C,EAAM4J,OACV5J,EAAM6J,WAKbH,GAAgB/K,IAAOmL,OAAVC,w8BCPZ,IAAMC,GAAQ,SAAChK,GAAsB,IAChCiK,EAAiEjK,EAAjEiK,MADgCC,EACiClK,EAA1DiF,YADyB,IAAAiF,EAClB,OADkBA,EACVC,EAA2CnK,EAA3CmK,YAAa3K,EAA8BQ,EAA9BR,SAAU4K,EAAoBpK,EAApBoK,UAAW/L,EAAS2B,EAAT3B,KADxBgM,EAGdC,oBAAS,GAHKC,EAAArF,OAAAmB,EAAA,EAAAnB,CAAAmF,EAAA,GAGjCG,EAHiCD,EAAA,GAG1BE,EAH0BF,EAAA,GAAAG,EAIAJ,mBAAS,GAJTK,EAAAzF,OAAAmB,EAAA,EAAAnB,CAAAwF,EAAA,GAIjCE,EAJiCD,EAAA,GAInBE,EAJmBF,EAAA,GAMlCG,EAAWC,iBAAyB,MAEpCC,EAAsBF,EAASG,QAC/BH,EAASG,QAAQC,wBAAwB7N,MAAQ,EACjD,EAMN,OAJA8N,oBAAU,WACNN,EAAgBG,IACjB,CAACA,IAGA9N,EAAAC,EAAAC,cAACgO,GAAD,CACI/L,OAAQmL,EACRa,YAAa,SAAAC,GACTT,EAAgBS,EAAEC,QAEtBC,IAAKV,GAEL5N,EAAAC,EAAAC,cAACqO,GAAD,CAAWC,KAAgB,KAAVzB,GAAeE,GAChCjN,EAAAC,EAAAC,cAACuO,GAAD,CACI1G,KAAMA,EACNgF,MAAOA,EACPzK,SAAU,SAAAoM,GAAK,OAAIpM,EAASoM,EAAMC,OAAO5B,QACzC6B,QAAS,kBAAMrB,GAAS,IACxBsB,OAAQ,WACJlB,EAAgBG,GAChBP,GAAS,IAEbL,UAAWA,EACX/L,KAAMA,IAEVnB,EAAAC,EAAAC,cAAA,QAAMiG,MAAO,CAAE2I,gBAAe,GAAA3G,OAAKuF,EAAL,aAKpCQ,GAAQzM,IAAOsN,MAAVC,KAYiB,SAAAlM,GAAK,OAAKA,EAAMX,OAAS,EAAI,GACnC3C,GAKhB+O,GAAY9M,IAAOC,IAAVuN,KAMFtP,EAGI,SAAAmD,GAAK,OACdA,EAAM0L,KAAN,kDAGFC,GAAchN,IAAOyN,MAAVC,KAOcxP,gGCpFxB,IAyFDyP,GAAc3N,IAAOC,IAAV2N,2VCtFV,IAAMC,GAAiB,SAACxM,GAAD,OAC1B9C,EAAAC,EAAAC,cAACqP,GAAD,CAAQlN,QAASS,EAAMT,SACnBrC,EAAAC,EAAAC,cAACqC,EAAD,CAAMpB,KAAM2B,EAAM2J,SAAU1M,KAAK,aAInC6K,GAASnJ,IAAOmB,OAAV4M,KAEEC,GAGUhQ,EACXD,EACKK,EAEAJ,EAGMD,0ECtBjB,IAAMkQ,GAAS,SAAC5M,GAAD,OAClB9C,EAAAC,EAAAC,cAACyP,GAAD,CACI5H,KAAK,SACLgF,MAAOjK,EAAMiK,MACbzK,SAAU,SAAA8L,GAAC,OAAItL,EAAMR,SAAS8L,EAAEO,OAAO5B,QACvCE,YAAY,kBAIdH,GAAQrL,IAAOyN,MAAVU,kcCTJ,IAAMC,GAAe,SAAC/M,GAAD,OACxB9C,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,CACIC,UAAW,SAAAC,GAEP,GADApH,QAAQC,IAAImH,GACPA,EAAOC,YAAZ,CAEA,IAAMC,EAAQC,GACVrN,EAAMsN,KACNJ,EAAOK,OAAOC,MACdN,EAAOC,YAAYK,OAEvBxN,EAAMR,SAAS4N,MAGnBlQ,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,CAAWS,YAAY,aAClB,SAACC,EAAUC,GAAX,OACGzQ,EAAAC,EAAAC,cAACwQ,GAAD1I,OAAA2I,OAAA,GAAUH,EAASI,eAAnB,CAAmCtC,IAAKkC,EAASK,WAC5C/N,EAAMsN,KAAK9M,IAAI,SAACwN,EAAMR,GAAP,OACZtQ,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,CAAWpM,IAAKoN,EAAMC,YAAaD,EAAMR,MAAOA,GAC3C,SAACE,EAAUC,GAAX,OACGzQ,EAAAC,EAAAC,cAAC8Q,GAADhJ,OAAA2I,OAAA,CACIjN,IAAK4M,EACLhC,IAAKkC,EAASK,UACVL,EAASS,eACTT,EAASU,gBAJjB,CAKI/K,MAAOqK,EAASS,eAAe9K,QAE9B2K,EACD9Q,EAAAC,EAAAC,cAACiR,GAAD,CACI9O,QAAS,WACLS,EAAMR,SAAS8O,GAAOtO,EAAMsN,KAAME,YAOzDE,EAASvD,iBAOxBmE,GAAS,SAAChB,EAAgBE,GAAjB,OAAmCF,EAAKiB,OAAO,SAACC,EAAI/L,GAAL,OAAW+K,IAAU/K,KAE7E4K,GAAU,SAACC,EAAgBmB,EAAoBC,GACjD,IAAMxB,EAASyB,MAAMxL,KAAKmK,GAD4CsB,EAEpD1B,EAAO2B,OAAOJ,EAAY,GAArCK,EAF+D5J,OAAAmB,EAAA,EAAAnB,CAAA0J,EAAA,MAKtE,OAFA1B,EAAO2B,OAAOH,EAAU,EAAGI,GAEpB5B,GAGLU,GAAOjP,IAAOC,IAAVmQ,MACJb,GAAcvP,IAAOC,IAAVoQ,MAKXX,GAAQ1P,IAAOmB,OAAVmP,+2CC5DJ,IACDC,GAAS,uCAETC,GAAkBC,YAAHC,MAWfC,GAAoBF,YAAHG,MAWjBC,GAAkBJ,YAAHK,MAKfC,GAAmBN,YAAHO,MAKTC,GAAkBzP,YAAH0P,KACXV,GApCW,IAoC0BD,IAGzCY,GAAoB3P,YAAH4P,KACbT,GAxCW,IAwC4BJ,IAU3Cc,GAAkB7P,YAAH8P,KACXT,GAnDW,IAmD0BN,IAGzCgB,GAAmB/P,YAAHgQ,KACZT,GAvDW,IAuD2BR,2lBChDhD,IAAMkB,GAAQ,SAACpQ,GAClB,OAAOqQ,IAASC,aACZpT,EAAAC,EAAAC,cAACmT,GAAA,EAAD,CAAYC,GAAIxQ,EAAMyQ,KAAMC,QAAS,KAChC,SAAAC,GAAM,OACHzT,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyT,SAAA,KACI1T,EAAAC,EAAAC,cAACyT,GAAD,CAAUF,OAAQA,GACb3Q,EAAM6J,SACN7J,EAAM8Q,QAAU9Q,EAAM8Q,UAE3B5T,EAAAC,EAAAC,cAAC2T,GAAD,CAASJ,OAAQA,EAAQpR,QAASS,EAAMgR,WAIpDC,KAIFA,GAAYC,SAASC,eAAe,UAEpCN,GAAWlS,IAAOC,IAAVwS,KASIzU,EAIAI,EACZ,SAAA+B,GAAC,ODG6B6R,ECHL7R,EAAE6R,ODGgCxQ,YAA9BkR,KAC7BV,IAAWW,MAAY1B,GACvBe,IAAWY,MAAWzB,GACtBa,IAAWY,MAAX,wBACAZ,IAAWa,MAAU,kBAJQ,IAACb,ICA9BI,GAAUpS,IAAOC,IAAV6S,KAQP,SAAA3S,GAAC,ODO4B6R,ECPL7R,EAAE6R,ODOgCxQ,YAA9BuR,KAC5Bf,IAAWW,MAAYtB,GACvBW,IAAWY,MAAWrB,GACtBS,IAAWY,MAAX,wBACAZ,IAAWa,MAAU,kBAJO,IAACb,iCEhE7BgB,GAAW,6BAA6BjR,MAAM,IAC9CkR,GAAQ,GAEDC,GAAe,eAAAzT,EAAA8G,OAAA4M,GAAA,EAAA5M,CAAA6M,GAAA5U,EAAA6U,KAAG,SAAAC,EAC3BC,GAD2B,IAAAC,EAAAC,EAAA,OAAAL,GAAA5U,EAAAkV,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAGtBb,GAASzQ,SAASgR,GAHI,CAAAI,EAAAE,KAAA,eAAAF,EAAAG,OAAA,SAIhB,MAJgB,WAOvBb,GAAMM,GAPiB,CAAAI,EAAAE,KAAA,eAAAF,EAAAG,OAAA,SAQhBb,GAAMM,IARU,cAAAI,EAAAE,KAAA,EAWTE,MAAK,qBAAArN,OAAsB6M,EAAtB,UAXI,cAWrBC,EAXqBG,EAAAK,KAAAL,EAAAE,KAAA,EAYUL,EAAIS,OAZd,cAYrBR,EAZqBE,EAAAK,KAc3Bf,GAAMM,GAAUE,EAdWE,EAAAG,OAAA,SAgBpBL,GAhBoB,yBAAAE,EAAAO,SAAAZ,MAAH,gBAAAa,GAAA,OAAA1U,EAAA2U,MAAAC,KAAA7Q,YAAA,GCAf8Q,GAAgB,SAACC,GAAkB,IAAA7I,EACJC,mBAAS,IADLC,EAAArF,OAAAmB,EAAA,EAAAnB,CAAAmF,EAAA,GACrC8I,EADqC5I,EAAA,GACvB6I,EADuB7I,EAAA,GAAAG,EAGdJ,mBAA2B,IAHbK,EAAAzF,OAAAmB,EAAA,EAAAnB,CAAAwF,EAAA,GAGrC2I,EAHqC1I,EAAA,GAG5B2I,EAH4B3I,EAAA,GA4B5C,OC/BuB,SAAC4I,GAAoD,IAArCC,EAAqCrR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB,EAAGsR,EAAqBtR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACrEgJ,oBAAU,WACN,IAAMuI,EAASC,WAAWJ,EAAGK,KAAK,KAAMH,GAAOD,GAE/C,OAAO,WACHK,aAAaH,KAElB,CAACD,EAAMF,EAAIC,IDCdM,CAAY,kBAAMV,EAAgBF,EAAM5Q,gBAAgB,IAAK,CAAC4Q,IAE9Da,kBAAQ,WACJ,IAAM7B,GAAUiB,EAAa,IAAM,IAAI7Q,eAE9B,eAAAlE,EAAA8G,OAAA4M,GAAA,EAAA5M,CAAA6M,GAAA5U,EAAA6U,KAAG,SAAAC,IAAA,IAAA3E,EAAA+F,EAAA,OAAAtB,GAAA5U,EAAAkV,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACWX,GAAgBK,GAD3B,UACF5E,EADEgF,EAAAK,KAAA,CAAAL,EAAAE,KAAA,eAIJc,EAAW,IAJPhB,EAAAG,OAAA,iBAQFY,EAAU/F,EACXiB,OAAO,SAAAP,GAAI,OAAIA,EAAKnN,KAAKyB,cAAc0R,WAAWb,KAClD5N,MAAM,EAAG,GAEd+N,EAAWD,GAZH,wBAAAf,EAAAO,SAAAZ,MAAH,yBAAA7T,EAAA2U,MAAAC,KAAA7Q,aAAA,EAeT8R,IACD,CAACd,IAEG,CAAEE,iZEfN,IAAMa,GAAW,SAAClU,GAAyB,IAAAqK,EACZC,mBAAS,IADGC,EAAArF,OAAAmB,EAAA,EAAAnB,CAAAmF,EAAA,GACvC8J,EADuC5J,EAAA,GAC5B6J,EAD4B7J,EAAA,GAAAG,EAEEJ,mBAAS,IAFXK,EAAAzF,OAAAmB,EAAA,EAAAnB,CAAAwF,EAAA,GAEvC2J,EAFuC1J,EAAA,GAErB2J,EAFqB3J,EAAA,GAAA4J,EAGNjK,mBAAS,IAHHkK,EAAAtP,OAAAmB,EAAA,EAAAnB,CAAAqP,EAAA,GAGvCE,EAHuCD,EAAA,GAGzBE,EAHyBF,EAAA,GAAAG,EAKIC,OALJC,EAAA3P,OAAAmB,EAAA,EAAAnB,CAAAyP,EAAA,GAKvCG,EALuCD,EAAA,GAKtBE,EALsBF,EAAA,GAAAG,EAMJJ,OANIK,EAAA/P,OAAAmB,EAAA,EAAAnB,CAAA8P,EAAA,GAMvCE,EANuCD,EAAA,GAM1BE,EAN0BF,EAAA,GAQtC5B,EAAYJ,GAAckB,GAA1Bd,QAEF+B,EAAa,WACfpV,EAAMqV,OAAO,CACThX,KAAM8V,EACNmB,YAAaR,EACbS,QAASL,IAEbd,EAAa,IACbE,EAAoB,IACpBI,EAAgB,IAChB1U,EAAMwV,WAKV,OACItY,EAAAC,EAAAC,cAACqY,GAAD,CACIhF,KAAMzQ,EAAMyQ,KACZK,OAAQ,kBACJ5T,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyT,SAAA,KACI1T,EAAAC,EAAAC,cAACsY,GAAD,CAAQnW,QAASS,EAAMwV,SAAvB,SACAtY,EAAAC,EAAAC,cAACsY,GAAD,CAAQnW,QAAS6V,GAAjB,UAGRpE,MAAOhR,EAAMwV,SAEbtY,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuY,GAAD,CAAO1L,MAAOkK,EAAWhK,YAAY,OAAO3K,SAAU4U,MAExDU,EAAgB1S,QACdlF,EAAAC,EAAAC,cAAA,WACKiW,EAAQ7S,IAAI,SAAAwN,GAAI,OACb9Q,EAAAC,EAAAC,cAACwY,GAAD,CACIhV,IAAKoN,EAAKvI,GACVlG,QAAS,WACL6U,EAAapG,EAAKnN,MAClB,IAAMgV,EAAe7H,EAAK8H,MAAMtV,IAAI,SAAAuV,GAAC,OAAIA,EAAEC,MAAM,KACjDjB,EAAuBkB,IAAIJ,KAG/B3Y,EAAAC,EAAAC,cAAA,SAAI4Q,EAAKnN,MARb,MAQmCmN,EAAK8H,MA5BPtV,IAAI,SAAAuV,GAAC,OAAIA,EAAEC,MAAM,KAAIE,KAAK,UAkCvEhZ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAC+Y,GAAD,CAAc7I,KAAMwH,EAAiBtV,SAAUuV,EAAuBkB,MACtE/Y,EAAAC,EAAAC,cAACgZ,GAAD,KACIlZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuY,GAAD,CACI1L,MAAOoK,EACP7U,SAAU8U,EACVnK,YAAY,iBAGpBjN,EAAAC,EAAAC,cAACsY,GAAD,CACInW,QAAS,WACA8U,IACLU,EAAuBsB,KAAKhC,GAC5BC,EAAoB,OAJ5B,MAWJpX,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAC+Y,GAAD,CAAc7I,KAAM4H,EAAa1V,SAAUuV,EAAuBkB,MAClE/Y,EAAAC,EAAAC,cAACgZ,GAAD,KACIlZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuY,GAAD,CACI1L,MAAOwK,EACPjV,SAAUkV,EACVvK,YAAY,aAGpBjN,EAAAC,EAAAC,cAACsY,GAAD,CACInW,QAAS,WACAkV,IACLU,EAAmBkB,KAAK5B,GACxBC,EAAgB,OAJxB,QAcVkB,GAAmBjX,IAAOmB,OAAVwW,KAKS1Z,GAKzBwZ,GAAyBzX,IAAOC,IAAV2X,wqBCvHrB,OAAMC,GAAY,SAACxW,GAAD,OACrB9C,EAAAC,EAAAC,cAACqZ,GAAD,KACIvZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsZ,GAAD,KAAO1W,EAAMa,KAAKxC,KAAlB,OACAnB,EAAAC,EAAAC,cAACuZ,GAAD,KAAe3W,EAAMa,KAAKyU,YAAYY,KAAK,OAE1ClW,EAAMa,KAAKmE,QAAU,kBACnBhF,EAAMa,KAAK0U,QAAQnT,QAClBlF,EAAAC,EAAAC,cAACwZ,GAAD,KAAW5W,EAAMa,KAAK0U,QAAQW,KAAK,QAI3ChZ,EAAAC,EAAAC,cAACyZ,GAAD,CAActX,QAASS,EAAM0G,YAA7B,YAIFjI,GAAYE,IAAOC,IAAVkY,KAIgBla,GAGzB8Z,GAAO/X,IAAOoY,OAAVC,MAKJL,GAAehY,IAAO4E,KAAV0T,KACLva,GAIPka,GAAWjY,IAAOC,IAAVsY,KACDpa,GAKP+Z,GAAelY,IAAOmB,OAAVqX,8TCrClB,IAAMC,IAAuCC,GAAA,GAAAnS,OAAAoS,EAAA,EAAApS,CAAAmS,GACxCtZ,EAAUuB,KfNK,WAChB,IAAMiY,EAAYzO,KACVhL,EAAU0I,KAAV1I,MAER,OACIZ,EAAAC,EAAAC,cAACoa,GAAD,KACIta,EAAAC,EAAAC,cAACqa,GAAD,MACAva,EAAAC,EAAAC,cAACoa,GAAD,KACIta,EAAAC,EAAAC,cAACsa,GAAD,CAAa5Z,MAAOA,EAAOmL,QAASsO,KAExCra,EAAAC,EAAAC,cAACkM,GAAD,MACMiO,GACEra,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyT,SAAA,kBACc1T,EAAAC,EAAAC,cAAA,SAAIU,EAAMsE,QADxB,cePyB8C,OAAAoS,EAAA,EAAApS,CAAAmS,GAExCtZ,EAAU2B,MCNM,WAAM,IAAAiY,EACgBnR,KAA/B1I,EADe6Z,EACf7Z,MAAO4I,EADQiR,EACRjR,WAAYD,EADJkR,EACIlR,QADJ4D,EAEKC,mBAAS,IAFdC,EAAArF,OAAAmB,EAAA,EAAAnB,CAAAmF,EAAA,GAEhBuN,EAFgBrN,EAAA,GAERsN,EAFQtN,EAAA,GAAAG,EAIWJ,oBAAS,GAJpBK,EAAAzF,OAAAmB,EAAA,EAAAnB,CAAAwF,EAAA,GAIhBoN,EAJgBnN,EAAA,GAILoN,EAJKpN,EAAA,GAMvB,OACIzN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4a,GAAD,CAAQpO,MAAM,QAAQD,SAAS,SAC3BzM,EAAAC,EAAAC,cAAC6a,GAAD,CAAQhO,MAAO2N,EAAQpY,SAAUqY,KAErC3a,EAAAC,EAAAC,cAAA,WACKU,GACGA,EACKyQ,OAAO,SAAA1N,GAAI,OAAIA,EAAKxC,KAAK6C,SAAS0W,KAClCpX,IAAI,SAAAK,GAAI,OACL3D,EAAAC,EAAAC,cAAC8a,GAAD,CACItX,IAAKC,EAAK4E,GACV5E,KAAMA,EACN6F,WAAY,kBAAMA,EAAW7F,EAAK4E,UAItDvI,EAAAC,EAAAC,cAAC+a,GAAD,CAAgB5Y,QAAS,kBAAMwY,GAAcD,IAAYnO,SAAS,SAClEzM,EAAAC,EAAAC,cAACgb,GAAD,CACI3H,KAAMqH,EACNtC,QAAS,kBAAMuC,GAAa,IAC5B1C,OAAQ5O,ODvBqBvB,OAAAoS,EAAA,EAAApS,CAAAmS,GAGxCtZ,EAAU4B,QXNS,WACpB,IAAM4X,EAAYzO,KADQuB,EAEAC,mBAAS,IAFTC,EAAArF,OAAAmB,EAAA,EAAAnB,CAAAmF,EAAA,GAEnBgO,EAFmB9N,EAAA,GAEZ+N,EAFY/N,EAAA,GAAAG,EAGMJ,mBAAS,IAHfK,EAAAzF,OAAAmB,EAAA,EAAAnB,CAAAwF,EAAA,GAGnB6N,EAHmB5N,EAAA,GAGT6N,EAHS7N,EAAA,GAAAvE,EAIXF,GAAe,QAAvBtB,EAJmBM,OAAAmB,EAAA,EAAAnB,CAAAkB,EAAA,MAM1B,OAAImR,EAEIra,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4a,GAAD,CAAQpO,MAAM,WAAWD,SAAS,YAClCzM,EAAAC,EAAAC,cAAA,2BAMRF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4a,GAAD,CAAQpO,MAAM,WAAWD,SAAS,YAChC/E,EA0DE1H,EAAAC,EAAAC,cAACsY,GAAD,CACIzQ,KAAK,SACL1F,QAAS,WACLuH,GAAY2R,OAAOC,YAH3B,YAzDAxb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyT,SAAA,KACI1T,EAAAC,EAAAC,cAAA,QACIub,SAAU,SAAArN,GACNA,EAAEsN,iBACF9R,GACK2R,OACAI,+BAA+BR,EAAOE,GACtCO,MAAM,SAAAC,GAAC,OAAIjT,QAAQC,IAAIgT,OAGhC7b,EAAAC,EAAAC,cAACkP,GAAD,KACIpP,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACuY,GAAD,CACItX,KAAK,QACL4L,MAAOoO,EACP7Y,SAAU8Y,EACVnO,YAAY,UAEhBjN,EAAAC,EAAAC,cAACuY,GAAD,CACItX,KAAK,WACL4G,KAAK,WACLgF,MAAOsO,EACP/Y,SAAUgZ,EACVrO,YAAY,aAEhBjN,EAAAC,EAAAC,cAACsY,GAAD,kBAGRxY,EAAAC,EAAAC,cAAA,QACIub,SAAU,SAAArN,GACNA,EAAEsN,iBACF9R,GACK2R,OACAO,2BAA2BX,EAAOE,GAClCO,MAAM,SAAAC,GAAC,OAAIjT,QAAQC,IAAIgT,OAGhC7b,EAAAC,EAAAC,cAACkP,GAAD,KACIpP,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACuY,GAAD,CACItX,KAAK,QACL4L,MAAOoO,EACP7Y,SAAU8Y,EACVnO,YAAY,UAEhBjN,EAAAC,EAAAC,cAACuY,GAAD,CACItX,KAAK,WACL4G,KAAK,WACLgF,MAAOsO,EACP/Y,SAAUgZ,EACVrO,YAAY,aAEhBjN,EAAAC,EAAAC,cAACsY,GAAD,sBWpEiBxQ,OAAAoS,EAAA,EAAApS,CAAAmS,GAIxCtZ,EAAUoL,KnBNK,WAAM,IACd5C,EAAWJ,KAAXI,OADcoR,EAEQnR,KAAtB1I,EAFc6Z,EAEd7Z,MAAO6I,EAFOgR,EAEPhR,WAFO0D,EAGUC,mBAAS,GAHnBC,EAAArF,OAAAmB,EAAA,EAAAnB,CAAAmF,EAAA,GAGf1G,EAHe4G,EAAA,GAGL0O,EAHK1O,EAAA,GAAAG,EAIEJ,mBAAS3D,KAJXgE,EAAAzF,OAAAmB,EAAA,EAAAnB,CAAAwF,EAAA,GAIf7J,EAJe8J,EAAA,GAITuO,EAJSvO,EAAA,GAatB,GANAQ,oBAAU,WACN+N,EAAQvS,MAET,CAAC7I,KAGC+C,EAAM,OAAO,KAElB,IAAMsY,EAAYtY,EAAKxC,KAAKwF,OAAOF,GAC7ByV,EAAazV,IAAa9C,EAAKxC,KAAK+D,OASpCiX,EAAiB,WACnBH,EAAQvS,KACRsS,EAAY,IAGhB,OACI/b,EAAAC,EAAAC,cAACkc,GAAD,KACIpc,EAAAC,EAAAC,cAACmc,GAAD,KACIrc,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKyD,EAAKyU,aACVpY,EAAAC,EAAAC,cAAA,UAAKgc,EAAavY,EAAK0U,QAAU,UAGzCrY,EAAAC,EAAAC,cAACmc,GAAD,KACIrc,EAAAC,EAAAC,cAACoc,GAAD,CAAY3Y,KAAMA,EAAKxC,KAAMsF,SAAUA,EAAU/C,IAAKC,EAAKxC,OAC3DnB,EAAAC,EAAAC,cAAA,UAAQmC,QAASgH,GAAjB,WAEJrJ,EAAAC,EAAAC,cAACsK,GAAD,KACIxK,EAAAC,EAAAC,cAACqc,EAAD,CAAU5Y,KAAMsY,EAAWvW,QAzBhB,SAAChC,GAEhBA,IADgBC,EAAKxC,KAAKsF,GAAU+V,qBAEpCT,EAAYtV,EAAW,MAuBlByV,GACGlc,EAAAC,EAAAC,cAACwK,GAAD,KACI1K,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC0K,GAAD,CAAQvI,QAAS8Z,GAAjB,YAEInc,EAAAC,EAAAC,cAACqC,EAAD,CAAMpB,KAAK,UAGfnB,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACIC,aAAcC,IACdC,SAAS,QACTC,YAAayX,SmBrDIhC,IAmCvCsC,GAAUhb,IAAOib,KAAVC,KlCvCa,IkC8CpBC,GAAenb,IAAOC,IAAVmb,ME1CEC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,4HCVKC,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAtV,OAAAuV,GAAA,EAAAvV,CAAA8N,KAAAqH,GAAA,QAAAK,EAAAvY,UAAAC,OAAAqR,EAAA,IAAA9E,MAAA+L,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAlH,EAAAkH,GAAAxY,UAAAwY,GAAA,OAAAH,EAAAtV,OAAA0V,GAAA,EAAA1V,CAAA8N,MAAAuH,EAAArV,OAAA2V,GAAA,EAAA3V,CAAAmV,IAAAS,KAAA/H,MAAAwH,EAAA,CAAAvH,MAAA3N,OAAAoO,MACW1O,MAAQ,CACXgW,MAAO,KACPC,QAAS,MAHjBR,EA6BYS,mBAAqB,WACzBC,IAAwB,CAAEF,QAASR,EAAKzV,MAAMiW,WA9BtDR,EAAA,OAAAtV,OAAAiW,GAAA,EAAAjW,CAAAmV,EAAAC,GAAApV,OAAAkW,GAAA,EAAAlW,CAAAmV,EAAA,EAAAzZ,IAAA,oBAAAqJ,MAAA,SAM6B8Q,EAAcM,GAAsB,IAAAC,EAAAtI,KACzDA,KAAKuI,SAAS,CAAER,UAEhBG,KAAiB,SAAAM,GACbA,EAAMC,UAAUJ,GAChBC,EAAKC,SAAS,CAAEP,QAASE,KAAwBH,SAX7D,CAAAna,IAAA,SAAAqJ,MAAA,WAgBQ,OAAI+I,KAAKjO,MAAMgW,MAEP7d,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,KAAGmC,QAASyT,KAAKiI,oBAAjB,mBACA/d,EAAAC,EAAAC,cAAA,WAAMse,KAAKC,UAAU3I,KAAKjO,MAAMgW,MAAO,KAAM,KAKlD/H,KAAKhT,MAAM6J,aA1B1BwQ,EAAA,CAAmCuB,aCCnCV,IAAY,CACRW,IAAK,+DAGTC,iBACI5e,EAAAC,EAAAC,cAAC2e,GAAD,KACI7e,EAAAC,EAAAC,cAAC4I,GAAD,KACI9I,EAAAC,EAAAC,cJGO,YKdY,WAAM,IAAAgJ,EAClBF,GAAe,QAAvBtB,EAD0BM,OAAAmB,EAAA,EAAAnB,CAAAkB,EAAA,MAAA2C,EAEZ7C,GAAe,SAA7B8V,EAF0B9W,OAAAmB,EAAA,EAAAnB,CAAA6D,EAAA,MAIjCoC,oBAAU,WAEN,QAAa9I,IAATuC,EAAJ,CAGA,GAAa,OAATA,EA2BJ,OArBoBkC,GACfmV,YACAC,WAAW,SACXC,IAAIvX,EAAKa,IACTyW,WAAW,SACXE,WAAW,SAAAzO,GACR,IAAM0O,EAAsB,GAE5B1O,EAAS2O,QAAQ,SAAAH,GACb,IAAM/J,EAAO+J,EAAI/J,OACjBiK,EAAYhG,KAAK,CACb5Q,GAAI0W,EAAI1W,GACRpH,KAAM+T,EAAK/T,KACXiX,YAAalD,EAAKkD,YAClBC,QAASnD,EAAKmD,YAItBtP,GAAS,CAAEhB,KAAM,YAAaG,QAASiX,MAvB3CpW,GAAS,CAAEhB,KAAM,YAAaG,QAAS,OA2B5C,CAACR,IAGJuG,oBAAU,WACN,GAAK6Q,EAAL,CAEA,IAAMO,EAAYP,EAAWzN,OAAO,SAAAvK,GAAC,OAAIA,EAAEgB,SAAWvB,GAAWkC,MAC3D6W,EAAeR,EAAWzN,OAAO,SAAAvK,GAAC,OAAIA,EAAEgB,SAAWvB,GAAWmC,SAEpE,IAAM2W,GAAcC,IAAkB5X,EAAtC,CAEA,IAAM6X,EAAmB3V,GACpBmV,YACAC,WAAW,SACXC,IAAIvX,EAAKa,IACTyW,WAAW,SAEhBK,EAAUD,QAAQ,SAAAzb,GACd,IAAM2E,EAAaN,OAAAC,GAAA,EAAAD,CAAA,GAAQrE,UAEpB2E,EAAQR,cACRQ,EAAQC,GAEfgX,EAAiBC,IAAIlX,KAGzBgX,EAAaF,QAAQ,SAAAzb,GACjB4b,EAAiBN,IAAItb,EAAK4E,IAAIkX,cAEnC,CAACX,EAAYpX,ILnDhBgY,GADqB,IAAAC,EAEO1W,KAApBzB,EAFamY,EAEbnY,MAAO4B,EAFMuW,EAENvW,SACTwW,EAAO1F,GAAQ1S,GAarB,OAXAyG,oBAAU,WACNrE,GAAY2R,OAAOsE,mBAAmB,SAASnY,GAC3CqB,GAAS,CACLhB,KAAM,cACNG,QAASR,EACH,CAAEyT,MAAOzT,EAAKyT,MAAO5S,GAAIb,EAAKoY,IAAK3e,KAAMuG,EAAKqY,aAC9C,UAGf,IAGC/f,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyT,SAAA,KACI1T,EAAAC,EAAAC,cAACuc,GAAD,KACIzc,EAAAC,EAAAC,cAAC0f,EAAD,OAEJ5f,EAAAC,EAAAC,cAAC0c,GAAD,KACI5c,EAAAC,EAAAC,cAAC8f,EAAD,CAAK7d,OAAQqF,EAAOlF,SAAU8G,OIzBlC,QAGR4K,SAASC,eAAe,SFsHpB,kBAAmBgM,WACnBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GAC/BA,EAAaC","file":"static/js/main.48447be3.chunk.js","sourcesContent":["export const brand = '#9438EA'\nexport const white = '#FFFFFF'\nexport const black = '#000000'\nexport const light = 'rgba(0, 0, 0, 0.1)'\nexport const muted = 'rgba(0, 0, 0, 0.3)'\nexport const gray = 'rgba(0, 0, 0, 0.6)'\nexport const good = '#AED900'\nexport const danger = '#EA388D'\n","export const barShadow = '0 0 10px rgba(0, 0, 0, 0.1)'\nexport const floatingShadow = '2px 2px 7px rgba(0, 0, 0, 0.1)'\n","import React from 'react'\n\nexport const home = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M5 12.5H2L12 3.5L22 12.5H19V20.5H13V14.5H11V20.5H5V12.5ZM17 10.69L12 6.19L7 10.69V18.5H9V12.5H15V18.5H17V10.69Z\"\n        />\n    </svg>\n)\n","import React from 'react'\n\nexport const play = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 61 61\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M44.4792 30.5L16.5208 48.2917V12.7083L44.4792 30.5ZM34.9988 30.5L21.6042 21.96V39.04L34.9988 30.5Z\"\n        />\n    </svg>\n)\n","import React from 'react'\n\nexport const plus = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path d=\"M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n    </svg>\n)\n","import React from 'react'\n\nexport const profile = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4ZM14 8C14 6.9 13.1 6 12 6C10.9 6 10 6.9 10 8C10 9.1 10.9 10 12 10C13.1 10 14 9.1 14 8ZM18 18C17.8 17.29 14.7 16 12 16C9.31 16 6.23 17.28 6 18H18ZM4 18C4 15.34 9.33 14 12 14C14.67 14 20 15.34 20 18V20H4V18Z\"\n        />\n    </svg>\n)\n","import React from 'react'\n\nexport const words = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12.87 15.07L10.33 12.56L10.36 12.53C12.1 10.59 13.34 8.36 14.07 6H17V4H10V2H8V4H1V5.99H12.17C11.5 7.92 10.44 9.75 9 11.35C8.07 10.32 7.3 9.19 6.69 8H4.69C5.42 9.63 6.42 11.17 7.67 12.56L2.58 17.58L4 19L9 14L12.11 17.11L12.87 15.07ZM18.5 10H16.5L12 22H14L15.12 19H19.87L21 22H23L18.5 10ZM17.5 12.67L15.88 17H19.12L17.5 12.67Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport * as icons from './icons'\n\nconst sizes = {\n    normal: 24,\n    large: 62,\n}\n\nexport type IconName = keyof typeof icons\nexport type IconSize = keyof typeof sizes\n\ntype IconProps = {\n    name: IconName\n    size?: IconSize\n    block?: boolean\n}\n\nexport const Icon = ({ name, size = 'normal', block = false }: IconProps) => (\n    <Container block={block}>{icons[name](sizes[size])}</Container>\n)\n\nconst Container = styled.div<{ block: boolean }>`\n    display: ${p => (p.block ? 'block' : 'inline-block')};\n    vertical-align: middle;\n    svg {\n        display: block;\n        margin: auto;\n        fill: currentColor;\n    }\n`\n","export enum RouteName {\n    Home = 'home',\n    Words = 'words',\n    Profile = 'profile',\n    Game = 'game',\n}\n","import * as React from 'react'\nimport styled, { css } from 'styled-components'\nimport { white, gray, brand } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { Icon } from '../Icon'\nimport { fast } from '../../styles/transitions'\nimport { RouteName } from '../../store/types/RouteName'\n\nexport const NAV_HEIGHT = 60\n\ntype NavProps = {\n    active: RouteName\n    onChange(page: RouteName): void\n}\n\nexport const Nav = (prop: NavProps) => {\n    return (\n        <Container>\n            <NavButton\n                isActive={prop.active === RouteName.Home}\n                onClick={() => prop.onChange(RouteName.Home)}\n            >\n                <Icon name=\"home\" block />\n                Home\n            </NavButton>\n            <NavButton\n                isActive={prop.active === RouteName.Words}\n                onClick={() => prop.onChange(RouteName.Words)}\n            >\n                <Icon name=\"words\" block />\n                Words\n            </NavButton>\n            <NavButton\n                isActive={prop.active === RouteName.Profile}\n                onClick={() => prop.onChange(RouteName.Profile)}\n            >\n                <Icon name=\"profile\" block />\n                Profile\n            </NavButton>\n        </Container>\n    )\n}\n\nconst Container = styled.nav`\n    background: ${white};\n    display: flex;\n    width: 100%;\n    min-height: ${NAV_HEIGHT}px;\n    justify-content: space-evenly;\n    box-shadow: ${barShadow};\n    overflow: hidden;\n`\n\nconst NavButton = styled.button<{ isActive: boolean }>`\n    color: ${props => (props.isActive ? brand : gray)};\n    display: block;\n    background: none;\n    border: none;\n    padding: 10px 25px;\n    position: relative;\n    line-height: 1.5em;\n    &::after {\n        content: '';\n        display: block;\n        border-radius: 100%;\n        height: 60px;\n        width: 60px;\n        position: absolute;\n        margin: auto;\n        top: -50px;\n        bottom: -50px;\n        left: -50px;\n        right: -50px;\n        ${props => (props.isActive ? activeCSS : inActiveCSS)};\n    }\n    &:active::after {\n        transition: opacity 0.6s ease-out, background 0.6s ease-out, transform 1s ease-out;\n        opacity: 0.1;\n        transform: scale(1.2);\n        background: ${brand};\n    }\n`\n\nconst activeCSS = css`\n    transition: all ${fast};\n    opacity: 0;\n    transform: scale(2);\n    background: ${brand};\n`\n\nconst inActiveCSS = css`\n    transition: all 0 ease;\n    opacity: 0.3;\n    transform: scale(1);\n    background: rgba(255, 255, 255, 0);\n`\n","export const fast = '0.2s ease'\n","import seedRandom from 'seed-random'\n\nconst special = \"' ,\"\n\nconst KEYS = ['qwertyuiop', 'asdfghjkl', 'zxcvbnm', special].map(row => row.split(''))\n\ntype WordKey = {\n    visible: boolean\n    key: string\n}\n\ntype WordKeyList = WordKey[][]\n\nexport const getKeysForWord = (originalWord: string, fakeKeys = 0): WordKeyList => {\n    const word = originalWord.toLowerCase()\n\n    return KEYS.map(row => row.map(k => getKey(k, word, fakeKeys)))\n}\n\nconst getKey = (key: string, word: string, fakeKeys: number): WordKey => {\n    const random = fakeKeys ? seedRandom(key + word)() : 0\n\n    return {\n        key,\n        visible: word.includes(key) || (fakeKeys > random && !special.includes(key)),\n    }\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { brand, white } from '../../styles/colors'\nimport { fast } from '../../styles/transitions'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\n\ninterface KeyProps {\n    onClick(): void\n    symbol?: string\n    visible?: boolean\n}\n\nexport const Key = (props: KeyProps) => (\n    <Container\n        visible={props.visible}\n        onTouchStart={props.onClick}\n        isSpace={props.symbol === ' '}\n    >\n        {props.symbol}\n        <KeyHandler\n            keyEventName={KEYPRESS}\n            keyValue={props.symbol}\n            onKeyHandle={props.onClick}\n        />\n    </Container>\n)\n\nconst Container = styled.button<{ visible?: boolean; isSpace?: boolean }>`\n    width: ${p => (p.isSpace ? '47vw' : '8vw')};\n    height: 7vh;\n    padding: 0;\n    margin: 0 4px;\n    border: 2px solid ${brand};\n    opacity: ${p => (p.visible ? 1 : 0.1)};\n    border-radius: 4px;\n    color: ${brand};\n    font-weight: bold;\n    font-size: 24px;\n    text-align: center;\n    background: none;\n    transition: all ${fast};\n\n    ${p => p.visible && highlight}\n`\nconst highlight = css`\n    &:active {\n        outline: none;\n        background-color: ${brand};\n        color: ${white};\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { getKeysForWord } from './getKeysForWord'\nimport { white } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { Key } from './Key'\n\ninterface KeyboardProps {\n    word: string\n    onPress(key: string): void\n    fakeKeys?: number\n}\n\nexport const Keyboard = (props: KeyboardProps) => (\n    <Container>\n        {getKeysForWord(props.word, props.fakeKeys).map((row, i) => (\n            <Row key={i}>\n                {row.map(k => (\n                    <Key\n                        key={k.key}\n                        symbol={k.key}\n                        visible={k.visible}\n                        onClick={() => {\n                            if (k.visible) {\n                                props.onPress(k.key)\n                            }\n                        }}\n                    />\n                ))}\n            </Row>\n        ))}\n    </Container>\n)\n\nconst Container = styled.div`\n    padding: 0 0 50px;\n    background: ${white};\n    box-shadow: ${barShadow};\n`\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 10px 5px 0;\n`\n\nexport const vibrateOk = () => navigator.vibrate(1)\nexport const vibrateBad = () => navigator.vibrate([1, 100, 1, 100, 1])\n","import React from 'react'\nimport styled from 'styled-components'\nimport { animated, useSpring } from 'react-spring'\nimport { brand } from '../../styles/colors'\n\nexport const Pipe = () => {\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-0.3em) scaleX(3)',\n        },\n    })\n    return <PipeContainer style={pipeSpring} />\n}\n\nconst PipeContainer = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 -0.05em;\n    vertical-align: middle;\n    background-color: ${brand};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { muted, black } from '../../styles/colors'\nimport { Pipe } from './Pipe'\n\ntype TypewriterProps = {\n    word: string\n    progress: number\n}\n\nexport const Typewriter = (props: TypewriterProps) => {\n    const { word, progress } = props\n    const typed = word.substr(0, progress)\n\n    return (\n        <Container>\n            <TypeWrapper>\n                {word.split('').map((w, i) => {\n                    return (\n                        <Segment key={w + i}>\n                            {i === progress && <Pipe key={typed} />}\n                            <Letter letterState={progress <= i}>{w}</Letter>\n                        </Segment>\n                    )\n                })}\n            </TypeWrapper>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n    padding: 0px 25px;\n    overflow: hidden;\n    height: 2em;\n    width: 100%;\n    line-height: 2em;\n`\n\nconst TypeWrapper = styled.div`\n    white-space: nowrap;\n    position: relative;\n    width: 100%;\n`\n\nconst Segment = styled.span`\n    display: inline-block;\n    line-height: 1em;\n    height: 90px;\n    margin: 0 1px;\n    vertical-align: middle;\n    position: relative;\n`\n\nconst Letter = styled.span<{ letterState: boolean }>`\n    display: inline-block;\n    text-align: center;\n    position: relative;\n    margin: 0 0.025em;\n    height: 100%;\n    min-width: 25px;\n    transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n    transform: ${props => (props.letterState ? 'scale(0.5)' : 'scale(1)')};\n    color: ${props => (props.letterState ? 'rgba(255,255,255,0)' : black)};\n\n    &::after {\n        content: '*';\n        position: absolute;\n        text-align: center;\n        top: 0.5em;\n        left: 0;\n        right: 0;\n        line-height: 0.5em;\n        height: 20px;\n        transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n        color: ${muted};\n        transform: ${props => (props.letterState ? 'scale(2)' : 'scale(0)')};\n        opacity: ${props => (props.letterState ? 1 : 0)};\n    }\n`\n","import { RouteName } from '../../types/RouteName'\n\nexport enum WordAction {\n    Add,\n    Delete,\n}\n\nexport type Word = {\n    id: string\n    name: string\n    translation: string[]\n    example: string[]\n    action?: WordAction\n}\n\nexport type UnSavedWord = {\n    name: string\n    translation: string[]\n    example: string[]\n}\n\nexport type WordsState = Word[]\n\nexport type UserState = {\n    id: string\n    email: string\n    name: string\n}\n\nexport type State = {\n    route: RouteName\n    lastRoutes: RouteName[]\n    words?: WordsState\n    user?: UserState | null\n}\n","import { RouteName } from '../types/RouteName'\nimport { State } from './types/State'\n\nexport const initialState: State = {\n    route: RouteName.Home,\n    lastRoutes: [],\n    words: undefined,\n    user: undefined,\n}\n","import uuid from 'uuid'\nimport { Actions } from './types/Actions'\nimport { State, Word, WordAction } from './types/State'\n\nexport const reducer = (state: State, action: Actions) => {\n    switch (action.type) {\n        case 'ROUTER/SET_ROUTE':\n            return {\n                ...state,\n                route: action.payload.route,\n                lastRoutes: [state.route, ...state.lastRoutes],\n            }\n\n        case 'ROUTER/BACK':\n            return {\n                ...state,\n                route: state.lastRoutes[0],\n                lastRoutes: state.lastRoutes.slice(1),\n            }\n\n        case 'WORDS/SET':\n            return {\n                ...state,\n                words: action.payload,\n            }\n\n        case 'WORDS/ADD_WORD':\n            const newWord: Word = {\n                id: `local-${uuid()}`,\n                action: WordAction.Add,\n                ...action.payload,\n            }\n            return {\n                ...state,\n                words: [...state.words, newWord],\n            }\n\n        case 'WORDS/REMOVE_WORD':\n            return {\n                ...state,\n                words: state.words.map(word =>\n                    word.id === action.payload.id\n                        ? {\n                              ...word,\n                              action: WordAction.Delete,\n                          }\n                        : word\n                ),\n            }\n\n        case 'USER/CHANGE':\n            return {\n                ...state,\n                user: action.payload,\n            }\n\n        default:\n            throw new Error('[reducer] Unknown action type!')\n    }\n}\n","import { Actions } from '../types/Actions'\nimport { State } from '../types/State'\nimport { reducer } from '../reducer'\n\nexport const reducerLogger = (reducerFunc: typeof reducer) => (\n    state: State,\n    action: Actions\n) => {\n    console.log('→', action.type, action.payload)\n    return reducerFunc(state, action)\n}\n","import { createStore } from 'react-hooks-global-state'\nimport { reducerLogger } from './helpers/reducerLogger'\nimport { initialState } from './initialState'\nimport { reducer } from './reducer'\n\nexport const { GlobalStateProvider, dispatch, useGlobalState } = createStore(\n    reducerLogger(reducer),\n    initialState\n)\n","import { dispatch, useGlobalState } from './state/store'\nimport { RouteName } from './types/RouteName'\n\nexport const useRouter = () => {\n    const [route] = useGlobalState('route')\n\n    const setRoute = (route: RouteName) => {\n        dispatch({ type: 'ROUTER/SET_ROUTE', payload: { route } })\n    }\n\n    const goBack = () => {\n        dispatch({ type: 'ROUTER/BACK' })\n    }\n\n    return { route, setRoute, goBack }\n}\n","import { dispatch, useGlobalState } from './state/store'\nimport { UnSavedWord, Word } from './state/types/State'\n\nexport const useWords = () => {\n    const [words] = useGlobalState('words')\n\n    const addWord = (word: UnSavedWord) => {\n        dispatch({ type: 'WORDS/ADD_WORD', payload: word })\n    }\n\n    const removeWord = (id: string) => {\n        dispatch({ type: 'WORDS/REMOVE_WORD', payload: { id } })\n    }\n\n    const randomWord = (): Word | null => {\n        if (!words || !words.length) return null\n        return words[Math.floor(Math.random() * words.length)]\n    }\n\n    return { words, addWord, removeWord, randomWord }\n}\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyATMnw8FbczS1-0yJwrHl98EunKDAjE1DM',\n    authDomain: 'reword-1.firebaseapp.com',\n    databaseURL: 'https://reword-1.firebaseio.com',\n    projectId: 'reword-1',\n    storageBucket: 'reword-1.appspot.com',\n    messagingSenderId: '220877466530',\n    appId: '1:220877466530:web:7c95c058eaa3a7ed',\n}\nexport const firebaseApp = firebase.initializeApp(firebaseConfig)\n","import React, { useEffect, useState } from 'react'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\nimport styled from 'styled-components'\nimport { Icon } from '../../components/Icon'\nimport { Keyboard } from '../../components/Keyboard'\nimport { Typewriter } from '../../components/Typewriter'\nimport { useRouter, useWords } from '../../store'\nimport { good, white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\n\nexport const Game = () => {\n    const { goBack } = useRouter()\n    const { words, randomWord } = useWords()\n    const [progress, setProgress] = useState(0)\n    const [word, setWord] = useState(randomWord())\n\n    // Update when words changes\n    useEffect(() => {\n        setWord(randomWord())\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [words])\n\n    // Generally for development purposes only\n    if (!word) return null\n\n    const wordRight = word.name.substr(progress)\n    const isComplete = progress === word.name.length\n\n    const handleKeyPress = (key: string) => {\n        const currentWord = word.name[progress].toLocaleLowerCase()\n        if (key === currentWord) {\n            setProgress(progress + 1)\n        }\n    }\n\n    const handleNextWord = () => {\n        setWord(randomWord())\n        setProgress(0)\n    }\n\n    return (\n        <Container>\n            <Row>\n                <div>\n                    <h1>{word.translation}</h1>\n                    <h5>{isComplete ? word.example : '\\u00a0'}</h5>\n                </div>\n            </Row>\n            <Row>\n                <Typewriter word={word.name} progress={progress} key={word.name} />\n                <button onClick={goBack}>Cancel</button>\n            </Row>\n            <Bottom>\n                <Keyboard word={wordRight} onPress={handleKeyPress} />\n                {isComplete && (\n                    <Complete>\n                        <h2>Done!</h2>\n                        <Button onClick={handleNextWord}>\n                            Next word\n                            <Icon name=\"play\" />\n                        </Button>\n\n                        <KeyHandler\n                            keyEventName={KEYPRESS}\n                            keyValue=\"Enter\"\n                            onKeyHandle={handleNextWord}\n                        />\n                    </Complete>\n                )}\n            </Bottom>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    /* display: grid; */\n    /* grid-template-rows: 1fr 2fr auto; */\n    height: 100%;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    text-align: center;\n    overflow: hidden;\n`\nconst Row = styled.div`\n    width: 100%;\n    flex: 1 0 auto;\n`\n\nconst Bottom = styled.div`\n    width: 100%;\n    position: relative;\n`\n\nconst Complete = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Button = styled.button`\n    padding: 30px 50px;\n    border: none;\n    color: ${white};\n    background: ${good};\n    border-radius: 4px;\n    box-shadow: ${floatingShadow};\n    font-weight: bold;\n    font-size: 24px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useSpring, animated } from 'react-spring'\nimport { brand } from '../../styles/colors'\n\nexport const Logo = () => {\n    const reSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 200,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const wordSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 300,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-1.2em) scaleX(5)',\n        },\n    })\n\n    return (\n        <Container>\n            <First style={reSpring}>Re</First>\n            <Pipe style={pipeSpring} />\n            <Last style={wordSpring}>word</Last>\n        </Container>\n    )\n}\n\nconst Container = styled.h1`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n`\n\nconst First = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Last = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Pipe = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 0.05em;\n    vertical-align: middle;\n    background-color: ${brand};\n`\n","import { useGlobalState } from './state/store'\n\nexport const useIsLoading = () => {\n    const [words] = useGlobalState('words')\n    const [user] = useGlobalState('user')\n\n    return words === undefined || user === undefined\n}\n","import React from 'react'\nimport { WordsState } from '../../store/state/types/State'\nimport { useRouter } from '../../store'\nimport { RouteName } from '../../store/types/RouteName'\nimport { Icon } from '../../components/Icon'\nimport { white, brand } from '../../styles/colors'\nimport styled from 'styled-components'\nimport { floatingShadow } from '../../styles/shadow'\n\ntype StartButtonProps = {\n    words: WordsState\n    loading: boolean\n}\n\nexport const StartButton = (props: StartButtonProps) => {\n    const { setRoute } = useRouter()\n\n    if (props.loading) {\n        return <CircleButton>Loading</CircleButton>\n    }\n\n    if (!props.words.length) {\n        return (\n            <CircleButton onClick={() => setRoute(RouteName.Words)}>\n                <Icon name=\"plus\" size=\"large\" block />\n                Word\n            </CircleButton>\n        )\n    }\n\n    return (\n        <CircleButton onClick={() => setRoute(RouteName.Game)}>\n            <Icon name=\"play\" size=\"large\" block />\n            Play\n        </CircleButton>\n    )\n}\n\nconst playSize = '45vmin'\n\nconst CircleButton = styled.button`\n    background: ${white};\n    border: none;\n    box-shadow: ${floatingShadow};\n    width: ${playSize};\n    height: ${playSize};\n    max-width: 260px;\n    max-height: 260px;\n    border-radius: 100%;\n    color: ${brand};\n    font-size: 36px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Logo } from '../../components/Logo'\nimport { useWords } from '../../store'\nimport { useIsLoading } from '../../store/useIsLoading'\nimport { StartButton } from './StartButton'\n\nexport const Home = () => {\n    const isLoading = useIsLoading()\n    const { words } = useWords()\n\n    return (\n        <Container>\n            <Logo />\n            <Container>\n                <StartButton words={words} loading={isLoading} />\n            </Container>\n            <WordsCount>\n                {!isLoading && (\n                    <>\n                        You added <b>{words.length}</b> words\n                    </>\n                )}\n            </WordsCount>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: grid;\n    height: 100%;\n    grid-auto-rows: 1fr 3fr 1fr;\n    align-items: center;\n    justify-items: center;\n`\n\nconst WordsCount = styled.div`\n    padding: 25px;\n    text-align: center;\n`\n","import styled from 'styled-components'\nimport { brand } from '../../styles/colors'\n\nexport const Button = styled.button`\n    display: inline-block;\n    padding: 5px 15px;\n    border: 2px solid ${brand};\n    border-radius: 5px;\n    background: transparent;\n`\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { IconName, Icon } from '../Icon'\n\ntype HeaderProps = {\n    title: string\n    iconName: IconName\n    children?: ReactNode\n}\n\nexport const Header = (props: HeaderProps) => {\n    return (\n        <HeaderWrapper>\n            <Icon name={props.iconName} size=\"large\" />\n            <h1>{props.title}</h1>\n            {props.children}\n        </HeaderWrapper>\n    )\n}\n\nconst HeaderWrapper = styled.header`\n    display: flex;\n    min-height: 260px;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { brand, muted } from '../../styles/colors'\n\ntype InputProps = {\n    value: string\n    type?: string\n    name?: string\n    placeholder: string\n    onChange: (value: string) => void\n    autoFocus?: boolean\n}\n\nexport const Input = (props: InputProps) => {\n    const { value, type = 'text', placeholder, onChange, autoFocus, name } = props\n\n    const [focus, setFocus] = useState(false)\n    const [linePosition, setLinePosition] = useState(0)\n\n    const labelRef = useRef<HTMLLabelElement>(null)\n\n    const defaultLinePosition = labelRef.current\n        ? labelRef.current.getBoundingClientRect().width / 2\n        : 0\n\n    useEffect(() => {\n        setLinePosition(defaultLinePosition)\n    }, [defaultLinePosition])\n\n    return (\n        <Label\n            active={focus}\n            onMouseDown={e => {\n                setLinePosition(e.pageX)\n            }}\n            ref={labelRef}\n        >\n            <LabelName move={value !== ''}>{placeholder}</LabelName>\n            <InputStyled\n                type={type}\n                value={value}\n                onChange={event => onChange(event.target.value)}\n                onFocus={() => setFocus(true)}\n                onBlur={() => {\n                    setLinePosition(defaultLinePosition)\n                    setFocus(false)\n                }}\n                autoFocus={autoFocus}\n                name={name}\n            />\n            <span style={{ transformOrigin: `${linePosition}px 0` }} />\n        </Label>\n    )\n}\n\nconst Label = styled.label<{ active: boolean }>`\n    position: relative;\n    display: block;\n    span {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: 2px;\n        opacity: 1;\n        transition: transform 0.25s ease-out;\n        transform: scaleX(${props => (props.active ? 1 : 0)});\n        background: ${brand};\n        pointer-events: none;\n    }\n`\n\nconst LabelName = styled.div<{ move: boolean }>`\n    position: absolute;\n    top: 9px;\n    left: 0px;\n    font-size: 15px;\n    transition: transform 0.15s ease-out;\n    color: ${muted};\n    cursor: text;\n    transform-origin: 0 0; // top left for scale\n    transform: ${props =>\n        props.move ? `translateY(-17px) scale(0.8)` : `translate(0px)`};\n`\n\nconst InputStyled = styled.input`\n    padding: 12px 0 9px;\n    border: none;\n    font-size: 15px;\n    display: block;\n    width: 100%;\n    margin: 15px 0;\n    border-bottom: 2px solid ${muted};\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../components/Button'\nimport { Header } from '../../components/Header'\nimport { Input } from '../../components/Input'\nimport { firebaseApp } from '../../store/firebase'\nimport { useGlobalState } from '../../store/state/store'\nimport { useIsLoading } from '../../store/useIsLoading'\n\nexport const Settings = () => {\n    const isLoading = useIsLoading()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [user] = useGlobalState('user')\n\n    if (isLoading) {\n        return (\n            <div>\n                <Header title=\"Settings\" iconName=\"profile\" />\n                <p>Loading…</p>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Header title=\"Settings\" iconName=\"profile\" />\n            {!user ? (\n                <>\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault()\n                            firebaseApp\n                                .auth()\n                                .createUserWithEmailAndPassword(email, password)\n                                .catch(m => console.log(m))\n                        }}\n                    >\n                        <FormWrapper>\n                            <h2>Create an account</h2>\n                            <Input\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                placeholder=\"email\"\n                            />\n                            <Input\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                placeholder=\"password\"\n                            />\n                            <Button>Sign up</Button>\n                        </FormWrapper>\n                    </form>\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault()\n                            firebaseApp\n                                .auth()\n                                .signInWithEmailAndPassword(email, password)\n                                .catch(m => console.log(m))\n                        }}\n                    >\n                        <FormWrapper>\n                            <h2>I already have an account</h2>\n                            <Input\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                placeholder=\"email\"\n                            />\n                            <Input\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                placeholder=\"password\"\n                            />\n                            <Button>Sign in</Button>\n                        </FormWrapper>\n                    </form>\n                </>\n            ) : (\n                <Button\n                    type=\"button\"\n                    onClick={() => {\n                        firebaseApp.auth().signOut()\n                    }}\n                >\n                    Sign out\n                </Button>\n            )}\n        </div>\n    )\n}\n\nconst FormWrapper = styled.div`\n    padding: 30px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { IconName, Icon } from '../Icon'\nimport { brand, white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\nimport { NAV_HEIGHT } from '../Nav'\n\ntype FloatingButtonProps = {\n    onClick: () => void\n    iconName: IconName\n}\n\nexport const FloatingButton = (props: FloatingButtonProps) => (\n    <Button onClick={props.onClick}>\n        <Icon name={props.iconName} size=\"normal\" />\n    </Button>\n)\n\nconst Button = styled.button`\n    position: fixed;\n    bottom: ${NAV_HEIGHT + 15}px;\n    right: 15px;\n    padding: 12px;\n    border: 2px solid ${white};\n    color: ${brand};\n    box-shadow: ${floatingShadow};\n    border-radius: 50%;\n    background: ${white};\n    transition: 0.2s;\n    &:active {\n        border-color: ${brand};\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\ntype SearchProps = {\n    value: string\n    onChange: (value: string) => void\n}\n\nexport const Search = (props: SearchProps) => (\n    <Input\n        type=\"search\"\n        value={props.value}\n        onChange={e => props.onChange(e.target.value)}\n        placeholder=\"Search…\"\n    />\n)\n\nconst Input = styled.input``\n","import React from 'react'\nimport styled from 'styled-components'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\ntype EditableListProps = {\n    list: string[]\n    onChange: (list: string[]) => void\n}\nexport const EditableList = (props: EditableListProps) => (\n    <DragDropContext\n        onDragEnd={result => {\n            console.log(result)\n            if (!result.destination) return\n\n            const items = reorder(\n                props.list,\n                result.source.index,\n                result.destination.index\n            )\n            props.onChange(items)\n        }}\n    >\n        <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n                <List {...provided.droppableProps} ref={provided.innerRef}>\n                    {props.list.map((item, index) => (\n                        <Draggable key={item} draggableId={item} index={index}>\n                            {(provided, snapshot) => (\n                                <ListElement\n                                    key={index}\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={provided.draggableProps.style}\n                                >\n                                    {item}\n                                    <Cross\n                                        onClick={() => {\n                                            props.onChange(remove(props.list, index))\n                                        }}\n                                    />\n                                </ListElement>\n                            )}\n                        </Draggable>\n                    ))}\n                    {provided.placeholder}\n                </List>\n            )}\n        </Droppable>\n    </DragDropContext>\n)\n\nconst remove = (list: string[], index: number) => list.filter((el, i) => index !== i)\n\nconst reorder = (list: string[], startIndex: number, endIndex: number) => {\n    const result = Array.from(list)\n    const [removed] = result.splice(startIndex, 1)\n    result.splice(endIndex, 0, removed)\n\n    return result\n}\n\nconst List = styled.div``\nconst ListElement = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n`\nconst Cross = styled.button`\n    border-left: 1px solid #ccc;\n    color: red;\n    padding: 3px;\n    :after {\n        content: 'x';\n    }\n`\n","import {\n    ENTERING,\n    EXITED,\n    EXITING,\n    TransitionStatus,\n} from 'react-transition-group/Transition'\nimport { css, keyframes } from 'styled-components'\n\nexport const fadeDuration = 400\nconst easing = 'cubic-bezier(0.29, 0.87, 0.54, 0.99)'\n\nconst fadeUpKeyframes = keyframes`\n    from {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n    to {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n`\n\nconst fadeDownKeyframes = keyframes`\n    from {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n    to {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n`\n\nconst fadeInKeyframes = keyframes`\n    from { opacity: 0; }\n    to { opacity: 1; }\n`\n\nconst fadeOutKeyframes = keyframes`\n    from { opacity: 1; }\n    to { opacity: 0; }\n`\n\nexport const fadeUpAnimation = css`\n    animation: ${fadeUpKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeDownAnimation = css`\n    animation: ${fadeDownKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeUpDownAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeUpAnimation};\n    ${status === EXITING && fadeDownAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'display: none;'};\n`\n\nexport const fadeInAnimation = css`\n    animation: ${fadeInKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeOutAnimation = css`\n    animation: ${fadeOutKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeInOutAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeInAnimation};\n    ${status === EXITING && fadeOutAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'display: none;'};\n`\n","import React, { ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport Transition, { TransitionStatus } from 'react-transition-group/Transition'\nimport styled from 'styled-components'\nimport { fadeInOutAnimation, fadeUpDownAnimation } from '../../styles/animations'\nimport { white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\n\ntype ModalProps = {\n    show: boolean\n    children?: ReactNode\n    footer?: () => ReactNode\n    close?: () => void\n}\n\nexport const Modal = (props: ModalProps) => {\n    return ReactDOM.createPortal(\n        <Transition in={props.show} timeout={1000}>\n            {status => (\n                <>\n                    <ModalBox status={status}>\n                        {props.children}\n                        {props.footer && props.footer()}\n                    </ModalBox>\n                    <Overlay status={status} onClick={props.close} />\n                </>\n            )}\n        </Transition>,\n        modalRoot\n    )\n}\n\nconst modalRoot = document.getElementById('modals')\n\nconst ModalBox = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 15px;\n    margin: 0 auto auto;\n    width: calc(100vw - 20px);\n    max-height: calc(100vh - 20px);\n    overflow-y: auto;\n    background: ${white};\n    border-radius: 4px;\n    z-index: 1000;\n    padding: 15px;\n    box-shadow: ${floatingShadow};\n    ${p => fadeUpDownAnimation(p.status)};\n`\n\nconst Overlay = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.1);\n    z-index: 100;\n    ${p => fadeInOutAnimation(p.status)};\n`\n","import { DictionaryItem } from './types'\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('')\nconst cache = {}\n\nexport const fetchDictionary = async (\n    letter: string\n): Promise<DictionaryItem[] | null> => {\n    if (!alphabet.includes(letter)) {\n        return null\n    }\n\n    if (cache[letter]) {\n        return cache[letter]\n    }\n\n    const res = await fetch(`/dictionary/en-pl/${letter}.json`)\n    const data: DictionaryItem[] = await res.json()\n\n    cache[letter] = data\n\n    return data\n}\n","import { useState, useMemo } from 'react'\nimport { useDebounce } from '../useDebounce'\nimport { fetchDictionary } from './fetchDictionary'\nimport { DictionaryItem } from './types'\n\nexport const useDictionary = (query: string) => {\n    const [currentQuery, setCurrentQuery] = useState('')\n\n    const [results, setResults] = useState<DictionaryItem[]>([])\n\n    useDebounce(() => setCurrentQuery(query.toLowerCase()), 400, [query])\n\n    useMemo(() => {\n        const letter = (currentQuery[0] || '').toLowerCase()\n\n        const run = async () => {\n            const list = await fetchDictionary(letter)\n\n            if (!list) {\n                setResults([])\n                return\n            }\n\n            const results = list\n                .filter(item => item.word.toLowerCase().startsWith(currentQuery))\n                .slice(0, 5)\n\n            setResults(results)\n        }\n\n        run()\n    }, [currentQuery])\n\n    return { results }\n}\n","import { useEffect } from 'react'\n\nexport const useDebounce = (fn: () => any, ms: number = 0, args: any[] = []) => {\n    useEffect(() => {\n        const handle = setTimeout(fn.bind(null, args), ms)\n\n        return () => {\n            clearTimeout(handle)\n        }\n    }, [args, fn, ms])\n}\n","import React, { useState } from 'react'\nimport useList from 'react-use/lib/useList'\nimport styled from 'styled-components'\nimport { Button } from '../../components/Button'\nimport { EditableList } from '../../components/EditableList'\nimport { Input } from '../../components/Input'\nimport { Modal } from '../../components/Modal'\nimport { useDictionary } from '../../hooks/useDictionary'\nimport { DictionaryTrans } from '../../hooks/useDictionary/types'\nimport { UnSavedWord } from '../../store/state/types/State'\nimport { light } from '../../styles/colors'\n\ntype WordFormProps = {\n    show: boolean\n    onClose: () => void\n    onSave: (word: UnSavedWord) => void\n}\n\nexport const WordForm = (props: WordFormProps) => {\n    const [wordInput, setWordInput] = useState('')\n    const [translationInput, setTranslationInput] = useState('')\n    const [exampleInput, setExampleInput] = useState('')\n\n    const [translationList, translationListActions] = useList<string>()\n    const [exampleList, exampleListActions] = useList<string>()\n\n    const { results } = useDictionary(wordInput)\n\n    const addNewWord = () => {\n        props.onSave({\n            name: wordInput,\n            translation: translationList,\n            example: exampleList,\n        })\n        setWordInput('')\n        setTranslationInput('')\n        setExampleInput('')\n        props.onClose()\n    }\n\n    const getTrans = (trans: DictionaryTrans[]) => trans.map(t => t.texts[0]).join(', ')\n\n    return (\n        <Modal\n            show={props.show}\n            footer={() => (\n                <>\n                    <Button onClick={props.onClose}>Close</Button>\n                    <Button onClick={addNewWord}>Save</Button>\n                </>\n            )}\n            close={props.onClose}\n        >\n            <h4>Word</h4>\n            <div>\n                <Input value={wordInput} placeholder=\"Word\" onChange={setWordInput} />\n            </div>\n            {!translationList.length && (\n                <div>\n                    {results.map(item => (\n                        <AutocompleteItem\n                            key={item.id}\n                            onClick={() => {\n                                setWordInput(item.word)\n                                const translations = item.trans.map(t => t.texts[0])\n                                translationListActions.set(translations)\n                            }}\n                        >\n                            <b>{item.word}</b> - {getTrans(item.trans)}\n                        </AutocompleteItem>\n                    ))}\n                </div>\n            )}\n\n            <h4>Translations</h4>\n            <EditableList list={translationList} onChange={translationListActions.set} />\n            <InputWithButtonWrapper>\n                <div>\n                    <Input\n                        value={translationInput}\n                        onChange={setTranslationInput}\n                        placeholder=\"Translation\"\n                    />\n                </div>\n                <Button\n                    onClick={() => {\n                        if (!translationInput) return\n                        translationListActions.push(translationInput)\n                        setTranslationInput('')\n                    }}\n                >\n                    +\n                </Button>\n            </InputWithButtonWrapper>\n\n            <h4>Examples</h4>\n            <EditableList list={exampleList} onChange={translationListActions.set} />\n            <InputWithButtonWrapper>\n                <div>\n                    <Input\n                        value={exampleInput}\n                        onChange={setExampleInput}\n                        placeholder=\"Example\"\n                    />\n                </div>\n                <Button\n                    onClick={() => {\n                        if (!exampleInput) return\n                        exampleListActions.push(exampleInput)\n                        setExampleInput('')\n                    }}\n                >\n                    +\n                </Button>\n            </InputWithButtonWrapper>\n        </Modal>\n    )\n}\n\nconst AutocompleteItem = styled.button`\n    display: block;\n    width: 100%;\n    padding: 1em 0;\n    border: none;\n    border-bottom: 1px solid ${light};\n    text-align: left;\n    font-size: 14px;\n`\n\nconst InputWithButtonWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Word } from '../../store/state/types/State'\nimport { light, brand, gray } from '../../styles/colors'\n\ntype WordsItemProps = {\n    word: Word\n    removeWord: () => void\n}\n\nexport const WordsItem = (props: WordsItemProps) => (\n    <Container>\n        <div>\n            <Name>{props.word.name} - </Name>\n            <Translations>{props.word.translation.join(', ')}</Translations>\n\n            {props.word.action && 'Loading…'}\n            {!!props.word.example.length && (\n                <Examples>{props.word.example.join(', ')}</Examples>\n            )}\n        </div>\n\n        <RemoveButton onClick={props.removeWord}>✖</RemoveButton>\n    </Container>\n)\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    padding: 12px;\n    border-bottom: 1px solid ${light};\n`\n\nconst Name = styled.strong`\n    font-weight: normal;\n    font-size: 1.2em;\n`\n\nconst Translations = styled.span`\n    color: ${brand};\n    font-size: 1.2em;\n`\n\nconst Examples = styled.div`\n    color: ${gray};\n    font-size: 0.8em;\n    font-style: italic;\n`\n\nconst RemoveButton = styled.button`\n    border: none;\n    background: none;\n`\n","import React, { ElementType, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Nav, NAV_HEIGHT } from './components/Nav'\nimport { Game } from './screens/Game'\nimport { Home } from './screens/Home'\nimport { Settings } from './screens/Settings'\nimport { Words } from './screens/Words'\nimport { useRouter, useWordsPersist } from './store'\nimport { firebaseApp } from './store/firebase'\nimport { dispatch } from './store/state/store'\nimport { RouteName } from './store/types/RouteName'\n\nconst screens: Record<RouteName, ElementType> = {\n    [RouteName.Home]: Home,\n    [RouteName.Words]: Words,\n    [RouteName.Profile]: Settings,\n    [RouteName.Game]: Game,\n}\n\nexport const App = () => {\n    useWordsPersist()\n    const { route, setRoute } = useRouter()\n    const Page = screens[route]\n\n    useEffect(() => {\n        firebaseApp.auth().onAuthStateChanged(function(user) {\n            dispatch({\n                type: 'USER/CHANGE',\n                payload: user\n                    ? { email: user.email, id: user.uid, name: user.displayName }\n                    : null,\n            })\n        })\n    }, [])\n\n    return (\n        <>\n            <Content>\n                <Page />\n            </Content>\n            <NavContainer>\n                <Nav active={route} onChange={setRoute} />\n            </NavContainer>\n        </>\n    )\n}\n\nconst Content = styled.main`\n    height: calc(100% - ${NAV_HEIGHT}px);\n    position: relative;\n    width: 100%;\n    overflow-y: auto;\n`\n\nconst NavContainer = styled.div`\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    left: 0;\n`\n","import React, { useState } from 'react'\nimport { FloatingButton } from '../../components/FloatingButton'\nimport { Header } from '../../components/Header'\nimport { Search } from '../../components/Search'\nimport { useWords } from '../../store'\nimport { WordForm } from './WordForm'\nimport { WordsItem } from './WordsItem'\n\nexport const Words = () => {\n    const { words, removeWord, addWord } = useWords()\n    const [search, setSearch] = useState('')\n\n    const [showModal, setShowModal] = useState(false)\n\n    return (\n        <div>\n            <Header title=\"Words\" iconName=\"words\">\n                <Search value={search} onChange={setSearch} />\n            </Header>\n            <div>\n                {words &&\n                    words\n                        .filter(word => word.name.includes(search))\n                        .map(word => (\n                            <WordsItem\n                                key={word.id}\n                                word={word}\n                                removeWord={() => removeWord(word.id)}\n                            />\n                        ))}\n            </div>\n            <FloatingButton onClick={() => setShowModal(!showModal)} iconName=\"plus\" />\n            <WordForm\n                show={showModal}\n                onClose={() => setShowModal(false)}\n                onSave={addWord}\n            />\n        </div>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import * as Sentry from '@sentry/browser'\nimport React, { Component, ErrorInfo } from 'react'\n\ntype ErrorBoundaryState = {\n    error: Error | null\n    eventId: string | null\n}\n\nexport class ErrorBoundary extends Component<{}, ErrorBoundaryState> {\n    public state = {\n        error: null,\n        eventId: null,\n    }\n\n    public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        this.setState({ error })\n\n        Sentry.withScope(scope => {\n            scope.setExtras(errorInfo)\n            this.setState({ eventId: Sentry.captureException(error) })\n        })\n    }\n\n    public render() {\n        if (this.state.error) {\n            return (\n                <div>\n                    <h1>Error occurred ;(</h1>\n                    <a onClick={this.handleReportDialog}>Report feedback</a>\n                    <pre>{JSON.stringify(this.state.error, null, 2)}</pre>\n                </div>\n            )\n        }\n\n        return this.props.children\n    }\n\n    private handleReportDialog = () => {\n        Sentry.showReportDialog({ eventId: this.state.eventId })\n    }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport * as Sentry from '@sentry/browser'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './styles/global.css'\nimport { GlobalStateProvider } from './store'\nimport { ErrorBoundary } from './components/ErrorBoundary'\n\nSentry.init({\n    dsn: 'https://adf49e52f07d479098537009eb0044b0@sentry.io/1446350',\n})\n\nrender(\n    <ErrorBoundary>\n        <GlobalStateProvider>\n            <App />\n        </GlobalStateProvider>\n    </ErrorBoundary>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { dispatch, useGlobalState } from './state/store'\nimport { useEffect, useState } from 'react'\nimport { firebaseApp } from './firebase'\nimport { Word, WordAction } from './state/types/State'\n\nexport const useWordsPersist = () => {\n    const [user] = useGlobalState('user')\n    const [localWords] = useGlobalState('words')\n\n    useEffect(() => {\n        // Waiting for user status…\n        if (user === undefined) return\n\n        // User is logged out\n        if (user === null) {\n            dispatch({ type: 'WORDS/SET', payload: [] })\n            return\n        }\n\n        // Listen on words updates\n        const unsubscribe = firebaseApp\n            .firestore()\n            .collection('users')\n            .doc(user.id)\n            .collection('words')\n            .onSnapshot(snapshot => {\n                const serverWords: Word[] = []\n\n                snapshot.forEach(doc => {\n                    const data = doc.data()\n                    serverWords.push({\n                        id: doc.id,\n                        name: data.name,\n                        translation: data.translation,\n                        example: data.example,\n                    })\n                })\n\n                dispatch({ type: 'WORDS/SET', payload: serverWords })\n            })\n\n        return unsubscribe\n    }, [user])\n\n    // This one react only when words are changed (action field in Word)\n    useEffect(() => {\n        if (!localWords) return\n\n        const wordToAdd = localWords.filter(w => w.action === WordAction.Add)\n        const wordToDelete = localWords.filter(w => w.action === WordAction.Delete)\n\n        if ((!wordToAdd && !wordToDelete) || !user) return\n\n        const wordsFirebaseRef = firebaseApp\n            .firestore()\n            .collection('users')\n            .doc(user.id)\n            .collection('words')\n\n        wordToAdd.forEach(word => {\n            const newWord: Word = { ...word }\n            // Very important one, without this we will have infinite loop :O\n            delete newWord.action\n            delete newWord.id // Also we can remove local ID\n\n            wordsFirebaseRef.add(newWord)\n        })\n\n        wordToDelete.forEach(word => {\n            wordsFirebaseRef.doc(word.id).delete()\n        })\n    }, [localWords, user])\n}\n"],"sourceRoot":""}