{"version":3,"sources":["store/types/RouteName.ts","store/state/initialState.ts","store/state/types/State.ts","store/state/reducer.ts","store/state/helpers/reducerLogger.ts","store/state/store.ts","store/useRouter.ts","store/useWords.ts","store/firebase.ts","store/useIsLoading.ts","styles/colors.ts","styles/shadow.ts","styles/transitions.ts","components/Icon/icons/Home.tsx","components/Icon/icons/Play.tsx","components/Icon/icons/Plus.tsx","components/Icon/icons/Profile.tsx","components/Icon/icons/Reload.tsx","components/Icon/icons/Words.tsx","components/Icon/icons/Search.tsx","components/Icon/icons/Cross.tsx","components/Icon/Icon.tsx","components/Space/Space.tsx","components/Nav/Nav.tsx","styles/values.ts","components/Keyboard/getKeysForWord.tsx","components/Keyboard/Key.tsx","components/Keyboard/Keyboard.tsx","hooks/useElementSize.ts","components/Typewriter/Pointer.tsx","components/Typewriter/Typewriter.tsx","components/Loading/Loading.tsx","components/Loading/FullLoading.tsx","screens/Game/useGame.tsx","components/Typewriter/ExampleSentence.tsx","screens/Game/GameScreen.tsx","components/Logo/Logo.tsx","styles/animations.ts","screens/Home/StartButton.tsx","components/Input/Input.tsx","components/Tabs/Tabs.tsx","components/Tabs/TabsItem.tsx","store/useAuth.ts","screens/Home/AuthForm.tsx","screens/Home/HomeScreen.tsx","components/Button/Button.tsx","components/Header/Header.tsx","screens/Settings/SettingsScreen.tsx","components/FloatingButton/FloatingButton.tsx","components/Search/Search.tsx","components/Modal/Modal.tsx","components/EditableList/EditableList.tsx","hooks/useDictionary/fetchDictionary.ts","hooks/useDictionary/useDictionary.ts","hooks/useDebounce.ts","screens/Words/WordForm.tsx","store/presets/index.ts","screens/Words/WordPresets.tsx","screens/Words/WordModal.tsx","screens/Words/WordsItem.tsx","screens/Words/WordsScreen.tsx","App.tsx","serviceWorker.ts","components/ErrorBoundary/ErrorBoundary.tsx","index.tsx","store/useWordsPersist.ts"],"names":["RouteName","WordAction","initialState","route","Home","lastRoutes","words","undefined","user","reducerFunc","localId","concat","uuid","createStore","state","action","type","Object","objectSpread","payload","toConsumableArray","slice","newWord","id","Add","newWords","map","word","Delete","Error","console","log","GlobalStateProvider","dispatch","useGlobalState","useRouter","_useGlobalState","slicedToArray","setRoute","goBack","useWords","addWord","addManyWords","removeWord","randomWord","length","Math","floor","random","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useIsLoading","_useGlobalState3","isLoading","loggedIn","purple","white","black1","black3","black6","barShadow","floatingShadow","fast","transition","_len","arguments","args","Array","_key","name","join","_ref","size","props","objectWithoutProperties","react_default","a","createElement","assign","width","height","viewBox","fillRule","clipRule","d","Play","Plus","Profile","Reload","Words","Search","fill","fillOpacity","Cross","RotatePlus","styled","_templateObject","sizes","normal","big","large","Icon","_ref$size","_ref$block","block","IconContent","icons","Container","div","Icon_templateObject","p","Space","Space_templateObject","screensWithoutNav","Game","Nav","prop","react","Nav_Container","show","includes","NavList","NavButton","isActive","active","onClick","onChange","Icon_Icon","nav","Nav_templateObject","_templateObject2","button","_templateObject3","activeCSS","inActiveCSS","css","_templateObject4","_templateObject5","special","KEYS","row","split","getKey","key","fakeKeys","seedRandom","visible","Key","Key_Container","onPointerDown","isSpace","symbol","esm","keyEventName","KEYPRESS","keyValue","onKeyHandle","Key_templateObject","highlight","Key_templateObject2","Keyboard","Keyboard_Container","originalWord","toLowerCase","k","getKeysForWord","i","Row","Key_Key","onPress","Keyboard_templateObject","Keyboard_templateObject2","getSize","el","_el$getBoundingClient","getBoundingClientRect","Pointer","pipeSpring","useSpring","transform","from","PipeContainer","style","animated","span","Pointer_templateObject","Typewriter","progress","document","body","_useState","useState","_useState2","setSize","useEffect","handleResize","window","addEventListener","removeEventListener","useElementSize","preview","setPreview","typed","substr","fontSize","min","Typewriter_Container","onPointerOut","TypeWrapper","w","Segment","Pointer_Pointer","Letter","hide","Hint","Typewriter_templateObject","Typewriter_templateObject2","Typewriter_templateObject3","Typewriter_templateObject4","small","Typewriter_templateObject5","Loading","Loading_Container","version","x","y","attributeType","attributeName","to","dur","repeatCount","Loading_templateObject","FullLoading","FullLoading_Container","Loading_Loading","FullLoading_templateObject","emptyWord","translation","example","ExampleSentence","sentence","hiddenWord","showWord","splitWords","isHidden","matchWord","ExampleSentence_Container","_ref2","index","HiddenWord","repeat","lowerWord","toLocaleLowerCase","lowerHiddenWord","startsWith","ExampleSentence_templateObject","ExampleSentence_templateObject2","GameScreen_templateObject","GameScreen_templateObject2","Bottom","GameScreen_templateObject3","Complete","GameScreen_templateObject4","DoneButton","GameScreen_templateObject5","ActionButtonsWrapper","_templateObject6","ActionButton","_templateObject7","Logo","reSpring","opacity","delay","wordSpring","Logo_Container","First","Pipe","Last","h1","Logo_templateObject","Logo_templateObject2","Logo_templateObject3","Logo_templateObject4","easing","fadeUpKeyframes","keyframes","animations_templateObject","fadeDownKeyframes","animations_templateObject2","fadeInKeyframes","animations_templateObject3","fadeOutKeyframes","animations_templateObject4","fadeUpAnimation","animations_templateObject5","fadeDownAnimation","animations_templateObject6","fadeInAnimation","_templateObject8","fadeOutAnimation","_templateObject9","scaleInframes","_templateObject10","scaleOutframes","_templateObject11","scaleInAnimation","_templateObject12","_templateObject13","StartButton","CircleButton","StartButton_templateObject","Input","value","_props$type","placeholder","autoFocus","focus","setFocus","_useState3","_useState4","linePosition","setLinePosition","labelRef","useRef","defaultLinePosition","current","Label","onMouseDown","e","pageX","ref","LabelName","move","InputStyled","event","target","onFocus","onBlur","transformOrigin","label","Input_templateObject","Input_templateObject2","input","Input_templateObject3","Tabs","items","Children","toArray","children","currentIndex","findIndex","setActive","prevActive","setPrevActive","refNav","refActive","pos","useLinePosition","activeItem","prevActiveItem","Tabs_Container","Tabs_Nav","NavItem","Line","left","Content","ContentItem","animation","Tabs_templateObject","Tabs_templateObject2","Tabs_templateObject3","animations","rightOut","Tabs_templateObject4","rightIn","Tabs_templateObject5","leftOut","Tabs_templateObject6","leftIn","Tabs_templateObject7","Tabs_templateObject8","endsWith","Tabs_templateObject9","Tabs_templateObject10","Tabs_templateObject11","Tabs_templateObject12","wrapperEl","activeEl","deps","_useState5","_useState6","setLeft","_useState7","_useState8","setWidth","activeRect","wrapperRect","TabsItem","TabsItem_Container","TabsItem_templateObject","useAuthActions","signInError","setSignInError","createAccountError","setCreateAccountError","loading","setLoading","createAccount","asyncToGenerator","regenerator_default","mark","_callee","email","password","wrap","_context","prev","next","auth","createUserWithEmailAndPassword","t0","message","stop","_x","_x2","apply","this","signIn","_callee2","_context2","signInWithEmailAndPassword","code","_x3","_x4","signOut","_ref3","_callee3","_context3","AuthForm","_useAuthActions","setEmail","setPassword","AuthForm_Container","Tabs_Tabs","TabsItem_TabsItem","onSubmit","preventDefault","ContentWrapper","ErrorMessage","Input_Input","FullButton","Overlay","AuthForm_templateObject","AuthForm_templateObject2","AuthForm_templateObject3","AuthForm_templateObject4","AuthForm_templateObject5","HomeScreen_templateObject","WordsCount","HomeScreen_templateObject2","AuthFormWrapper","main","HomeScreen_templateObject3","Button","Button_templateObject","color","Button_templateObject2","Button_templateObject3","Button_templateObject4","Header","HeaderWrapper","iconName","title","header","Header_templateObject","SettingsScreen_templateObject","Center","SettingsScreen_templateObject2","FloatingButton","FloatingButton_Button","FloatingButton_templateObject","SearchBox","Search_Input","IconPos","Search_templateObject","Search_templateObject2","Search_templateObject3","Modal","ReactDOM","createPortal","Transition","in","timeout","status","Fragment","ModalBox","Modal_Overlay","onOverlayClick","modalRoot","getElementById","Modal_templateObject","animations_templateObject7","ENTERING","EXITING","EXITED","Modal_templateObject2","_templateObject14","EditableList","react_beautiful_dnd_esm","onDragEnd","result","destination","reorder","list","source","droppableId","provided","snapshot","List","droppableProps","innerRef","item","draggableId","ListElement","draggableProps","dragHandleProps","EditableList_Cross","remove","filter","startIndex","endIndex","_result$splice","splice","removed","EditableList_templateObject","EditableList_templateObject2","EditableList_templateObject3","alphabet","cache","fetchDictionary","letter","res","data","abrupt","fetch","sent","json","useDictionary","query","currentQuery","setCurrentQuery","results","setResults","fn","ms","handle","setTimeout","bind","clearTimeout","useDebounce","useMemo","run","WordForm","wordInput","setWordInput","translationInput","setTranslationInput","exampleInput","setExampleInput","_useList","useList","_useList2","translationList","translationListActions","_useList3","_useList4","exampleList","exampleListActions","Autocomplete","count","AutocompleteItem","translations","trans","t","texts","set","EditableList_EditableList","InputWithButtonWrapper","push","ModalActions","onDismiss","clear","WordForm_templateObject","WordForm_templateObject2","WordForm_templateObject3","WordForm_templateObject4","WordForm_templateObject5","presets","getList","__webpack_require__","then","preset","WordPresets","WordPresets_Container","WordPresets_templateObject","WordModal","Modal_Modal","WordForm_WordForm","WordPresets_WordPresets","WordsItem","WordsItem_Container","Name","Translations","Examples","RemoveButton","WordsItem_templateObject","strong","WordsItem_templateObject2","WordsItem_templateObject3","WordsItem_templateObject4","WordsItem_templateObject5","WordsScreen_templateObject","screens","_screens","defineProperty","_useIsLoading","FullLoading_FullLoading","HomeScreen_Container","Logo_Logo","StartButton_StartButton","AuthForm_AuthForm","search","setSearch","_useWords","showModal","setShowModal","WordsScreen_Container","Header_Header","Search_Search_Search","sort","b","localeCompare","WordsItem_WordsItem","FloatingButton_FloatingButton","WordModal_WordModal","SettingsScreen_Container","_useGame","setProgress","setWord","wordRight","isComplete","nextWord","retry","keyPress","useGame","GameScreen_Container","GameScreen_Row","ExampleSentence_ExampleSentence","Typewriter_Typewriter","Keyboard_Keyboard","NavContainer","App_templateObject","Boolean","location","hostname","match","ErrorBoundary","_Component","_getPrototypeOf2","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","error","eventId","handleReportDialog","Sentry","inherits","createClass","errorInfo","_this2","setState","scope","setExtras","JSON","stringify","Component","dsn","render","ErrorBoundary_ErrorBoundary","localWords","firestore","collection","doc","onSnapshot","serverWords","forEach","wordToAdd","wordToDelete","wordsFirebaseRef","add","delete","useWordsPersist","onAuthStateChanged","uid","displayName","_useRouter","Page","Nav_Nav","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bcd0465b.chunk.js","sourcesContent":["export enum RouteName {\n    Home = 'home',\n    Words = 'words',\n    Profile = 'profile',\n    Game = 'game',\n}\n","import { RouteName } from '../types/RouteName'\nimport { State } from './types/State'\n\nexport const initialState: State = {\n    route: RouteName.Home,\n    lastRoutes: [],\n    words: undefined,\n    user: undefined,\n}\n","import { RouteName } from '../../types/RouteName'\n\nexport enum WordAction {\n    Add,\n    Delete,\n}\n\nexport type Word = UnSavedWord & {\n    id: string\n    action?: WordAction\n}\n\nexport type UnSavedWord = {\n    name: string\n    translation: string[]\n    example: string[]\n    preset?: string\n}\n\nexport type WordsState = Word[]\n\nexport type UserState = {\n    id: string\n    email: string\n    name: string\n}\n\nexport type State = {\n    route: RouteName\n    lastRoutes: RouteName[]\n    words?: WordsState\n    user?: UserState | null\n}\n","import uuid from 'uuid'\nimport { Actions } from './types/Actions'\nimport { State, Word, WordAction } from './types/State'\n\nconst localId = () => `local-${uuid()}`\n\nexport const reducer = (state: State, action: Actions) => {\n    switch (action.type) {\n        case 'ROUTER/SET_ROUTE':\n            return {\n                ...state,\n                route: action.payload.route,\n                lastRoutes: [state.route, ...state.lastRoutes],\n            }\n\n        case 'ROUTER/BACK':\n            return {\n                ...state,\n                route: state.lastRoutes[0],\n                lastRoutes: state.lastRoutes.slice(1),\n            }\n\n        case 'WORDS/SET':\n            return {\n                ...state,\n                words: action.payload,\n            }\n\n        case 'WORDS/ADD_WORD':\n            const newWord: Word = {\n                id: localId(),\n                action: WordAction.Add,\n                ...action.payload,\n            }\n            return {\n                ...state,\n                words: [...state.words, newWord],\n            }\n\n        case 'WORDS/ADD_MANY_WORDS':\n            const newWords: Word[] = action.payload.map(word => ({\n                id: localId(),\n                action: WordAction.Add,\n                ...word,\n            }))\n            return {\n                ...state,\n                words: [...state.words, ...newWords],\n            }\n\n        case 'WORDS/REMOVE_WORD':\n            return {\n                ...state,\n                words: state.words.map(word =>\n                    word.id === action.payload.id\n                        ? {\n                              ...word,\n                              action: WordAction.Delete,\n                          }\n                        : word\n                ),\n            }\n\n        case 'USER/CHANGE':\n            return {\n                ...state,\n                user: action.payload,\n            }\n\n        default:\n            throw new Error('[reducer] Unknown action type!')\n    }\n}\n","import { Actions } from '../types/Actions'\nimport { State } from '../types/State'\nimport { reducer } from '../reducer'\n\nexport const reducerLogger = (reducerFunc: typeof reducer) => (\n    state: State,\n    action: Actions\n) => {\n    console.log('→', action.type, action.payload)\n    return reducerFunc(state, action)\n}\n","import { createStore } from 'react-hooks-global-state'\nimport { reducerLogger } from './helpers/reducerLogger'\nimport { initialState } from './initialState'\nimport { reducer } from './reducer'\n\nexport const { GlobalStateProvider, dispatch, useGlobalState } = createStore(\n    reducerLogger(reducer),\n    initialState\n)\n","import { dispatch, useGlobalState } from './state/store'\nimport { RouteName } from './types/RouteName'\n\nexport const useRouter = () => {\n    const [route] = useGlobalState('route')\n\n    const setRoute = (route: RouteName) => {\n        dispatch({ type: 'ROUTER/SET_ROUTE', payload: { route } })\n    }\n\n    const goBack = () => {\n        dispatch({ type: 'ROUTER/BACK' })\n    }\n\n    return { route, setRoute, goBack }\n}\n","import { dispatch, useGlobalState } from './state/store'\nimport { UnSavedWord, Word } from './state/types/State'\n\nexport const useWords = () => {\n    const [words] = useGlobalState('words')\n\n    const addWord = (word: UnSavedWord) => {\n        dispatch({ type: 'WORDS/ADD_WORD', payload: word })\n    }\n\n    const addManyWords = (words: UnSavedWord[]) => {\n        dispatch({ type: 'WORDS/ADD_MANY_WORDS', payload: words })\n    }\n\n    const removeWord = (id: string) => {\n        dispatch({ type: 'WORDS/REMOVE_WORD', payload: { id } })\n    }\n\n    const randomWord = (): Word | null => {\n        if (!words || !words.length) return null\n        return words[Math.floor(Math.random() * words.length)]\n    }\n\n    return { words, addWord, addManyWords, removeWord, randomWord }\n}\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyATMnw8FbczS1-0yJwrHl98EunKDAjE1DM',\n    authDomain: 'reword-1.firebaseapp.com',\n    databaseURL: 'https://reword-1.firebaseio.com',\n    projectId: 'reword-1',\n    storageBucket: 'reword-1.appspot.com',\n    messagingSenderId: '220877466530',\n    appId: '1:220877466530:web:7c95c058eaa3a7ed',\n}\nexport const firebaseApp = firebase.initializeApp(firebaseConfig)\n","import { useGlobalState } from './state/store'\n\nexport const useIsLoading = () => {\n    const [words] = useGlobalState('words')\n    const [user] = useGlobalState('user')\n\n    return {\n        isLoading: words === undefined || user === undefined,\n        loggedIn: !!user,\n    }\n}\n","export const purple = '#9438EA'\nexport const white = '#FFFFFF'\nexport const black = '#000000'\nexport const black05 = 'rgba(0, 0, 0, 0.05)'\nexport const black1 = 'rgba(0, 0, 0, 0.1)'\nexport const black3 = 'rgba(0, 0, 0, 0.3)'\nexport const black6 = 'rgba(0, 0, 0, 0.6)'\nexport const grayBg = 'rgba(196, 196, 196, 0.2)'\nexport const goodColor = '#AED900'\nexport const dangerColor = '#EA388D'\n","export const barShadow = '0 0 10px rgba(0, 0, 0, 0.1)'\nexport const floatingShadow = '2px 2px 7px rgba(0, 0, 0, 0.1)'\n","export const fast = '0.3s cubic-bezier(.21,.96,.43,.98)'\nexport const slow = '0.8s cubic-bezier(.21,.96,.43,.98)'\nexport const now = '0.1s cubic-bezier(.21,.96,.43,.98)'\nexport const transition = (...args: string[]) => `transition:${args\n    .map(name => `${name} ${fast}`)\n    .join(',')};\n`\n","import React from 'react'\n\nimport { IconProps } from '../types'\n\nexport const Home = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M5 12.5H2L12 3.5L22 12.5H19V20.5H13V14.5H11V20.5H5V12.5ZM17 10.69L12 6.19L7 10.69V18.5H9V12.5H15V18.5H17V10.69Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Play = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 61 61\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M44.4792 30.5L16.5208 48.2917V12.7083L44.4792 30.5ZM34.9988 30.5L21.6042 21.96V39.04L34.9988 30.5Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Plus = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" {...props}>\n        <path d=\"M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Profile = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4ZM14 8C14 6.9 13.1 6 12 6C10.9 6 10 6.9 10 8C10 9.1 10.9 10 12 10C13.1 10 14 9.1 14 8ZM18 18C17.8 17.29 14.7 16 12 16C9.31 16 6.23 17.28 6 18H18ZM4 18C4 15.34 9.33 14 12 14C14.67 14 20 15.34 20 18V20H4V18Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Reload = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 42 42\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M19.3113 4.43625L27.2738 12.3987L19.3113 20.1862V13.3437C14.3413 14.1837 10.5613 18.4887 10.5613 23.6862C10.5613 28.8837 14.3413 33.1887 19.3113 34.0287V37.5637C12.3988 36.7062 7.06128 30.8262 7.06128 23.6862C7.06128 16.5462 12.4163 10.6662 19.3113 9.80875V4.43625ZM32.1038 15.1287C33.6788 17.1587 34.6413 19.5037 34.9388 21.9362H31.4038C31.1588 20.4137 30.5638 18.9262 29.6188 17.6137L32.1038 15.1287ZM22.8113 34.0113V37.5463C25.2438 37.2488 27.6063 36.3038 29.6363 34.7288L27.1163 32.2088C25.8038 33.1538 24.3338 33.7663 22.8113 34.0113ZM32.1038 32.2437L29.6188 29.7762C30.5638 28.4462 31.1588 26.9587 31.4038 25.4362H34.9388C34.6413 27.8687 33.6788 30.2137 32.1038 32.2437Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Words = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12.87 15.07L10.33 12.56L10.36 12.53C12.1 10.59 13.34 8.36 14.07 6H17V4H10V2H8V4H1V5.99H12.17C11.5 7.92 10.44 9.75 9 11.35C8.07 10.32 7.3 9.19 6.69 8H4.69C5.42 9.63 6.42 11.17 7.67 12.56L2.58 17.58L4 19L9 14L12.11 17.11L12.87 15.07ZM18.5 10H16.5L12 22H14L15.12 19H19.87L21 22H23L18.5 10ZM17.5 12.67L15.88 17H19.12L17.5 12.67Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Search = ({ size, ...props }: IconProps) => (\n    <svg\n        width={size}\n        height={size}\n        viewBox={`0 0 ${size} ${size}`}\n        fill=\"none\"\n        {...props}\n    >\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M15.731 14.255H16.521L21.511 19.255L20.021 20.745L15.021 15.755V14.965L14.751 14.685C13.611 15.665 12.131 16.255 10.521 16.255C6.931 16.255 4.021 13.345 4.021 9.755C4.021 6.165 6.931 3.255 10.521 3.255C14.111 3.255 17.021 6.165 17.021 9.755C17.021 11.365 16.431 12.845 15.451 13.985L15.731 14.255ZM6.021 9.755C6.021 12.245 8.031 14.255 10.521 14.255C13.011 14.255 15.021 12.245 15.021 9.755C15.021 7.26501 13.011 5.255 10.521 5.255C8.031 5.255 6.021 7.26501 6.021 9.755Z\"\n            fill=\"black\"\n            fillOpacity=\"0.54\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { Plus } from './Plus'\nimport { IconProps } from '../types'\nimport styled from 'styled-components'\n\nexport const Cross = (props: IconProps) => <RotatePlus {...props} />\n\nconst RotatePlus = styled(Plus)`\n    transform: rotate(45deg);\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport * as icons from './icons'\n\nconst sizes = {\n    normal: 24,\n    big: 35,\n    large: 62,\n}\n\nexport type IconName = keyof typeof icons\nexport type IconSize = keyof typeof sizes\n\ntype IconProps = {\n    name: IconName\n    size?: IconSize\n    block?: boolean\n}\n\nexport const Icon = ({ name, size = 'normal', block = false }: IconProps) => {\n    const IconContent = icons[name]\n    return (\n        <Container block={block}>\n            <IconContent size={sizes[size]} />\n        </Container>\n    )\n}\n\nconst Container = styled.div<{ block: boolean }>`\n    display: ${p => (p.block ? 'block' : 'inline-block')};\n    vertical-align: middle;\n    svg {\n        display: block;\n        margin: auto;\n        fill: currentColor;\n    }\n`\n","import styled from 'styled-components'\nexport const Space = styled.div`\n    max-width: 900px;\n    margin: auto;\n    width: 100%;\n`\n","import * as React from 'react'\nimport styled, { css } from 'styled-components'\nimport { useRouter } from '../../store'\nimport { RouteName } from '../../store/types/RouteName'\nimport { useIsLoading } from '../../store/useIsLoading'\nimport { black6, purple, white } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { fast } from '../../styles/transitions'\nimport { navHeight } from '../../styles/values'\nimport { Icon } from '../Icon'\nimport { Space } from '../Space/Space'\n\ntype NavProps = {\n    active: RouteName\n    onChange(page: RouteName): void\n}\n\nconst screensWithoutNav = [RouteName.Game]\n\nexport const Nav = (prop: NavProps) => {\n    const { loggedIn } = useIsLoading()\n    const { route } = useRouter()\n\n    return (\n        <Container show={loggedIn && !screensWithoutNav.includes(route)}>\n            <Space>\n                <NavList>\n                    <NavButton\n                        isActive={prop.active === RouteName.Home}\n                        onClick={() => prop.onChange(RouteName.Home)}\n                    >\n                        <Icon name=\"Home\" block />\n                        Home\n                    </NavButton>\n                    <NavButton\n                        isActive={prop.active === RouteName.Words}\n                        onClick={() => prop.onChange(RouteName.Words)}\n                    >\n                        <Icon name=\"Words\" block />\n                        Words\n                    </NavButton>\n                    <NavButton\n                        isActive={prop.active === RouteName.Profile}\n                        onClick={() => prop.onChange(RouteName.Profile)}\n                    >\n                        <Icon name=\"Profile\" block />\n                        Profile\n                    </NavButton>\n                </NavList>\n            </Space>\n        </Container>\n    )\n}\n\nconst Container = styled.nav<{ show: boolean }>`\n    background: ${white};\n    width: 100%;\n    box-shadow: ${barShadow};\n    overflow: hidden;\n    transform: translateY(${p => (p.show ? 0 : navHeight)});\n    transition: transform 300ms ease;\n`\nconst NavList = styled.div`\n    display: flex;\n    min-height: ${navHeight};\n    justify-content: space-evenly;\n`\n\nconst NavButton = styled.button<{ isActive: boolean }>`\n    color: ${props => (props.isActive ? purple : black6)};\n    display: block;\n    background: none;\n    border: none;\n    padding: 10px 25px;\n    position: relative;\n    line-height: 2em;\n    &::after {\n        content: '';\n        display: block;\n        border-radius: 100%;\n        height: 60px;\n        width: 60px;\n        position: absolute;\n        margin: auto;\n        top: -50px;\n        bottom: -50px;\n        left: -50px;\n        right: -50px;\n        ${props => (props.isActive ? activeCSS : inActiveCSS)};\n    }\n    &:active::after {\n        transition: opacity 0.6s ease-out, background 0.6s ease-out, transform 1s ease-out;\n        opacity: 0.1;\n        transform: scale(1.2);\n        background: ${purple};\n    }\n`\n\nconst activeCSS = css`\n    transition: all ${fast};\n    opacity: 0;\n    transform: scale(2);\n    background: ${purple};\n`\n\nconst inActiveCSS = css`\n    transition: all 0 ease;\n    opacity: 0.3;\n    transform: scale(1);\n    background: rgba(255, 255, 255, 0);\n`\n","export const radius = '4px'\nexport const navHeight = '85px'\n","import seedRandom from 'seed-random'\n\nconst special = \"' ,\"\n\nconst KEYS = ['qwertyuiop', 'asdfghjkl', 'zxcvbnm', special].map(row => row.split(''))\n\ntype WordKey = {\n    visible: boolean\n    key: string\n}\n\ntype WordKeyList = WordKey[][]\n\nexport const getKeysForWord = (originalWord: string, fakeKeys = 0): WordKeyList => {\n    const word = originalWord.toLowerCase()\n\n    return KEYS.map(row => row.map(k => getKey(k, word, fakeKeys)))\n}\n\nconst getKey = (key: string, word: string, fakeKeys: number): WordKey => {\n    const random = fakeKeys ? seedRandom(key + word)() : 0\n\n    return {\n        key,\n        visible: word.includes(key) || (fakeKeys > random && !special.includes(key)),\n    }\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { purple, white } from '../../styles/colors'\nimport { fast } from '../../styles/transitions'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\n\ninterface KeyProps {\n    onClick(): void\n    symbol?: string\n    visible?: boolean\n}\n\nexport const Key = (props: KeyProps) => (\n    <Container\n        visible={props.visible}\n        onPointerDown={props.onClick}\n        isSpace={props.symbol === ' '}\n    >\n        {props.symbol}\n        <KeyHandler\n            keyEventName={KEYPRESS}\n            keyValue={props.symbol}\n            onKeyHandle={props.onClick}\n        />\n    </Container>\n)\n\nconst Container = styled.button<{ visible?: boolean; isSpace?: boolean }>`\n    width: ${p => (p.isSpace ? '47vw' : '8vw')};\n    height: 7vh;\n    padding: 0;\n    margin: 0 4px;\n    border: 0.4pt solid ${purple};\n    opacity: ${p => (p.visible ? 1 : 0.1)};\n    border-radius: 4px;\n    color: ${purple};\n    font-weight: bold;\n    font-size: 24px;\n    text-align: center;\n    background: none;\n    transition: all ${fast};\n\n    ${p => p.visible && highlight}\n`\nconst highlight = css`\n    &:active {\n        outline: none;\n        background-color: ${purple};\n        color: ${white};\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { getKeysForWord } from './getKeysForWord'\nimport { white } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { Key } from './Key'\n\ninterface KeyboardProps {\n    word: string\n    onPress(key: string): void\n    fakeKeys?: number\n}\n\nexport const Keyboard = (props: KeyboardProps) => (\n    <Container>\n        {getKeysForWord(props.word, props.fakeKeys).map((row, i) => (\n            <Row key={i}>\n                {row.map(k => (\n                    <Key\n                        key={k.key}\n                        symbol={k.key}\n                        visible={k.visible}\n                        onClick={() => {\n                            if (k.visible) {\n                                props.onPress(k.key)\n                            }\n                        }}\n                    />\n                ))}\n            </Row>\n        ))}\n    </Container>\n)\n\nconst Container = styled.div`\n    padding: 0 0 50px;\n    background: ${white};\n    box-shadow: ${barShadow};\n`\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 10px 5px 0;\n`\n\nexport const vibrateOk = () => navigator.vibrate(1)\nexport const vibrateBad = () => navigator.vibrate([1, 100, 1, 100, 1])\n","import { useEffect, useState } from 'react'\n\nexport const useElementSize = (el: HTMLElement | null = document.body) => {\n    const [size, setSize] = useState(() => getSize(el))\n\n    useEffect(() => {\n        const handleResize = () => {\n            setSize(getSize(el))\n        }\n\n        window.addEventListener('resize', handleResize)\n        return () => window.removeEventListener('resize', handleResize)\n    }, [el])\n\n    return size\n}\n\nconst getSize = (el: HTMLElement | null) => {\n    if (!el) {\n        return { width: 0, height: 0 }\n    }\n    const { width, height } = el.getBoundingClientRect()\n    return { width, height }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { animated, useSpring } from 'react-spring'\nimport { purple } from '../../styles/colors'\n\nexport const Pointer = () => {\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-0.3em) scaleX(3)',\n        },\n    })\n    return <PipeContainer style={pipeSpring} />\n}\n\nconst PipeContainer = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 -0.05em;\n    vertical-align: middle;\n    background-color: ${purple};\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useElementSize } from '../../hooks/useElementSize'\nimport { black, black3, black1 } from '../../styles/colors'\nimport { Pointer } from './Pointer'\n\ntype TypewriterProps = {\n    word: string\n    progress: number\n}\n\nexport const Typewriter = ({ word, progress }: TypewriterProps) => {\n    const { width } = useElementSize()\n    const [preview, setPreview] = useState(false)\n\n    const typed = word.substr(0, progress)\n    const fontSize = Math.min(width / word.length, 80)\n\n    return (\n        <Container\n            onPointerDown={() => setPreview(true)}\n            onPointerOut={() => setPreview(false)}\n            style={{ fontSize }}\n        >\n            <TypeWrapper>\n                {word.split('').map((w, i) => {\n                    return (\n                        <Segment key={w + i}>\n                            {i === progress && <Pointer key={typed} />}\n                            <Letter hide={progress <= i && !preview}>{w}</Letter>\n                        </Segment>\n                    )\n                })}\n            </TypeWrapper>\n            <Hint>Touch to preview</Hint>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n    padding: 0;\n    overflow: hidden;\n    height: 100%;\n`\n\nconst TypeWrapper = styled.div`\n    white-space: nowrap;\n    position: relative;\n    width: 100%;\n`\n\nconst Segment = styled.span`\n    display: inline-block;\n    line-height: 1em;\n    height: 1em;\n    margin: 0;\n    vertical-align: middle;\n    position: relative;\n`\n\nconst Letter = styled.span<{ hide: boolean }>`\n    display: inline-block;\n    text-align: center;\n    position: relative;\n    margin: 0 0.025em;\n    height: 100%;\n    min-width: 0.6em;\n    transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n    transform: ${props => (props.hide ? 'scale(0.5)' : 'scale(1)')};\n    color: ${props => (props.hide ? 'rgba(0,0,0,0.0)' : black)};\n    font-family: 'Ubuntu Mono', monospace;\n\n    &::after {\n        content: '*';\n        position: absolute;\n        text-align: center;\n        top: 0.8em;\n        left: 0;\n        right: 0;\n        line-height: 0.5em;\n        height: 1em;\n        transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n        color: ${black3};\n        transform: ${props => (props.hide ? 'scale(2)' : 'scale(0)')};\n        opacity: ${props => (props.hide ? 1 : 0)};\n    }\n`\n\nconst Hint = styled.small`\n    font-size: 11px;\n    color: ${black1};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { purple } from '../../styles/colors'\n\nexport const Loading = () => (\n    <Container>\n        <svg\n            version=\"1.1\"\n            id=\"loader-1\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"40px\"\n            height=\"40px\"\n            viewBox=\"0 0 50 50\"\n        >\n            <path\n                fill={purple}\n                d=\"M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z\"\n            >\n                <animateTransform\n                    attributeType=\"xml\"\n                    attributeName=\"transform\"\n                    type=\"rotate\"\n                    from=\"0 25 25\"\n                    to=\"360 25 25\"\n                    dur=\"0.6s\"\n                    repeatCount=\"indefinite\"\n                />\n            </path>\n        </svg>\n    </Container>\n)\n\nconst Container = styled.div`\n    display: inline-block;\n    padding: 10px;\n`\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Loading } from './Loading'\n\nexport const FullLoading: FC = () => {\n    return (\n        <Container>\n            <Loading />\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n","import { useEffect, useState } from 'react'\nimport { useWords } from '../../store'\nimport { Word } from '../../store/state/types/State'\n\nconst emptyWord: Word = {\n    id: '',\n    name: '',\n    translation: [],\n    example: [],\n}\n\nexport const useGame = () => {\n    const { words, randomWord } = useWords()\n    const [progress, setProgress] = useState(0)\n    const [word, setWord] = useState(emptyWord)\n\n    useEffect(() => {\n        const newWord = randomWord()\n        if (newWord) setWord(newWord)\n    }, [words])\n\n    const wordRight = word.name.substr(progress)\n    const isComplete = progress === word.name.length\n\n    const keyPress = (key: string) => {\n        const currentWord = word.name[progress].toLocaleLowerCase()\n        if (key === currentWord) {\n            setProgress(progress + 1)\n        }\n    }\n\n    const nextWord = () => {\n        setWord(randomWord())\n        setProgress(0)\n    }\n\n    const retry = () => {\n        setProgress(0)\n    }\n\n    return { word, progress, wordRight, nextWord, retry, keyPress, isComplete }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { purple } from '../../styles/colors'\n\ntype ExampleSentenceProps = {\n    sentence: string\n    hiddenWord: string\n    showWord?: boolean\n}\n\nexport const ExampleSentence = ({\n    sentence,\n    hiddenWord,\n    showWord,\n}: ExampleSentenceProps) => {\n    const words = splitWords(sentence).map(word => ({\n        word,\n        isHidden: matchWord(word, hiddenWord),\n    }))\n\n    return (\n        <Container>\n            {words.map(({ word, isHidden }, index) => (\n                <span key={word + index}>\n                    {isHidden ? (\n                        <HiddenWord>\n                            {showWord ? word : '*'.repeat(word.length)}\n                        </HiddenWord>\n                    ) : (\n                        <span>{word}</span>\n                    )}\n                    {index !== words.length - 1 && ' '}\n                </span>\n            ))}\n        </Container>\n    )\n}\n\nconst splitWords = (sentence: string) => sentence.split(/\\s+/)\n\nconst matchWord = (word: string, hiddenWord: string) => {\n    const lowerWord = word.toLocaleLowerCase()\n    const lowerHiddenWord = hiddenWord.toLocaleLowerCase().slice(0, -1)\n    return lowerWord.startsWith(lowerHiddenWord)\n}\n\nconst Container = styled.p`\n    &:before {\n        content: '“';\n    }\n    &:after {\n        content: '”';\n    }\n`\n\nconst HiddenWord = styled.span`\n    color: ${purple};\n`\n","import React from 'react'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\nimport styled from 'styled-components'\nimport { Icon } from '../../components/Icon'\nimport { Keyboard } from '../../components/Keyboard'\nimport { Typewriter } from '../../components/Typewriter'\nimport { useRouter } from '../../store'\nimport { goodColor, black6, white, black1 } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\nimport { transition } from '../../styles/transitions'\nimport { radius } from '../../styles/values'\nimport { FullLoading } from '../../components/Loading'\nimport { useGame } from './useGame'\nimport { ExampleSentence } from '../../components/Typewriter/ExampleSentence'\n\nexport const GameScreen = () => {\n    const { goBack } = useRouter()\n    const { word, wordRight, progress, nextWord, retry, keyPress, isComplete } = useGame()\n\n    if (!word.name) return <FullLoading />\n\n    return (\n        <Container>\n            <Row>\n                <div>\n                    <h1>{word.translation.join(', ')}</h1>\n                    {word.example.map((sentence, index) => (\n                        <ExampleSentence\n                            key={index}\n                            sentence={sentence}\n                            hiddenWord={word.name}\n                            showWord={isComplete}\n                        />\n                    ))}\n                </div>\n            </Row>\n            <Row>\n                <Typewriter word={word.name} progress={progress} key={word.name} />\n            </Row>\n            <ActionButtonsWrapper>\n                <ActionButton onClick={goBack}>\n                    <Icon name=\"Cross\" /> <span>End</span>\n                </ActionButton>\n                <ActionButton onClick={retry}>\n                    <Icon name=\"Reload\" /> <span>Retry</span>\n                </ActionButton>\n                <ActionButton onClick={nextWord}>\n                    <Icon name=\"Play\" /> <span>Skip</span>\n                </ActionButton>\n            </ActionButtonsWrapper>\n            <Bottom>\n                <Keyboard word={wordRight} onPress={keyPress} />\n                {isComplete && (\n                    <Complete>\n                        <h2>Done!</h2>\n                        <DoneButton onClick={nextWord}>\n                            Next word\n                            <Icon name=\"Play\" />\n                        </DoneButton>\n\n                        <KeyHandler\n                            keyEventName={KEYPRESS}\n                            keyValue=\"Enter\"\n                            onKeyHandle={nextWord}\n                        />\n                    </Complete>\n                )}\n            </Bottom>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    height: 100%;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    text-align: center;\n    overflow: hidden;\n    user-select: none;\n`\n\nconst Row = styled.div`\n    width: 100%;\n    flex: 1 0 auto;\n`\n\nconst Bottom = styled.div`\n    width: 100%;\n    position: relative;\n`\n\nconst Complete = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nconst DoneButton = styled.button`\n    padding: 30px 50px;\n    border: none;\n    color: ${white};\n    background: ${goodColor};\n    border-radius: 4px;\n    box-shadow: ${floatingShadow};\n    font-weight: bold;\n    font-size: 24px;\n`\n\nconst ActionButtonsWrapper = styled.div`\n    display: grid;\n    grid-auto-columns: 1fr;\n    grid-auto-flow: column;\n    grid-gap: 10px;\n`\n\nconst ActionButton = styled.button`\n    padding: 25px 40px;\n    color: ${black6};\n    font-size: 1em;\n    background: none;\n    border: none;\n    border-radius: ${radius};\n    ${transition('background-color')};\n\n    span {\n        vertical-align: middle;\n    }\n\n    &:active {\n        background-color: ${black1};\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useSpring, animated } from 'react-spring'\nimport { purple } from '../../styles/colors'\n\nexport const Logo = () => {\n    const reSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 200,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const wordSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 300,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-1.2em) scaleX(5)',\n        },\n    })\n\n    return (\n        <Container>\n            <First style={reSpring}>Re</First>\n            <Pipe style={pipeSpring} />\n            <Last style={wordSpring}>word</Last>\n        </Container>\n    )\n}\n\nconst Container = styled.h1`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n`\n\nconst First = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Last = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Pipe = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 0.05em;\n    vertical-align: middle;\n    background-color: ${purple};\n`\n","import {\n    ENTERING,\n    EXITED,\n    EXITING,\n    TransitionStatus,\n} from 'react-transition-group/Transition'\nimport { css, keyframes } from 'styled-components'\n\nexport const fadeDuration = 400\nexport const easing = 'cubic-bezier(0.29, 0.87, 0.54, 0.99)'\n\nconst fadeUpKeyframes = keyframes`\n    from {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n    to {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n`\n\nconst fadeDownKeyframes = keyframes`\n    from {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n    to {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n`\n\nconst fadeInKeyframes = keyframes`\n    from { opacity: 0; }\n    to { opacity: 1; }\n`\n\nconst fadeOutKeyframes = keyframes`\n    from { opacity: 1; }\n    to { opacity: 0; }\n`\n\nexport const fadeUpAnimation = css`\n    animation: ${fadeUpKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeDownAnimation = css`\n    animation: ${fadeDownKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeUpDownAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeUpAnimation};\n    ${status === EXITING && fadeDownAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'pointer-events: none; opacity: 0;'};\n`\n\nexport const fadeInAnimation = css`\n    animation: ${fadeInKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeOutAnimation = css`\n    animation: ${fadeOutKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nconst scaleInframes = keyframes`\n    from { opacity: 0; transform: scale(0.8) }\n    to { opacity: 1; transform: scale(1) }\n`\nconst scaleOutframes = keyframes`\n    from { opacity: 1; transform: scale(1) }\n    to { opacity: 0; transform: scale(0.8) }\n`\n\nexport const scaleInAnimation = css`\n    animation: ${scaleInframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const scaleOutAnimation = css`\n    animation: ${scaleOutframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeInOutAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeInAnimation};\n    ${status === EXITING && fadeOutAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'pointer-events: none; opacity: 0;'};\n`\n","import React from 'react'\nimport { WordsState } from '../../store/state/types/State'\nimport { useRouter } from '../../store'\nimport { RouteName } from '../../store/types/RouteName'\nimport { Icon } from '../../components/Icon'\nimport { white, purple } from '../../styles/colors'\nimport styled from 'styled-components'\nimport { floatingShadow } from '../../styles/shadow'\nimport { scaleInAnimation } from '../../styles/animations'\n\ntype StartButtonProps = {\n    words: WordsState\n}\n\nexport const StartButton = (props: StartButtonProps) => {\n    const { setRoute } = useRouter()\n\n    if (!props.words && !props.words.length) {\n        return (\n            <CircleButton onClick={() => setRoute(RouteName.Words)}>\n                <Icon name=\"Plus\" size=\"large\" block />\n                Word\n            </CircleButton>\n        )\n    }\n\n    return (\n        <CircleButton onClick={() => setRoute(RouteName.Game)}>\n            <Icon name=\"Play\" size=\"large\" block />\n            Play\n        </CircleButton>\n    )\n}\n\nconst playSize = '45vmin'\n\nconst CircleButton = styled.button`\n    ${scaleInAnimation}\n    background: ${white};\n    border: none;\n    box-shadow: ${floatingShadow};\n    width: ${playSize};\n    height: ${playSize};\n    max-width: 260px;\n    max-height: 260px;\n    border-radius: 100%;\n    color: ${purple};\n    font-size: 36px;\n`\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { purple, black3 } from '../../styles/colors'\n\ntype InputProps = {\n    value: string\n    type?: string\n    name?: string\n    placeholder: string\n    onChange: (value: string) => void\n    autoFocus?: boolean\n}\n\nexport const Input = (props: InputProps) => {\n    const { value, type = 'text', placeholder, onChange, autoFocus, name } = props\n\n    const [focus, setFocus] = useState(false)\n    const [linePosition, setLinePosition] = useState(0)\n\n    const labelRef = useRef<HTMLLabelElement>(null)\n\n    const defaultLinePosition = labelRef.current\n        ? labelRef.current.getBoundingClientRect().width / 2\n        : 0\n\n    useEffect(() => {\n        setLinePosition(defaultLinePosition)\n    }, [defaultLinePosition])\n\n    return (\n        <Label\n            active={focus}\n            onMouseDown={e => {\n                setLinePosition(e.pageX)\n            }}\n            ref={labelRef}\n        >\n            <LabelName move={value !== ''}>{placeholder}</LabelName>\n            <InputStyled\n                type={type}\n                value={value}\n                onChange={event => onChange(event.target.value)}\n                onFocus={() => setFocus(true)}\n                onBlur={() => {\n                    setLinePosition(defaultLinePosition)\n                    setFocus(false)\n                }}\n                autoFocus={autoFocus}\n                name={name}\n            />\n            <span style={{ transformOrigin: `${linePosition}px 0` }} />\n        </Label>\n    )\n}\n\nconst Label = styled.label<{ active: boolean }>`\n    position: relative;\n    display: block;\n    span {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: 2px;\n        opacity: 1;\n        transition: transform 0.25s ease-out;\n        transform: scaleX(${props => (props.active ? 1 : 0)});\n        background: ${purple};\n        pointer-events: none;\n    }\n`\n\nconst LabelName = styled.div<{ move: boolean }>`\n    position: absolute;\n    top: 9px;\n    left: 0px;\n    font-size: 15px;\n    transition: transform 0.15s ease-out;\n    color: ${black3};\n    cursor: text;\n    transform-origin: 0 0; // top left for scale\n    transform: ${props =>\n        props.move ? `translateY(-17px) scale(0.8)` : `translate(0px)`};\n`\n\nconst InputStyled = styled.input`\n    padding: 12px 0 9px;\n    border: none;\n    font-size: 15px;\n    display: block;\n    width: 100%;\n    margin: 15px 0;\n    border-bottom: 2px solid ${black3};\n`\n","import React, {\n    Children,\n    DependencyList,\n    ReactElement,\n    RefObject,\n    useEffect,\n    useRef,\n    useState,\n} from 'react'\nimport styled, { css, keyframes } from 'styled-components'\nimport { TabsItemProps } from '.'\nimport { black, purple } from '../../styles/colors'\nimport { fast, transition } from '../../styles/transitions'\n\ntype TabsProps = {\n    children: ReactElement<TabsItemProps>[] | ReactElement<TabsItemProps>\n}\n\nexport const Tabs = (props: TabsProps) => {\n    const items = Children.toArray<ReactElement<TabsItemProps>>(props.children)\n\n    const currentIndex = items.findIndex(el => el.props.isActive)\n    const [active, setActive] = useState(currentIndex > 0 ? currentIndex : 0)\n    const [prevActive, setPrevActive] = useState<number | null>(null)\n\n    const refNav = useRef(null)\n    const refActive = useRef(null)\n\n    const pos = useLinePosition(refNav, refActive, [active])\n\n    const activeItem = items[active]\n    const prevActiveItem = items[prevActive]\n\n    return (\n        <Container>\n            <Nav ref={refNav}>\n                {items.map((el, index) => (\n                    <NavItem\n                        ref={index === active ? refActive : null}\n                        key={index}\n                        onClick={() => {\n                            if (active === index) return\n                            setPrevActive(active)\n                            setActive(index)\n                        }}\n                        active={index === active}\n                    >\n                        {el.props.name}\n                    </NavItem>\n                ))}\n                <Line\n                    style={{ transform: `translateX(${pos.left}px)`, width: pos.width }}\n                />\n            </Nav>\n            <Content>\n                {prevActiveItem && (\n                    <ContentItem\n                        animation={prevActive > active ? 'rightOut' : 'leftOut'}\n                        key={prevActiveItem.props.name}\n                    >\n                        <prevActiveItem.type {...prevActiveItem.props} />\n                    </ContentItem>\n                )}\n                <ContentItem\n                    animation={\n                        prevActiveItem && (prevActive < active ? 'rightIn' : 'leftIn')\n                    }\n                    key={activeItem.props.name}\n                >\n                    <activeItem.type {...activeItem.props} />\n                </ContentItem>\n            </Content>\n        </Container>\n    )\n}\n\nconst Container = styled.div``\nconst Nav = styled.div`\n    position: relative;\n    display: grid;\n    grid-auto-columns: 1fr;\n    grid-auto-flow: column;\n`\nconst Content = styled.div`\n    position: relative;\n    overflow: hidden;\n`\n\nconst rightOut = keyframes`\n  from {\n    transform: translateX(0%);\n  }\n\n  to {\n    transform: translateX(100%);\n  }\n`\nconst rightIn = keyframes`\n  from {\n    transform: translateX(100%);\n  }\n\n  to {\n    transform: translateX(0%);\n  }\n`\nconst leftOut = keyframes`\n  from {\n    transform: translateX(0%);\n  }\n\n  to {\n    transform: translateX(-100%);\n  }\n`\nconst leftIn = keyframes`\n  from {\n    transform: translateX(-100%);\n  }\n\n  to {\n    transform: translateX(0%);\n  }\n`\n\nconst animations = {\n    rightOut,\n    rightIn,\n    leftOut,\n    leftIn,\n}\n\nconst ContentItem = styled.div<{ animation?: string }>`\n    position: relative;\n    display: block;\n    top: 0;\n    left: 0;\n    width: 100%;\n    ${props =>\n        props.animation &&\n        props.animation.endsWith('Out') &&\n        css`\n            position: absolute;\n        `}\n    ${props =>\n        props.animation &&\n        css`\n            animation: ${animations[props.animation]} ${fast} forwards;\n        `}\n`\n\nconst Line = styled.div`\n    height: 2px;\n    ${transition('transform', 'width')}\n    position: absolute;\n    top: 100%;\n    z-index: 10;\n    background: ${purple};\n`\n\nconst NavItem = styled.button<{ active: boolean }>`\n    display: block;\n    padding: 15px 10px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: ${p => (p.active ? purple : black)};\n`\n\nconst useLinePosition = (\n    wrapperEl: RefObject<HTMLElement>,\n    activeEl: RefObject<HTMLElement>,\n    deps: DependencyList\n) => {\n    const [left, setLeft] = useState(0)\n    const [width, setWidth] = useState(0)\n    // const { innerWidth } = useWindowSize();\n\n    useEffect(() => {\n        if (!activeEl.current || !wrapperEl.current) {\n            return\n        }\n        const activeRect = activeEl.current.getBoundingClientRect()\n        const wrapperRect = wrapperEl.current.getBoundingClientRect()\n\n        setLeft(activeRect.left - wrapperRect.left)\n        setWidth(activeRect.width)\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [...deps, activeEl, wrapperEl])\n    // [...deps, innerWidth]\n    return { left, width }\n}\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nexport type TabsItemProps = {\n    name: string\n    isActive?: boolean\n    children: ReactNode\n}\n\nexport const TabsItem = (props: TabsItemProps) => <Container>{props.children}</Container>\n\nconst Container = styled.div``\n","import { firebaseApp } from './firebase'\nimport { dispatch } from './state/store'\nimport { useEffect, useState } from 'react'\nimport { useRouter } from './useRouter'\nimport { RouteName } from './types/RouteName'\n\nexport const useAuthActions = () => {\n    const { setRoute } = useRouter()\n    const [signInError, setSignInError] = useState('')\n    const [createAccountError, setCreateAccountError] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    const createAccount = async (email: string, password: string) => {\n        setLoading(true)\n        try {\n            await firebaseApp.auth().createUserWithEmailAndPassword(email, password)\n        } catch (e) {\n            setCreateAccountError(e.message)\n        }\n        setLoading(false)\n    }\n\n    const signIn = async (email: string, password: string) => {\n        setLoading(true)\n        try {\n            await firebaseApp.auth().signInWithEmailAndPassword(email, password)\n        } catch (e) {\n            if (e.code === 'auth/user-not-found') {\n                setSignInError('User not found')\n            } else {\n                setSignInError(e.message)\n            }\n        }\n        setLoading(false)\n    }\n\n    const signOut = async () => {\n        setLoading(true)\n        await firebaseApp.auth().signOut()\n        setRoute(RouteName.Home)\n        setLoading(false)\n    }\n\n    return { signIn, signOut, createAccount, signInError, createAccountError, loading }\n}\n\nexport const useWatchAuthChange = () => {\n    useEffect(() => {\n        firebaseApp.auth().onAuthStateChanged(user => {\n            dispatch({\n                type: 'USER/CHANGE',\n                payload: user\n                    ? { email: user.email, id: user.uid, name: user.displayName }\n                    : null,\n            })\n        })\n    }, [])\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Input } from '../../components/Input'\nimport { Tabs, TabsItem } from '../../components/Tabs'\nimport { useAuthActions } from '../../store/useAuth'\nimport { purple, white, dangerColor } from '../../styles/colors'\nimport { FullLoading, Loading } from '../../components/Loading'\n\nexport const AuthForm = () => {\n    const {\n        signIn,\n        signInError,\n        createAccount,\n        createAccountError,\n        loading,\n    } = useAuthActions()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    return (\n        <Container>\n            <Tabs>\n                <TabsItem name=\"Sign in\">\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault()\n                            signIn(email, password)\n                        }}\n                    >\n                        <ContentWrapper>\n                            <h2>I already have an account</h2>\n                            <ErrorMessage>{signInError}</ErrorMessage>\n                            <Input\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                placeholder=\"email\"\n                            />\n                            <Input\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                placeholder=\"password\"\n                            />\n                        </ContentWrapper>\n                        <FullButton>Sign in</FullButton>\n                    </form>\n                </TabsItem>\n                <TabsItem name=\"Sing up\">\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault()\n                            createAccount(email, password)\n                        }}\n                    >\n                        <ContentWrapper>\n                            <h2>Create an account</h2>\n                            <ErrorMessage>{createAccountError}</ErrorMessage>\n                            <Input\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                placeholder=\"email\"\n                            />\n                            <Input\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                placeholder=\"password\"\n                            />\n                        </ContentWrapper>\n                        <FullButton>Sign up</FullButton>\n                    </form>\n                </TabsItem>\n            </Tabs>\n            {loading && (\n                <Overlay>\n                    <Loading />\n                </Overlay>\n            )}\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    position: relative;\n`\n\nconst Overlay = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(255, 255, 255, 0.8);\n    z-index: 10;\n`\n\nconst ContentWrapper = styled.div`\n    padding: 40px 30px;\n`\n\nconst FullButton = styled.button`\n    display: block;\n    width: 100%;\n    text-align: center;\n    color: ${white};\n    font-weight: bold;\n    padding: 18px 0;\n    border: none;\n    background: ${purple};\n`\n\nconst ErrorMessage = styled.div`\n    color: ${dangerColor};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Logo } from '../../components/Logo'\nimport { useWords } from '../../store'\nimport { useIsLoading } from '../../store/useIsLoading'\nimport { StartButton } from './StartButton'\nimport { FullLoading } from '../../components/Loading'\nimport { AuthForm } from './AuthForm'\nimport { white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\nimport { fadeInAnimation } from '../../styles/animations'\nimport { navHeight } from '../../styles/values'\n\nexport const HomeScreen = () => {\n    const { isLoading, loggedIn } = useIsLoading()\n    const { words } = useWords()\n\n    if (isLoading) {\n        return <FullLoading />\n    }\n\n    return (\n        <Container>\n            <Logo />\n            {loggedIn ? (\n                <>\n                    <Container>\n                        <StartButton words={words} />\n                    </Container>\n                    <WordsCount>\n                        You added <b>{words.length}</b> words\n                    </WordsCount>\n                </>\n            ) : (\n                <AuthFormWrapper>\n                    <AuthForm />\n                </AuthFormWrapper>\n            )}\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: grid;\n    height: 100%;\n    grid-auto-rows: 1fr 3fr 1fr;\n    align-items: center;\n    justify-items: center;\n    padding-bottom: ${navHeight};\n`\n\nconst WordsCount = styled.div`\n    padding: 25px;\n    text-align: center;\n    ${fadeInAnimation}\n`\n\nconst AuthFormWrapper = styled.main`\n    background: ${white};\n    box-shadow: ${floatingShadow};\n    border-radius: 5px;\n    width: 100%;\n    max-width: 360px;\n    overflow: hidden;\n`\n","import styled, { css } from 'styled-components'\nimport { black, purple, white } from '../../styles/colors'\nimport { now, slow } from '../../styles/transitions'\n\nexport const Button = styled.button<{ size?: string; color?: string }>`\n    display: inline-block;\n    padding: 10px 25px;\n    transition: opacity ${slow};\n    font-size: ${p => (p.size && p.size == '20px' ? '20px' : '14px')};\n\n    ${p => {\n        if (p.color == 'transparent') {\n            return css`\n                border: 2px solid transparent;\n                color: ${black};\n                background: transparent;\n            `\n        } else if (p.color == 'primary') {\n            return css`\n                border: 2px solid ${purple};\n                color: ${white};\n                background: ${purple};\n            `\n        } else {\n            return css`\n                border: 2px solid ${purple};\n                color: ${black};\n                background: transparent;\n            `\n        }\n    }};\n    border-radius: 5px;\n    &:active {\n        opacity: 0.8;\n        transition: opacity ${now};\n    }\n`\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { IconName, Icon } from '../Icon'\nimport { grayBg } from '../../styles/colors'\n\ntype HeaderProps = {\n    title: string\n    iconName: IconName\n    children?: ReactNode\n}\n\nexport const Header = (props: HeaderProps) => {\n    return (\n        <HeaderWrapper>\n            <Icon name={props.iconName} size=\"large\" />\n            <h1>{props.title}</h1>\n            {props.children}\n        </HeaderWrapper>\n    )\n}\n\nconst HeaderWrapper = styled.header`\n    background: ${grayBg};\n    display: flex;\n    min-height: 260px;\n    padding: 15px;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../components/Button'\nimport { Header } from '../../components/Header'\nimport { FullLoading } from '../../components/Loading'\nimport { useGlobalState } from '../../store/state/store'\nimport { useAuthActions } from '../../store/useAuth'\nimport { navHeight } from '../../styles/values'\n\nexport const SettingsScreen = () => {\n    const { signOut } = useAuthActions()\n    const [user] = useGlobalState('user')\n\n    if (!user) {\n        return <FullLoading />\n    }\n\n    return (\n        <Container>\n            <Header title=\"Profile\" iconName=\"Profile\" />\n            <Center>\n                Logged as <strong>{user.email}</strong>\n            </Center>\n            <Center>\n                <Button type=\"button\" onClick={() => signOut()}>\n                    Sign out\n                </Button>\n            </Center>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    padding-bottom: ${navHeight};\n`\n\nconst Center = styled.div`\n    text-align: center;\n    padding: 20px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { purple, white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\nimport { navHeight } from '../../styles/values'\nimport { Icon, IconName } from '../Icon'\n\ntype FloatingButtonProps = {\n    onClick: () => void\n    iconName: IconName\n}\n\nexport const FloatingButton = (props: FloatingButtonProps) => (\n    <Button onClick={props.onClick}>\n        <Icon name={props.iconName} size=\"big\" />\n    </Button>\n)\n\nconst Button = styled.button`\n    position: sticky;\n    display: block;\n    padding: 13px;\n    border: 2px solid ${white};\n    color: ${purple};\n    box-shadow: ${floatingShadow};\n    border-radius: 50%;\n    background: ${white};\n    transition: 0.2s;\n    margin: 15px 15px 17px auto;\n    bottom: calc(17px + ${navHeight});\n    &:active {\n        border-color: ${purple};\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { barShadow } from '../../styles/shadow'\nimport { Icon } from '../Icon'\n\ntype SearchProps = {\n    value: string\n    onChange: (value: string) => void\n}\n\nexport const Search = (props: SearchProps) => (\n    <SearchBox>\n        <Input\n            type=\"text\"\n            value={props.value}\n            onChange={e => props.onChange(e.target.value)}\n            placeholder=\"Search…\"\n        />\n        <IconPos onClick={() => props.onChange('')}>\n            {props.value ? (\n                <Icon name=\"Cross\" size=\"normal\" />\n            ) : (\n                <Icon name=\"Search\" size=\"normal\" />\n            )}\n        </IconPos>\n    </SearchBox>\n)\n\nconst SearchBox = styled.div`\n    position: relative;\n    margin-top: 15px;\n`\n\nconst Input = styled.input`\n    padding: 13px 20px;\n    width: 100%;\n    max-width: 290px;\n    border-radius: 20px;\n    border: 1px solid #fff;\n    box-shadow: ${barShadow};\n`\n\nconst IconPos = styled.div`\n    position: absolute;\n    top: 0;\n    right: 15px;\n    bottom: 0;\n    margin: auto 0;\n    height: 24px;\n    line-height: 0;\n`\n","import React, { ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport Transition, { TransitionStatus } from 'react-transition-group/Transition'\nimport styled from 'styled-components'\nimport { fadeInOutAnimation, fadeUpDownAnimation } from '../../styles/animations'\nimport { white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\n\ntype ModalProps = {\n    show: boolean\n    children?: ReactNode\n    onOverlayClick?: () => void\n}\n\nexport const Modal = (props: ModalProps) => {\n    return ReactDOM.createPortal(\n        <Transition in={props.show} timeout={1000}>\n            {status => (\n                <>\n                    <ModalBox status={status}>{props.children}</ModalBox>\n                    <Overlay status={status} onClick={props.onOverlayClick} />\n                </>\n            )}\n        </Transition>,\n        modalRoot\n    )\n}\n\nconst modalRoot = document.getElementById('modals')\n\nconst ModalBox = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    left: 0;\n    max-width: 750px;\n    right: 0;\n    display: block;\n    bottom: 15px;\n    margin: 0 auto auto;\n    width: calc(100vw - 20px);\n    max-height: calc(100vh - 20px);\n    overflow-y: auto;\n    background: ${white};\n    border-radius: 4px;\n    z-index: 1000;\n    padding: 15px;\n    box-shadow: ${floatingShadow};\n    ${p => fadeUpDownAnimation(p.status)};\n`\n\nconst Overlay = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.1);\n    z-index: 100;\n    ${p => fadeInOutAnimation(p.status)};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport { purple, white } from '../../styles/colors'\nimport { Icon } from '../Icon'\n\ntype EditableListProps = {\n    list: string[]\n    onChange: (list: string[]) => void\n}\nexport const EditableList = (props: EditableListProps) => (\n    <DragDropContext\n        onDragEnd={result => {\n            if (!result.destination) return\n\n            const items = reorder(\n                props.list,\n                result.source.index,\n                result.destination.index\n            )\n            props.onChange(items)\n        }}\n    >\n        <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n                <List {...provided.droppableProps} ref={provided.innerRef}>\n                    {props.list.map((item, index) => (\n                        <Draggable key={item} draggableId={item} index={index}>\n                            {(provided, snapshot) => (\n                                <ListElement\n                                    key={index}\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={provided.draggableProps.style}\n                                >\n                                    {item}\n                                    <Cross\n                                        onClick={() => {\n                                            props.onChange(remove(props.list, index))\n                                        }}\n                                    >\n                                        <Icon name=\"Cross\" size=\"normal\" />\n                                    </Cross>\n                                </ListElement>\n                            )}\n                        </Draggable>\n                    ))}\n                    {provided.placeholder}\n                </List>\n            )}\n        </Droppable>\n    </DragDropContext>\n)\n\nconst remove = (list: string[], index: number) => list.filter((el, i) => index !== i)\n\nconst reorder = (list: string[], startIndex: number, endIndex: number) => {\n    const result = Array.from(list)\n    const [removed] = result.splice(startIndex, 1)\n    result.splice(endIndex, 0, removed)\n\n    return result\n}\n\nconst List = styled.div``\nconst ListElement = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n`\nconst Cross = styled.button`\n    border: none;\n    padding: 4px;\n    width: 32px;\n    color: ${purple};\n    background: none;\n`\n","import { DictionaryItem } from './types'\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('')\nconst cache = {}\n\nexport const fetchDictionary = async (\n    letter: string\n): Promise<DictionaryItem[] | null> => {\n    if (!alphabet.includes(letter)) {\n        return null\n    }\n\n    if (cache[letter]) {\n        return cache[letter]\n    }\n\n    const res = await fetch(`/dictionary/en-pl/${letter}.json`)\n    const data: DictionaryItem[] = await res.json()\n\n    cache[letter] = data\n\n    return data\n}\n","import { useState, useMemo } from 'react'\nimport { useDebounce } from '../useDebounce'\nimport { fetchDictionary } from './fetchDictionary'\nimport { DictionaryItem } from './types'\n\nexport const useDictionary = (query: string) => {\n    const [currentQuery, setCurrentQuery] = useState('')\n\n    const [results, setResults] = useState<DictionaryItem[]>([])\n\n    useDebounce(() => setCurrentQuery(query.toLowerCase()), 400, [query])\n\n    useMemo(() => {\n        const letter = (currentQuery[0] || '').toLowerCase()\n\n        const run = async () => {\n            const list = await fetchDictionary(letter)\n\n            if (!list) {\n                setResults([])\n                return\n            }\n\n            const results = list\n                .filter(item => item.word.toLowerCase().startsWith(currentQuery))\n                .slice(0, 5)\n\n            setResults(results)\n        }\n\n        run()\n    }, [currentQuery])\n\n    return { results }\n}\n","import { useEffect } from 'react'\n\nexport const useDebounce = (fn: () => any, ms: number = 0, args: any[] = []) => {\n    useEffect(() => {\n        const handle = setTimeout(fn.bind(null, args), ms)\n\n        return () => {\n            clearTimeout(handle)\n        }\n    }, [args, fn, ms])\n}\n","import React, { useState } from 'react'\nimport useList from 'react-use/lib/useList'\nimport styled, { keyframes, css } from 'styled-components'\nimport { Button } from '../../components/Button'\nimport { EditableList } from '../../components/EditableList'\nimport { Input } from '../../components/Input'\nimport { useDictionary } from '../../hooks/useDictionary'\nimport { DictionaryTrans } from '../../hooks/useDictionary/types'\nimport { UnSavedWord } from '../../store/state/types/State'\nimport { black1, white, black05, purple } from '../../styles/colors'\nimport { useWords } from '../../store'\nimport { floatingShadow } from '../../styles/shadow'\nimport { fadeDuration, easing } from '../../styles/animations'\nimport { fast } from '../../styles/transitions'\n\ntype WordFormProps = {\n    onDismiss: () => void\n}\n\nexport const WordForm = (props: WordFormProps) => {\n    const { addWord } = useWords()\n\n    const [wordInput, setWordInput] = useState('')\n    const [translationInput, setTranslationInput] = useState('')\n    const [exampleInput, setExampleInput] = useState('')\n\n    const [translationList, translationListActions] = useList<string>()\n    const [exampleList, exampleListActions] = useList<string>()\n\n    const { results } = useDictionary(wordInput)\n\n    const addNewWord = () => {\n        if (wordInput && translationList.length) {\n            addWord({\n                name: wordInput,\n                translation: translationList,\n                example: exampleList,\n            })\n            setWordInput('')\n            setTranslationInput('')\n            setExampleInput('')\n            translationListActions.clear()\n            exampleListActions.clear()\n            props.onDismiss()\n        }\n    }\n\n    const getTrans = (trans: DictionaryTrans[]) => trans.map(t => t.texts[0]).join(', ')\n\n    return (\n        <>\n            <h4>Word</h4>\n            <div>\n                <Input value={wordInput} placeholder=\"Word\" onChange={setWordInput} />\n            </div>\n            {!translationList.length && (\n                <Autocomplete count={results.length}>\n                    {results.map(item => (\n                        <AutocompleteItem\n                            key={item.id}\n                            onClick={() => {\n                                setWordInput(item.word)\n                                const translations = item.trans.map(t => t.texts[0])\n                                translationListActions.set(translations)\n                            }}\n                        >\n                            <b>{item.word}</b> - {getTrans(item.trans)}\n                        </AutocompleteItem>\n                    ))}\n                </Autocomplete>\n            )}\n\n            <h4>Translations</h4>\n            <EditableList list={translationList} onChange={translationListActions.set} />\n            <InputWithButtonWrapper>\n                <div>\n                    <Input\n                        value={translationInput}\n                        onChange={setTranslationInput}\n                        placeholder=\"Translation\"\n                    />\n                </div>\n                <Button\n                    onClick={() => {\n                        if (!translationInput) return\n                        translationListActions.push(translationInput)\n                        setTranslationInput('')\n                    }}\n                >\n                    +\n                </Button>\n            </InputWithButtonWrapper>\n\n            <h4>Examples</h4>\n            <EditableList list={exampleList} onChange={translationListActions.set} />\n            <InputWithButtonWrapper>\n                <div>\n                    <Input\n                        value={exampleInput}\n                        onChange={setExampleInput}\n                        placeholder=\"Example\"\n                    />\n                </div>\n                <Button\n                    onClick={() => {\n                        if (!exampleInput) return\n                        exampleListActions.push(exampleInput)\n                        setExampleInput('')\n                    }}\n                >\n                    +\n                </Button>\n            </InputWithButtonWrapper>\n            <ModalActions>\n                <Button onClick={props.onDismiss} color=\"transparent\">\n                    Close\n                </Button>\n                <Button onClick={addNewWord} color=\"primary\">\n                    Save\n                </Button>\n            </ModalActions>\n        </>\n    )\n}\n\nconst Autocomplete = styled.div<{ count }>`\n    ${p =>\n        css`\n            height: ${p.count * 46}px;\n        `};\n\n    transition: height ${fadeDuration}ms ${easing};\n    background: ${black05};\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    overflow: hidden;\n`\n\nconst AutocompleteItem = styled.button`\n    border-radius: 5px;\n    transition: all ${fast};\n    display: block;\n    width: 100%;\n    padding: 15px;\n    border: none;\n    border-bottom: 1px solid ${black05};\n    background: none;\n    text-align: left;\n    font-size: 14px;\n    white-space: nowrap;\n    overflow: hidden;\n    box-shadow: 0 0 0 1px rgba(255, 255, 255, 0) inset;\n    text-emphasis: emphasis;\n\n    &:last-child {\n        border-bottom: none;\n    }\n    &:focus {\n        background: ${white};\n        box-shadow: 0 0 0 1px ${purple} inset;\n    }\n`\n\nconst InputWithButtonWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n`\n\nconst ModalActions = styled.div`\n    margin-top: 15px;\n    display: grid;\n    grid-auto-flow: column;\n    grid-auto-columns: auto;\n    grid-gap: 15px;\n    justify-content: end;\n`\n","import { UnSavedWord } from '../state/types/State'\n\ntype Preset = {\n    id: string\n    name: string\n    getList(): Promise<UnSavedWord[]>\n}\n\nexport const presets: Preset[] = [\n    {\n        id: 'basic-weekdays',\n        name: 'Weekdays',\n        getList: () =>\n            import('./base/weekdays').then(({ list }) =>\n                list.map(el => ({ ...el, preset: 'basic-weekdays' }))\n            ),\n    },\n]\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../components/Button'\nimport { presets } from '../../store/presets'\nimport { useWords } from '../../store'\n\nexport const WordPresets = () => {\n    const { addManyWords } = useWords()\n\n    return (\n        <Container>\n            <ul>\n                {presets.map(item => (\n                    <li key={item.id}>\n                        {item.name}\n                        <Button onClick={() => item.getList().then(addManyWords)}>\n                            +\n                        </Button>\n                    </li>\n                ))}\n            </ul>\n        </Container>\n    )\n}\n\nconst Container = styled.div``\n","import React from 'react'\nimport { Modal } from '../../components/Modal'\nimport { UnSavedWord } from '../../store/state/types/State'\nimport { Tabs, TabsItem } from '../../components/Tabs'\nimport { WordForm } from './WordForm'\nimport { WordPresets } from './WordPresets'\n\ntype WordModalProps = {\n    show: boolean\n    onDismiss: () => void\n}\n\nexport const WordModal = (props: WordModalProps) => {\n    return (\n        <Modal show={props.show} onOverlayClick={props.onDismiss}>\n            <Tabs>\n                <TabsItem name=\"New word\">\n                    <WordForm onDismiss={props.onDismiss} />\n                </TabsItem>\n                <TabsItem name=\"Presets\">\n                    <WordPresets />\n                </TabsItem>\n            </Tabs>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Word } from '../../store/state/types/State'\nimport { black1, purple, black6 } from '../../styles/colors'\nimport { Icon } from '../../components/Icon'\n\ntype WordsItemProps = {\n    word: Word\n    removeWord: () => void\n}\n\nexport const WordsItem = (props: WordsItemProps) => (\n    <Container>\n        <div>\n            <Name>{props.word.name} - </Name>\n            <Translations>{props.word.translation.join(', ')}</Translations>\n\n            {props.word.action && 'Loading…'}\n            {!!props.word.example.length && (\n                <Examples>{props.word.example.join(', ')}</Examples>\n            )}\n        </div>\n\n        <RemoveButton onClick={props.removeWord}>\n            <Icon name=\"Cross\" size=\"normal\" />\n        </RemoveButton>\n    </Container>\n)\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    padding: 12px;\n    border-bottom: 1px solid ${black1};\n`\n\nconst Name = styled.strong`\n    font-weight: normal;\n    font-size: 1.2em;\n`\n\nconst Translations = styled.span`\n    color: ${purple};\n    font-size: 1.2em;\n`\n\nconst Examples = styled.div`\n    color: ${black6};\n    font-size: 0.8em;\n    font-style: italic;\n`\n\nconst RemoveButton = styled.button`\n    border: none;\n    background: none;\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { FloatingButton } from '../../components/FloatingButton'\nimport { Header } from '../../components/Header'\nimport { Search } from '../../components/Search'\nimport { Space } from '../../components/Space/Space'\nimport { useWords } from '../../store'\nimport { navHeight } from '../../styles/values'\nimport { WordModal } from './WordModal'\nimport { WordsItem } from './WordsItem'\n\nexport const WordsScreen = () => {\n    const [search, setSearch] = useState('')\n\n    const { words, removeWord } = useWords()\n    const [showModal, setShowModal] = useState(false)\n\n    return (\n        <Container>\n            <Header title=\"Words\" iconName=\"Words\">\n                <Search value={search} onChange={setSearch} />\n            </Header>\n            <Space>\n                {words &&\n                    words\n                        .filter(word =>\n                            word.name\n                                .toLocaleLowerCase()\n                                .includes(search.toLocaleLowerCase())\n                        )\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .map(word => (\n                            <WordsItem\n                                key={word.id}\n                                word={word}\n                                removeWord={() => removeWord(word.id)}\n                            />\n                        ))}\n            </Space>\n            <FloatingButton onClick={() => setShowModal(!showModal)} iconName=\"Plus\" />\n            <WordModal show={showModal} onDismiss={() => setShowModal(false)} />\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    min-height: 100%;\n    display: grid;\n    grid-template-rows: auto 1fr auto;\n    padding-bottom: ${navHeight};\n`\n","import React, { ElementType } from 'react'\nimport styled from 'styled-components'\nimport { Nav } from './components/Nav'\nimport { GameScreen } from './screens/Game'\nimport { HomeScreen } from './screens/Home'\nimport { SettingsScreen } from './screens/Settings'\nimport { useRouter, useWordsPersist } from './store'\nimport { RouteName } from './store/types/RouteName'\nimport { useWatchAuthChange } from './store/useAuth'\nimport { WordsScreen } from './screens/Words'\n\nconst screens: Record<RouteName, ElementType> = {\n    [RouteName.Home]: HomeScreen,\n    [RouteName.Words]: WordsScreen,\n    [RouteName.Profile]: SettingsScreen,\n    [RouteName.Game]: GameScreen,\n}\n\nexport const App = () => {\n    useWordsPersist()\n    useWatchAuthChange()\n\n    const { route, setRoute } = useRouter()\n    const Page = screens[route]\n\n    return (\n        <>\n            <Page />\n            <NavContainer>\n                <Nav active={route} onChange={setRoute} />\n            </NavContainer>\n        </>\n    )\n}\n\nconst NavContainer = styled.div`\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    left: 0;\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import * as Sentry from '@sentry/browser'\nimport React, { Component, ErrorInfo } from 'react'\n\ntype ErrorBoundaryState = {\n    error: Error | null\n    eventId: string | null\n}\n\nexport class ErrorBoundary extends Component<{}, ErrorBoundaryState> {\n    public state = {\n        error: null,\n        eventId: null,\n    }\n\n    public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        this.setState({ error })\n\n        Sentry.withScope(scope => {\n            scope.setExtras(errorInfo)\n            this.setState({ eventId: Sentry.captureException(error) })\n        })\n    }\n\n    public render() {\n        if (this.state.error) {\n            return (\n                <div>\n                    <h1>Error occurred ;(</h1>\n                    <a onClick={this.handleReportDialog}>Report feedback</a>\n                    <pre>{JSON.stringify(this.state.error, null, 2)}</pre>\n                </div>\n            )\n        }\n\n        return this.props.children\n    }\n\n    private handleReportDialog = () => {\n        Sentry.showReportDialog({ eventId: this.state.eventId })\n    }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport * as Sentry from '@sentry/browser'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './styles/global.css'\nimport { GlobalStateProvider } from './store'\nimport { ErrorBoundary } from './components/ErrorBoundary'\n\nSentry.init({\n    dsn: 'https://adf49e52f07d479098537009eb0044b0@sentry.io/1446350',\n})\n\nrender(\n    <ErrorBoundary>\n        <GlobalStateProvider>\n            <App />\n        </GlobalStateProvider>\n    </ErrorBoundary>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { dispatch, useGlobalState } from './state/store'\nimport { useEffect, useState } from 'react'\nimport { firebaseApp } from './firebase'\nimport { Word, WordAction } from './state/types/State'\n\nexport const useWordsPersist = () => {\n    const [user] = useGlobalState('user')\n    const [localWords] = useGlobalState('words')\n\n    useEffect(() => {\n        // Waiting for user status…\n        if (user === undefined) return\n\n        // User is logged out\n        if (user === null) {\n            dispatch({ type: 'WORDS/SET', payload: [] })\n            return\n        }\n\n        // Listen on words updates\n        const unsubscribe = firebaseApp\n            .firestore()\n            .collection('users')\n            .doc(user.id)\n            .collection('words')\n            .onSnapshot(snapshot => {\n                const serverWords: Word[] = []\n\n                snapshot.forEach(doc => {\n                    const data = doc.data()\n                    serverWords.push({\n                        id: doc.id,\n                        name: data.name,\n                        translation: data.translation,\n                        example: data.example,\n                    })\n                })\n\n                dispatch({ type: 'WORDS/SET', payload: serverWords })\n            })\n\n        return unsubscribe\n    }, [user])\n\n    // This one react only when words are changed (action field in Word)\n    useEffect(() => {\n        if (!localWords) return\n\n        const wordToAdd = localWords.filter(w => w.action === WordAction.Add)\n        const wordToDelete = localWords.filter(w => w.action === WordAction.Delete)\n\n        if ((!wordToAdd && !wordToDelete) || !user) return\n\n        const wordsFirebaseRef = firebaseApp\n            .firestore()\n            .collection('users')\n            .doc(user.id)\n            .collection('words')\n\n        wordToAdd.forEach(word => {\n            const newWord: Word = { ...word }\n            // Very important one, without this we will have infinite loop :O\n            delete newWord.action\n            delete newWord.id // Also we can remove local ID\n\n            wordsFirebaseRef.add(newWord)\n        })\n\n        wordToDelete.forEach(word => {\n            wordsFirebaseRef.doc(word.id).delete()\n        })\n    }, [localWords, user])\n}\n"],"sourceRoot":""}