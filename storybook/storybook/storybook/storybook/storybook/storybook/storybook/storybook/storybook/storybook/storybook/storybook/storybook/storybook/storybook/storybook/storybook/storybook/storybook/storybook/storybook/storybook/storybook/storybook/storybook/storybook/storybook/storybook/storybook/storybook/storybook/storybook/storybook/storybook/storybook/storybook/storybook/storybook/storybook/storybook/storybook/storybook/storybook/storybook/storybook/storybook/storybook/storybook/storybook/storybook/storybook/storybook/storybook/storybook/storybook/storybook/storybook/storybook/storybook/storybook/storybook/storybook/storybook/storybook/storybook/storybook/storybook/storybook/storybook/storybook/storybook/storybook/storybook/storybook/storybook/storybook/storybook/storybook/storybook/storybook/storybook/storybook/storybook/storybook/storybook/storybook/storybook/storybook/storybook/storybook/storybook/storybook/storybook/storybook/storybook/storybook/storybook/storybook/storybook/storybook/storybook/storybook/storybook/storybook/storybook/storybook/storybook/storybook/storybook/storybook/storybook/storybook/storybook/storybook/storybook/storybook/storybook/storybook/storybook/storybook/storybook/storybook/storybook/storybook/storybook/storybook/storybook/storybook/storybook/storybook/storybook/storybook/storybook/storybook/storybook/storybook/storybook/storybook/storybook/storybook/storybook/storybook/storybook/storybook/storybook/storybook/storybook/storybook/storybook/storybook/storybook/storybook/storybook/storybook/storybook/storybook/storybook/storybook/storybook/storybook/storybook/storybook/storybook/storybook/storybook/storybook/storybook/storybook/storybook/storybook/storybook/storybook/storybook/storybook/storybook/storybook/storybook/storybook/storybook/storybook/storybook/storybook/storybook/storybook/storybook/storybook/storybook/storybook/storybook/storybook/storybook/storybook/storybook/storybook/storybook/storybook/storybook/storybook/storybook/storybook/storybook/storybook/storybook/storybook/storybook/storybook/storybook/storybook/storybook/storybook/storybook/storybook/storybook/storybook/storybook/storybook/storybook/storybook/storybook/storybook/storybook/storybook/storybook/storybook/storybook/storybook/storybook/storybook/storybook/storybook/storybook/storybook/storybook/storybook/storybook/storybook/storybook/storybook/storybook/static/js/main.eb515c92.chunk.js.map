{"version":3,"sources":["styles/colors.ts","styles/shadow.ts","components/Icon/icons/Home.tsx","components/Icon/icons/Play.tsx","components/Icon/icons/Plus.tsx","components/Icon/icons/Profile.tsx","components/Icon/icons/Words.tsx","components/Icon/icons/Search.tsx","components/Icon/icons/Cross.tsx","components/Icon/Icon.tsx","store/types/RouteName.ts","styles/transitions.ts","store/state/types/State.ts","store/state/initialState.ts","store/state/reducer.ts","store/state/helpers/reducerLogger.ts","store/state/store.ts","store/useIsLoading.ts","components/Nav/Nav.tsx","components/Keyboard/getKeysForWord.tsx","components/Keyboard/Key.tsx","components/Keyboard/Keyboard.tsx","hooks/useElementSize.ts","components/Typewriter/Pointer.tsx","components/Typewriter/Typewriter.tsx","store/useRouter.ts","store/useWords.ts","store/firebase.ts","screens/Game/Game.tsx","components/Logo/Logo.tsx","screens/Home/StartButton.tsx","components/Loading/Loading.tsx","components/Loading/FullLoading.tsx","components/Input/Input.tsx","components/Tabs/Tabs.tsx","components/Tabs/TabsItem.tsx","store/useAuth.ts","screens/Home/AuthForm.tsx","screens/Home/Home.tsx","components/Button/Button.tsx","components/Header/Header.tsx","screens/Settings/Settings.tsx","components/FloatingButton/FloatingButton.tsx","components/Search/Search.tsx","styles/animations.ts","components/Modal/Modal.tsx","components/EditableList/EditableList.tsx","hooks/useDictionary/fetchDictionary.ts","hooks/useDictionary/useDictionary.ts","hooks/useDebounce.ts","screens/Words/WordForm.tsx","store/presets/index.ts","screens/Words/WordPresets.tsx","screens/Words/WordModal.tsx","screens/Words/WordsItem.tsx","screens/Words/Words.tsx","App.tsx","serviceWorker.ts","components/ErrorBoundary/ErrorBoundary.tsx","index.tsx","store/useWordsPersist.ts"],"names":["brand","white","light","muted","gray","barShadow","floatingShadow","Home","_ref","size","props","Object","objectWithoutProperties","react_default","a","createElement","assign","width","height","viewBox","fillRule","clipRule","d","Play","Plus","Profile","Words","Search","concat","fill","fillOpacity","Cross","RotatePlus","styled","_templateObject","RouteName","sizes","normal","big","large","Icon","name","_ref$size","_ref$block","block","IconContent","icons","Container","div","Icon_templateObject","p","fast","WordAction","initialState","route","lastRoutes","words","undefined","user","reducerFunc","localId","uuid","createStore","state","action","type","objectSpread","payload","toConsumableArray","slice","newWord","id","Add","newWords","map","word","Delete","Error","console","log","GlobalStateProvider","dispatch","useGlobalState","useIsLoading","_useGlobalState","slicedToArray","_useGlobalState3","isLoading","loggedIn","Nav","prop","react","Nav_Container","show","NavButton","isActive","active","onClick","onChange","Icon_Icon","nav","Nav_templateObject","button","_templateObject2","activeCSS","inActiveCSS","css","_templateObject3","_templateObject4","special","KEYS","row","split","getKey","key","fakeKeys","random","seedRandom","visible","includes","Key","Key_Container","onTouchStart","isSpace","symbol","esm","keyEventName","KEYPRESS","keyValue","onKeyHandle","Key_templateObject","highlight","Key_templateObject2","Keyboard","Keyboard_Container","originalWord","arguments","length","toLowerCase","k","getKeysForWord","i","Row","Key_Key","onPress","Keyboard_templateObject","Keyboard_templateObject2","getSize","el","_el$getBoundingClient","getBoundingClientRect","Pointer","pipeSpring","useSpring","transform","from","PipeContainer","style","animated","span","Pointer_templateObject","Typewriter","progress","document","body","_useState","useState","_useState2","setSize","useEffect","handleResize","window","addEventListener","removeEventListener","useElementSize","preview","setPreview","typed","substr","fontSize","Math","min","Typewriter_Container","onPointerDown","onPointerOut","TypeWrapper","w","Segment","Pointer_Pointer","Letter","hide","Typewriter_templateObject","Typewriter_templateObject2","Typewriter_templateObject3","Typewriter_templateObject4","useRouter","setRoute","goBack","useWords","addWord","addManyWords","removeWord","randomWord","floor","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Game_templateObject","Game_templateObject2","Bottom","Game_templateObject3","Complete","Game_templateObject4","Button","_templateObject5","Logo","reSpring","opacity","delay","wordSpring","Logo_Container","First","Pipe","Last","h1","Logo_templateObject","Logo_templateObject2","Logo_templateObject3","Logo_templateObject4","StartButton","CircleButton","Game","StartButton_templateObject","Loading","Loading_Container","version","x","y","attributeType","attributeName","to","dur","repeatCount","Loading_templateObject","FullLoading","FullLoading_Container","Loading_Loading","FullLoading_templateObject","Input","value","_props$type","placeholder","autoFocus","focus","setFocus","_useState3","_useState4","linePosition","setLinePosition","labelRef","useRef","defaultLinePosition","current","Label","onMouseDown","e","pageX","ref","LabelName","move","InputStyled","event","target","onFocus","onBlur","transformOrigin","label","Input_templateObject","Input_templateObject2","input","Input_templateObject3","Tabs","items","Children","toArray","children","currentIndex","findIndex","setActive","prevActive","setPrevActive","refNav","refActive","pos","useLinePosition","activeItem","prevActiveItem","Tabs_Container","Tabs_Nav","index","NavItem","Line","left","Content","ContentItem","animation","Tabs_templateObject","Tabs_templateObject2","Tabs_templateObject3","animations","rightOut","keyframes","Tabs_templateObject4","rightIn","Tabs_templateObject5","leftOut","_templateObject6","leftIn","_templateObject7","_templateObject8","endsWith","_templateObject9","_templateObject10","_templateObject11","_len","args","Array","_key","join","transition","_templateObject12","wrapperEl","activeEl","deps","_useState5","_useState6","setLeft","_useState7","_useState8","setWidth","activeRect","wrapperRect","TabsItem","TabsItem_Container","TabsItem_templateObject","useAuthActions","signInError","setSignInError","createAccountError","setCreateAccountError","loading","setLoading","createAccount","asyncToGenerator","regenerator_default","mark","_callee","email","password","wrap","_context","prev","next","auth","createUserWithEmailAndPassword","t0","message","stop","_x","_x2","apply","this","signIn","_ref2","_callee2","_context2","signInWithEmailAndPassword","code","_x3","_x4","signOut","_ref3","_callee3","_context3","AuthForm","_useAuthActions","setEmail","setPassword","AuthForm_Container","Tabs_Tabs","TabsItem_TabsItem","onSubmit","preventDefault","ContentWrapper","ErrorMessage","Input_Input","FullButton","Overlay","AuthForm_templateObject","AuthForm_templateObject2","AuthForm_templateObject3","AuthForm_templateObject4","AuthForm_templateObject5","Home_templateObject","WordsCount","Home_templateObject2","AuthFormWrapper","main","Home_templateObject3","Button_templateObject","Header","HeaderWrapper","iconName","title","header","Header_templateObject","Center","Settings_templateObject","FloatingButton","FloatingButton_Button","FloatingButton_templateObject","SearchBox","Search_Input","IconPos","Search_templateObject","Search_templateObject2","Search_templateObject3","easing","fadeUpKeyframes","animations_templateObject","fadeDownKeyframes","animations_templateObject2","fadeInKeyframes","animations_templateObject3","fadeOutKeyframes","animations_templateObject4","fadeUpAnimation","animations_templateObject5","fadeDownAnimation","animations_templateObject6","fadeInAnimation","animations_templateObject8","fadeOutAnimation","animations_templateObject9","Modal","ReactDOM","createPortal","Transition","in","timeout","status","Fragment","ModalBox","Modal_Overlay","close","modalRoot","getElementById","Modal_templateObject","animations_templateObject7","ENTERING","EXITING","EXITED","Modal_templateObject2","animations_templateObject10","EditableList","react_beautiful_dnd_esm","onDragEnd","result","destination","reorder","list","source","droppableId","provided","snapshot","List","droppableProps","innerRef","item","draggableId","ListElement","draggableProps","dragHandleProps","EditableList_Cross","remove","filter","startIndex","endIndex","_result$splice","splice","removed","EditableList_templateObject","EditableList_templateObject2","EditableList_templateObject3","alphabet","cache","fetchDictionary","letter","res","data","abrupt","fetch","sent","json","useDictionary","query","currentQuery","setCurrentQuery","results","setResults","fn","ms","handle","setTimeout","bind","clearTimeout","useDebounce","useMemo","startsWith","run","WordForm","wordInput","setWordInput","translationInput","setTranslationInput","exampleInput","setExampleInput","_useList","useList","_useList2","translationList","translationListActions","_useList3","_useList4","exampleList","exampleListActions","AutocompleteItem","translations","trans","t","texts","set","EditableList_EditableList","InputWithButtonWrapper","Button_Button","push","translation","example","WordForm_templateObject","WordForm_templateObject2","presets","getList","__webpack_require__","then","preset","WordPresets","WordPresets_Container","WordPresets_templateObject","WordModal","Modal_Modal","onClose","WordForm_WordForm","WordPresets_WordPresets","WordsItem","WordsItem_Container","Name","Translations","Examples","RemoveButton","WordsItem_templateObject","strong","WordsItem_templateObject2","WordsItem_templateObject3","WordsItem_templateObject4","WordsItem_templateObject5","Words_templateObject","screens","_screens","defineProperty","_useIsLoading","FullLoading_FullLoading","Home_Container","Logo_Logo","StartButton_StartButton","AuthForm_AuthForm","search","setSearch","_useWords","showModal","setShowModal","Words_Container","Header_Header","Search_Search_Search","WordsItem_WordsItem","FloatingButton_FloatingButton","WordModal_WordModal","setProgress","setWord","wordRight","isComplete","handleNextWord","Game_Container","Game_Row","Typewriter_Typewriter","Keyboard_Keyboard","toLocaleLowerCase","App_templateObject","NavContainer","App_templateObject2","Boolean","location","hostname","match","ErrorBoundary","_Component","_getPrototypeOf2","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","error","eventId","handleReportDialog","Sentry","inherits","createClass","errorInfo","_this2","setState","scope","setExtras","JSON","stringify","Component","dsn","render","ErrorBoundary_ErrorBoundary","localWords","firestore","collection","doc","onSnapshot","serverWords","forEach","wordToAdd","wordToDelete","wordsFirebaseRef","add","delete","useWordsPersist","onAuthStateChanged","uid","displayName","_useRouter","Page","App_Content","Nav_Nav","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb515c92.chunk.js","sourcesContent":["export const brand = '#9438EA'\nexport const white = '#FFFFFF'\nexport const black = '#000000'\nexport const light = 'rgba(0, 0, 0, 0.1)'\nexport const muted = 'rgba(0, 0, 0, 0.3)'\nexport const gray = 'rgba(0, 0, 0, 0.6)'\nexport const grayBg = 'rgba(196, 196, 196, 0.2)'\nexport const good = '#AED900'\nexport const danger = '#EA388D'\n","export const barShadow = '0 0 10px rgba(0, 0, 0, 0.1)'\nexport const floatingShadow = '2px 2px 7px rgba(0, 0, 0, 0.1)'\n","import React from 'react'\n\nimport { IconProps } from '../types'\n\nexport const Home = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M5 12.5H2L12 3.5L22 12.5H19V20.5H13V14.5H11V20.5H5V12.5ZM17 10.69L12 6.19L7 10.69V18.5H9V12.5H15V18.5H17V10.69Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Play = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 61 61\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M44.4792 30.5L16.5208 48.2917V12.7083L44.4792 30.5ZM34.9988 30.5L21.6042 21.96V39.04L34.9988 30.5Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Plus = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" {...props}>\n        <path d=\"M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Profile = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4ZM14 8C14 6.9 13.1 6 12 6C10.9 6 10 6.9 10 8C10 9.1 10.9 10 12 10C13.1 10 14 9.1 14 8ZM18 18C17.8 17.29 14.7 16 12 16C9.31 16 6.23 17.28 6 18H18ZM4 18C4 15.34 9.33 14 12 14C14.67 14 20 15.34 20 18V20H4V18Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Words = ({ size, ...props }: IconProps) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\" {...props}>\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12.87 15.07L10.33 12.56L10.36 12.53C12.1 10.59 13.34 8.36 14.07 6H17V4H10V2H8V4H1V5.99H12.17C11.5 7.92 10.44 9.75 9 11.35C8.07 10.32 7.3 9.19 6.69 8H4.69C5.42 9.63 6.42 11.17 7.67 12.56L2.58 17.58L4 19L9 14L12.11 17.11L12.87 15.07ZM18.5 10H16.5L12 22H14L15.12 19H19.87L21 22H23L18.5 10ZM17.5 12.67L15.88 17H19.12L17.5 12.67Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { IconProps } from '../types'\n\nexport const Search = ({ size, ...props }: IconProps) => (\n    <svg\n        width={size}\n        height={size}\n        viewBox={`0 0 ${size} ${size}`}\n        fill=\"none\"\n        {...props}\n    >\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M15.731 14.255H16.521L21.511 19.255L20.021 20.745L15.021 15.755V14.965L14.751 14.685C13.611 15.665 12.131 16.255 10.521 16.255C6.931 16.255 4.021 13.345 4.021 9.755C4.021 6.165 6.931 3.255 10.521 3.255C14.111 3.255 17.021 6.165 17.021 9.755C17.021 11.365 16.431 12.845 15.451 13.985L15.731 14.255ZM6.021 9.755C6.021 12.245 8.031 14.255 10.521 14.255C13.011 14.255 15.021 12.245 15.021 9.755C15.021 7.26501 13.011 5.255 10.521 5.255C8.031 5.255 6.021 7.26501 6.021 9.755Z\"\n            fill=\"black\"\n            fillOpacity=\"0.54\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport { Plus } from './Plus'\nimport { IconProps } from '../types'\nimport styled from 'styled-components'\n\nexport const Cross = (props: IconProps) => <RotatePlus {...props} />\n\nconst RotatePlus = styled(Plus)`\n    transform: rotate(45deg);\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport * as icons from './icons'\n\nconst sizes = {\n    normal: 24,\n    big: 35,\n    large: 62,\n}\n\nexport type IconName = keyof typeof icons\nexport type IconSize = keyof typeof sizes\n\ntype IconProps = {\n    name: IconName\n    size?: IconSize\n    block?: boolean\n}\n\nexport const Icon = ({ name, size = 'normal', block = false }: IconProps) => {\n    const IconContent = icons[name]\n    return (\n        <Container block={block}>\n            <IconContent size={sizes[size]} />\n        </Container>\n    )\n}\n\nconst Container = styled.div<{ block: boolean }>`\n    display: ${p => (p.block ? 'block' : 'inline-block')};\n    vertical-align: middle;\n    svg {\n        display: block;\n        margin: auto;\n        fill: currentColor;\n    }\n`\n","export enum RouteName {\n    Home = 'home',\n    Words = 'words',\n    Profile = 'profile',\n    Game = 'game',\n}\n","export const fast = '0.3s cubic-bezier(.21,.96,.43,.98)'\nexport const transition = (...args: string[]) => `transition:${args\n    .map(name => `${name} ${fast}`)\n    .join(',')};\n`\n","import { RouteName } from '../../types/RouteName'\n\nexport enum WordAction {\n    Add,\n    Delete,\n}\n\nexport type Word = UnSavedWord & {\n    id: string\n    action?: WordAction\n}\n\nexport type UnSavedWord = {\n    name: string\n    translation: string[]\n    example: string[]\n    preset?: string\n}\n\nexport type WordsState = Word[]\n\nexport type UserState = {\n    id: string\n    email: string\n    name: string\n}\n\nexport type State = {\n    route: RouteName\n    lastRoutes: RouteName[]\n    words?: WordsState\n    user?: UserState | null\n}\n","import { RouteName } from '../types/RouteName'\nimport { State } from './types/State'\n\nexport const initialState: State = {\n    route: RouteName.Home,\n    lastRoutes: [],\n    words: undefined,\n    user: undefined,\n}\n","import uuid from 'uuid'\nimport { Actions } from './types/Actions'\nimport { State, Word, WordAction } from './types/State'\n\nconst localId = () => `local-${uuid()}`\n\nexport const reducer = (state: State, action: Actions) => {\n    switch (action.type) {\n        case 'ROUTER/SET_ROUTE':\n            return {\n                ...state,\n                route: action.payload.route,\n                lastRoutes: [state.route, ...state.lastRoutes],\n            }\n\n        case 'ROUTER/BACK':\n            return {\n                ...state,\n                route: state.lastRoutes[0],\n                lastRoutes: state.lastRoutes.slice(1),\n            }\n\n        case 'WORDS/SET':\n            return {\n                ...state,\n                words: action.payload,\n            }\n\n        case 'WORDS/ADD_WORD':\n            const newWord: Word = {\n                id: localId(),\n                action: WordAction.Add,\n                ...action.payload,\n            }\n            return {\n                ...state,\n                words: [...state.words, newWord],\n            }\n\n        case 'WORDS/ADD_MANY_WORDS':\n            const newWords: Word[] = action.payload.map(word => ({\n                id: localId(),\n                action: WordAction.Add,\n                ...word,\n            }))\n            return {\n                ...state,\n                words: [...state.words, ...newWords],\n            }\n\n        case 'WORDS/REMOVE_WORD':\n            return {\n                ...state,\n                words: state.words.map(word =>\n                    word.id === action.payload.id\n                        ? {\n                              ...word,\n                              action: WordAction.Delete,\n                          }\n                        : word\n                ),\n            }\n\n        case 'USER/CHANGE':\n            return {\n                ...state,\n                user: action.payload,\n            }\n\n        default:\n            throw new Error('[reducer] Unknown action type!')\n    }\n}\n","import { Actions } from '../types/Actions'\nimport { State } from '../types/State'\nimport { reducer } from '../reducer'\n\nexport const reducerLogger = (reducerFunc: typeof reducer) => (\n    state: State,\n    action: Actions\n) => {\n    console.log('→', action.type, action.payload)\n    return reducerFunc(state, action)\n}\n","import { createStore } from 'react-hooks-global-state'\nimport { reducerLogger } from './helpers/reducerLogger'\nimport { initialState } from './initialState'\nimport { reducer } from './reducer'\n\nexport const { GlobalStateProvider, dispatch, useGlobalState } = createStore(\n    reducerLogger(reducer),\n    initialState\n)\n","import { useGlobalState } from './state/store'\n\nexport const useIsLoading = () => {\n    const [words] = useGlobalState('words')\n    const [user] = useGlobalState('user')\n\n    return {\n        isLoading: words === undefined || user === undefined,\n        loggedIn: !!user,\n    }\n}\n","import * as React from 'react'\nimport styled, { css } from 'styled-components'\nimport { white, gray, brand } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { Icon } from '../Icon'\nimport { fast } from '../../styles/transitions'\nimport { RouteName } from '../../store/types/RouteName'\nimport { useIsLoading } from '../../store/useIsLoading'\n\nexport const NAV_HEIGHT = 60\n\ntype NavProps = {\n    active: RouteName\n    onChange(page: RouteName): void\n}\n\nexport const Nav = (prop: NavProps) => {\n    const { loggedIn } = useIsLoading()\n\n    return (\n        <Container show={loggedIn}>\n            <NavButton\n                isActive={prop.active === RouteName.Home}\n                onClick={() => prop.onChange(RouteName.Home)}\n            >\n                <Icon name=\"Home\" block />\n                Home\n            </NavButton>\n            <NavButton\n                isActive={prop.active === RouteName.Words}\n                onClick={() => prop.onChange(RouteName.Words)}\n            >\n                <Icon name=\"Words\" block />\n                Words\n            </NavButton>\n            <NavButton\n                isActive={prop.active === RouteName.Profile}\n                onClick={() => prop.onChange(RouteName.Profile)}\n            >\n                <Icon name=\"Profile\" block />\n                Profile\n            </NavButton>\n        </Container>\n    )\n}\n\nconst Container = styled.nav<{ show: boolean }>`\n    background: ${white};\n    display: flex;\n    width: 100%;\n    min-height: ${NAV_HEIGHT}px;\n    justify-content: space-evenly;\n    box-shadow: ${barShadow};\n    overflow: hidden;\n    transform: translateY(${p => (p.show ? 0 : NAV_HEIGHT)}px);\n    transition: transform 300ms ease;\n`\n\nconst NavButton = styled.button<{ isActive: boolean }>`\n    color: ${props => (props.isActive ? brand : gray)};\n    display: block;\n    background: none;\n    border: none;\n    padding: 10px 25px;\n    position: relative;\n    line-height: 1.5em;\n    &::after {\n        content: '';\n        display: block;\n        border-radius: 100%;\n        height: 60px;\n        width: 60px;\n        position: absolute;\n        margin: auto;\n        top: -50px;\n        bottom: -50px;\n        left: -50px;\n        right: -50px;\n        ${props => (props.isActive ? activeCSS : inActiveCSS)};\n    }\n    &:active::after {\n        transition: opacity 0.6s ease-out, background 0.6s ease-out, transform 1s ease-out;\n        opacity: 0.1;\n        transform: scale(1.2);\n        background: ${brand};\n    }\n`\n\nconst activeCSS = css`\n    transition: all ${fast};\n    opacity: 0;\n    transform: scale(2);\n    background: ${brand};\n`\n\nconst inActiveCSS = css`\n    transition: all 0 ease;\n    opacity: 0.3;\n    transform: scale(1);\n    background: rgba(255, 255, 255, 0);\n`\n","import seedRandom from 'seed-random'\n\nconst special = \"' ,\"\n\nconst KEYS = ['qwertyuiop', 'asdfghjkl', 'zxcvbnm', special].map(row => row.split(''))\n\ntype WordKey = {\n    visible: boolean\n    key: string\n}\n\ntype WordKeyList = WordKey[][]\n\nexport const getKeysForWord = (originalWord: string, fakeKeys = 0): WordKeyList => {\n    const word = originalWord.toLowerCase()\n\n    return KEYS.map(row => row.map(k => getKey(k, word, fakeKeys)))\n}\n\nconst getKey = (key: string, word: string, fakeKeys: number): WordKey => {\n    const random = fakeKeys ? seedRandom(key + word)() : 0\n\n    return {\n        key,\n        visible: word.includes(key) || (fakeKeys > random && !special.includes(key)),\n    }\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { brand, white } from '../../styles/colors'\nimport { fast } from '../../styles/transitions'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\n\ninterface KeyProps {\n    onClick(): void\n    symbol?: string\n    visible?: boolean\n}\n\nexport const Key = (props: KeyProps) => (\n    <Container\n        visible={props.visible}\n        onTouchStart={props.onClick}\n        isSpace={props.symbol === ' '}\n    >\n        {props.symbol}\n        <KeyHandler\n            keyEventName={KEYPRESS}\n            keyValue={props.symbol}\n            onKeyHandle={props.onClick}\n        />\n    </Container>\n)\n\nconst Container = styled.button<{ visible?: boolean; isSpace?: boolean }>`\n    width: ${p => (p.isSpace ? '47vw' : '8vw')};\n    height: 7vh;\n    padding: 0;\n    margin: 0 4px;\n    border: 2px solid ${brand};\n    opacity: ${p => (p.visible ? 1 : 0.1)};\n    border-radius: 4px;\n    color: ${brand};\n    font-weight: bold;\n    font-size: 24px;\n    text-align: center;\n    background: none;\n    transition: all ${fast};\n\n    ${p => p.visible && highlight}\n`\nconst highlight = css`\n    &:active {\n        outline: none;\n        background-color: ${brand};\n        color: ${white};\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { getKeysForWord } from './getKeysForWord'\nimport { white } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { Key } from './Key'\n\ninterface KeyboardProps {\n    word: string\n    onPress(key: string): void\n    fakeKeys?: number\n}\n\nexport const Keyboard = (props: KeyboardProps) => (\n    <Container>\n        {getKeysForWord(props.word, props.fakeKeys).map((row, i) => (\n            <Row key={i}>\n                {row.map(k => (\n                    <Key\n                        key={k.key}\n                        symbol={k.key}\n                        visible={k.visible}\n                        onClick={() => {\n                            if (k.visible) {\n                                props.onPress(k.key)\n                            }\n                        }}\n                    />\n                ))}\n            </Row>\n        ))}\n    </Container>\n)\n\nconst Container = styled.div`\n    padding: 0 0 50px;\n    background: ${white};\n    box-shadow: ${barShadow};\n`\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 10px 5px 0;\n`\n\nexport const vibrateOk = () => navigator.vibrate(1)\nexport const vibrateBad = () => navigator.vibrate([1, 100, 1, 100, 1])\n","import { useEffect, useState } from 'react'\n\nexport const useElementSize = (el: HTMLElement | null = document.body) => {\n    const [size, setSize] = useState(() => getSize(el))\n\n    useEffect(() => {\n        const handleResize = () => {\n            setSize(getSize(el))\n        }\n\n        window.addEventListener('resize', handleResize)\n        return () => window.removeEventListener('resize', handleResize)\n    }, [el])\n\n    return size\n}\n\nconst getSize = (el: HTMLElement | null) => {\n    if (!el) {\n        return { width: 0, height: 0 }\n    }\n    const { width, height } = el.getBoundingClientRect()\n    return { width, height }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { animated, useSpring } from 'react-spring'\nimport { brand } from '../../styles/colors'\n\nexport const Pointer = () => {\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-0.3em) scaleX(3)',\n        },\n    })\n    return <PipeContainer style={pipeSpring} />\n}\n\nconst PipeContainer = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 -0.05em;\n    vertical-align: middle;\n    background-color: ${brand};\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useElementSize } from '../../hooks/useElementSize'\nimport { black, muted } from '../../styles/colors'\nimport { Pointer } from './Pointer'\n\ntype TypewriterProps = {\n    word: string\n    progress: number\n}\n\nexport const Typewriter = ({ word, progress }: TypewriterProps) => {\n    const { width } = useElementSize()\n    const [preview, setPreview] = useState(false)\n\n    const typed = word.substr(0, progress)\n    const fontSize = Math.min(width / word.length, 80)\n\n    return (\n        <Container\n            onPointerDown={() => setPreview(true)}\n            onPointerOut={() => setPreview(false)}\n            style={{ fontSize }}\n        >\n            <TypeWrapper>\n                {word.split('').map((w, i) => {\n                    return (\n                        <Segment key={w + i}>\n                            {i === progress && <Pointer key={typed} />}\n                            <Letter hide={progress <= i && !preview}>{w}</Letter>\n                        </Segment>\n                    )\n                })}\n            </TypeWrapper>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n    padding: 0;\n    overflow: hidden;\n    height: 2em;\n    width: 100%;\n    line-height: 2em;\n`\n\nconst TypeWrapper = styled.div`\n    white-space: nowrap;\n    position: relative;\n    width: 100%;\n`\n\nconst Segment = styled.span`\n    display: inline-block;\n    line-height: 1em;\n    height: 1em;\n    margin: 0;\n    vertical-align: middle;\n    position: relative;\n`\n\nconst Letter = styled.span<{ hide: boolean }>`\n    display: inline-block;\n    text-align: center;\n    position: relative;\n    margin: 0 0.025em;\n    height: 100%;\n    min-width: 0.6em;\n    transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n    transform: ${props => (props.hide ? 'scale(0.5)' : 'scale(1)')};\n    color: ${props => (props.hide ? 'rgba(0,0,0,0.0)' : black)};\n    font-family: 'Ubuntu Mono', monospace;\n\n    &::after {\n        content: '*';\n        position: absolute;\n        text-align: center;\n        top: 0.8em;\n        left: 0;\n        right: 0;\n        line-height: 0.5em;\n        height: 1em;\n        transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n        color: ${muted};\n        transform: ${props => (props.hide ? 'scale(2)' : 'scale(0)')};\n        opacity: ${props => (props.hide ? 1 : 0)};\n    }\n`\n","import { dispatch, useGlobalState } from './state/store'\nimport { RouteName } from './types/RouteName'\n\nexport const useRouter = () => {\n    const [route] = useGlobalState('route')\n\n    const setRoute = (route: RouteName) => {\n        dispatch({ type: 'ROUTER/SET_ROUTE', payload: { route } })\n    }\n\n    const goBack = () => {\n        dispatch({ type: 'ROUTER/BACK' })\n    }\n\n    return { route, setRoute, goBack }\n}\n","import { dispatch, useGlobalState } from './state/store'\nimport { UnSavedWord, Word } from './state/types/State'\n\nexport const useWords = () => {\n    const [words] = useGlobalState('words')\n\n    const addWord = (word: UnSavedWord) => {\n        dispatch({ type: 'WORDS/ADD_WORD', payload: word })\n    }\n\n    const addManyWords = (words: UnSavedWord[]) => {\n        dispatch({ type: 'WORDS/ADD_MANY_WORDS', payload: words })\n    }\n\n    const removeWord = (id: string) => {\n        dispatch({ type: 'WORDS/REMOVE_WORD', payload: { id } })\n    }\n\n    const randomWord = (): Word | null => {\n        if (!words || !words.length) return null\n        return words[Math.floor(Math.random() * words.length)]\n    }\n\n    return { words, addWord, addManyWords, removeWord, randomWord }\n}\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyATMnw8FbczS1-0yJwrHl98EunKDAjE1DM',\n    authDomain: 'reword-1.firebaseapp.com',\n    databaseURL: 'https://reword-1.firebaseio.com',\n    projectId: 'reword-1',\n    storageBucket: 'reword-1.appspot.com',\n    messagingSenderId: '220877466530',\n    appId: '1:220877466530:web:7c95c058eaa3a7ed',\n}\nexport const firebaseApp = firebase.initializeApp(firebaseConfig)\n","import React, { useEffect, useState } from 'react'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\nimport styled from 'styled-components'\nimport { Icon } from '../../components/Icon'\nimport { Keyboard } from '../../components/Keyboard'\nimport { Typewriter } from '../../components/Typewriter'\nimport { useRouter, useWords } from '../../store'\nimport { good, white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\n\nexport const Game = () => {\n    const { goBack } = useRouter()\n    const { words, randomWord } = useWords()\n    const [progress, setProgress] = useState(0)\n    const [word, setWord] = useState(randomWord())\n\n    // Update when words changes\n    useEffect(() => {\n        setWord(randomWord())\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [words])\n\n    // Generally for development purposes only\n    if (!word) return null\n\n    const wordRight = word.name.substr(progress)\n    const isComplete = progress === word.name.length\n\n    const handleKeyPress = (key: string) => {\n        const currentWord = word.name[progress].toLocaleLowerCase()\n        if (key === currentWord) {\n            setProgress(progress + 1)\n        }\n    }\n\n    const handleNextWord = () => {\n        setWord(randomWord())\n        setProgress(0)\n    }\n\n    return (\n        <Container>\n            <Row>\n                <div>\n                    <h1>{word.translation}</h1>\n                    <h5>{isComplete ? word.example : '\\u00a0'}</h5>\n                </div>\n            </Row>\n            <Row>\n                <Typewriter word={word.name} progress={progress} key={word.name} />\n                <button onClick={goBack}>Cancel</button>\n            </Row>\n            <Bottom>\n                <Keyboard word={wordRight} onPress={handleKeyPress} />\n                {isComplete && (\n                    <Complete>\n                        <h2>Done!</h2>\n                        <Button onClick={handleNextWord}>\n                            Next word\n                            <Icon name=\"Play\" />\n                        </Button>\n\n                        <KeyHandler\n                            keyEventName={KEYPRESS}\n                            keyValue=\"Enter\"\n                            onKeyHandle={handleNextWord}\n                        />\n                    </Complete>\n                )}\n            </Bottom>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    height: 100%;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    text-align: center;\n    overflow: hidden;\n    user-select: none;\n`\nconst Row = styled.div`\n    width: 100%;\n    flex: 1 0 auto;\n`\n\nconst Bottom = styled.div`\n    width: 100%;\n    position: relative;\n`\n\nconst Complete = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Button = styled.button`\n    padding: 30px 50px;\n    border: none;\n    color: ${white};\n    background: ${good};\n    border-radius: 4px;\n    box-shadow: ${floatingShadow};\n    font-weight: bold;\n    font-size: 24px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useSpring, animated } from 'react-spring'\nimport { brand } from '../../styles/colors'\n\nexport const Logo = () => {\n    const reSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 200,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const wordSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 300,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-1.2em) scaleX(5)',\n        },\n    })\n\n    return (\n        <Container>\n            <First style={reSpring}>Re</First>\n            <Pipe style={pipeSpring} />\n            <Last style={wordSpring}>word</Last>\n        </Container>\n    )\n}\n\nconst Container = styled.h1`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n`\n\nconst First = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Last = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Pipe = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 0.05em;\n    vertical-align: middle;\n    background-color: ${brand};\n`\n","import React from 'react'\nimport { WordsState } from '../../store/state/types/State'\nimport { useRouter } from '../../store'\nimport { RouteName } from '../../store/types/RouteName'\nimport { Icon } from '../../components/Icon'\nimport { white, brand } from '../../styles/colors'\nimport styled from 'styled-components'\nimport { floatingShadow } from '../../styles/shadow'\n\ntype StartButtonProps = {\n    words: WordsState\n}\n\nexport const StartButton = (props: StartButtonProps) => {\n    const { setRoute } = useRouter()\n\n    if (!props.words && !props.words.length) {\n        return (\n            <CircleButton onClick={() => setRoute(RouteName.Words)}>\n                <Icon name=\"Plus\" size=\"large\" block />\n                Word\n            </CircleButton>\n        )\n    }\n\n    return (\n        <CircleButton onClick={() => setRoute(RouteName.Game)}>\n            <Icon name=\"Play\" size=\"large\" block />\n            Play\n        </CircleButton>\n    )\n}\n\nconst playSize = '45vmin'\n\nconst CircleButton = styled.button`\n    background: ${white};\n    border: none;\n    box-shadow: ${floatingShadow};\n    width: ${playSize};\n    height: ${playSize};\n    max-width: 260px;\n    max-height: 260px;\n    border-radius: 100%;\n    color: ${brand};\n    font-size: 36px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { brand } from '../../styles/colors'\n\nexport const Loading = () => (\n    <Container>\n        <svg\n            version=\"1.1\"\n            id=\"loader-1\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"40px\"\n            height=\"40px\"\n            viewBox=\"0 0 50 50\"\n        >\n            <path\n                fill={brand}\n                d=\"M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z\"\n            >\n                <animateTransform\n                    attributeType=\"xml\"\n                    attributeName=\"transform\"\n                    type=\"rotate\"\n                    from=\"0 25 25\"\n                    to=\"360 25 25\"\n                    dur=\"0.6s\"\n                    repeatCount=\"indefinite\"\n                />\n            </path>\n        </svg>\n    </Container>\n)\n\nconst Container = styled.div`\n    display: inline-block;\n    padding: 10px;\n`\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Loading } from './Loading'\n\nexport const FullLoading: FC = () => {\n    return (\n        <Container>\n            <Loading />\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { brand, muted } from '../../styles/colors'\n\ntype InputProps = {\n    value: string\n    type?: string\n    name?: string\n    placeholder: string\n    onChange: (value: string) => void\n    autoFocus?: boolean\n}\n\nexport const Input = (props: InputProps) => {\n    const { value, type = 'text', placeholder, onChange, autoFocus, name } = props\n\n    const [focus, setFocus] = useState(false)\n    const [linePosition, setLinePosition] = useState(0)\n\n    const labelRef = useRef<HTMLLabelElement>(null)\n\n    const defaultLinePosition = labelRef.current\n        ? labelRef.current.getBoundingClientRect().width / 2\n        : 0\n\n    useEffect(() => {\n        setLinePosition(defaultLinePosition)\n    }, [defaultLinePosition])\n\n    return (\n        <Label\n            active={focus}\n            onMouseDown={e => {\n                setLinePosition(e.pageX)\n            }}\n            ref={labelRef}\n        >\n            <LabelName move={value !== ''}>{placeholder}</LabelName>\n            <InputStyled\n                type={type}\n                value={value}\n                onChange={event => onChange(event.target.value)}\n                onFocus={() => setFocus(true)}\n                onBlur={() => {\n                    setLinePosition(defaultLinePosition)\n                    setFocus(false)\n                }}\n                autoFocus={autoFocus}\n                name={name}\n            />\n            <span style={{ transformOrigin: `${linePosition}px 0` }} />\n        </Label>\n    )\n}\n\nconst Label = styled.label<{ active: boolean }>`\n    position: relative;\n    display: block;\n    span {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: 2px;\n        opacity: 1;\n        transition: transform 0.25s ease-out;\n        transform: scaleX(${props => (props.active ? 1 : 0)});\n        background: ${brand};\n        pointer-events: none;\n    }\n`\n\nconst LabelName = styled.div<{ move: boolean }>`\n    position: absolute;\n    top: 9px;\n    left: 0px;\n    font-size: 15px;\n    transition: transform 0.15s ease-out;\n    color: ${muted};\n    cursor: text;\n    transform-origin: 0 0; // top left for scale\n    transform: ${props =>\n        props.move ? `translateY(-17px) scale(0.8)` : `translate(0px)`};\n`\n\nconst InputStyled = styled.input`\n    padding: 12px 0 9px;\n    border: none;\n    font-size: 15px;\n    display: block;\n    width: 100%;\n    margin: 15px 0;\n    border-bottom: 2px solid ${muted};\n`\n","import React, {\n    Children,\n    DependencyList,\n    ReactElement,\n    RefObject,\n    useEffect,\n    useRef,\n    useState,\n} from 'react'\nimport styled, { css, keyframes } from 'styled-components'\nimport { TabsItemProps } from '.'\nimport { black, brand } from '../../styles/colors'\nimport { fast, transition } from '../../styles/transitions'\n\ntype TabsProps = {\n    children: ReactElement<TabsItemProps>[] | ReactElement<TabsItemProps>\n}\n\nexport const Tabs = (props: TabsProps) => {\n    const items = Children.toArray<ReactElement<TabsItemProps>>(props.children)\n\n    const currentIndex = items.findIndex(el => el.props.isActive)\n    const [active, setActive] = useState(currentIndex > 0 ? currentIndex : 0)\n    const [prevActive, setPrevActive] = useState<number | null>(null)\n\n    const refNav = useRef(null)\n    const refActive = useRef(null)\n\n    const pos = useLinePosition(refNav, refActive, [active])\n\n    const activeItem = items[active]\n    const prevActiveItem = items[prevActive]\n\n    return (\n        <Container>\n            <Nav ref={refNav}>\n                {items.map((el, index) => (\n                    <NavItem\n                        ref={index === active ? refActive : null}\n                        key={index}\n                        onClick={() => {\n                            if (active === index) return\n                            setPrevActive(active)\n                            setActive(index)\n                        }}\n                        active={index === active}\n                    >\n                        {el.props.name}\n                    </NavItem>\n                ))}\n                <Line\n                    style={{ transform: `translateX(${pos.left}px)`, width: pos.width }}\n                />\n            </Nav>\n            <Content>\n                {prevActiveItem && (\n                    <ContentItem\n                        animation={prevActive > active ? 'rightOut' : 'leftOut'}\n                        key={prevActiveItem.props.name}\n                    >\n                        <prevActiveItem.type {...prevActiveItem.props} />\n                    </ContentItem>\n                )}\n                <ContentItem\n                    animation={\n                        prevActiveItem && (prevActive < active ? 'rightIn' : 'leftIn')\n                    }\n                    key={activeItem.props.name}\n                >\n                    <activeItem.type {...activeItem.props} />\n                </ContentItem>\n            </Content>\n        </Container>\n    )\n}\n\nconst Container = styled.div``\nconst Nav = styled.div`\n    position: relative;\n    display: grid;\n    grid-auto-columns: 1fr;\n    grid-auto-flow: column;\n`\nconst Content = styled.div`\n    position: relative;\n    overflow: hidden;\n`\n\nconst rightOut = keyframes`\n  from {\n    transform: translateX(0%);\n  }\n\n  to {\n    transform: translateX(100%);\n  }\n`\nconst rightIn = keyframes`\n  from {\n    transform: translateX(100%);\n  }\n\n  to {\n    transform: translateX(0%);\n  }\n`\nconst leftOut = keyframes`\n  from {\n    transform: translateX(0%);\n  }\n\n  to {\n    transform: translateX(-100%);\n  }\n`\nconst leftIn = keyframes`\n  from {\n    transform: translateX(-100%);\n  }\n\n  to {\n    transform: translateX(0%);\n  }\n`\n\nconst animations = {\n    rightOut,\n    rightIn,\n    leftOut,\n    leftIn,\n}\n\nconst ContentItem = styled.div<{ animation?: string }>`\n    position: relative;\n    display: block;\n    top: 0;\n    left: 0;\n    width: 100%;\n    ${props =>\n        props.animation &&\n        props.animation.endsWith('Out') &&\n        css`\n            position: absolute;\n        `}\n    ${props =>\n        props.animation &&\n        css`\n            animation: ${animations[props.animation]} ${fast} forwards;\n        `}\n`\n\nconst Line = styled.div`\n    height: 2px;\n    ${transition('transform', 'width')}\n    position: absolute;\n    top: 100%;\n    z-index: 10;\n    background: ${brand};\n`\n\nconst NavItem = styled.button<{ active: boolean }>`\n    display: block;\n    padding: 15px 10px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: ${p => (p.active ? brand : black)};\n`\n\nconst useLinePosition = (\n    wrapperEl: RefObject<HTMLElement>,\n    activeEl: RefObject<HTMLElement>,\n    deps: DependencyList\n) => {\n    const [left, setLeft] = useState(0)\n    const [width, setWidth] = useState(0)\n    // const { innerWidth } = useWindowSize();\n\n    useEffect(() => {\n        if (!activeEl.current || !wrapperEl.current) {\n            return\n        }\n        const activeRect = activeEl.current.getBoundingClientRect()\n        const wrapperRect = wrapperEl.current.getBoundingClientRect()\n\n        setLeft(activeRect.left - wrapperRect.left)\n        setWidth(activeRect.width)\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [...deps, activeEl, wrapperEl])\n    // [...deps, innerWidth]\n    return { left, width }\n}\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nexport type TabsItemProps = {\n    name: string\n    isActive?: boolean\n    children: ReactNode\n}\n\nexport const TabsItem = (props: TabsItemProps) => <Container>{props.children}</Container>\n\nconst Container = styled.div``\n","import { firebaseApp } from './firebase'\nimport { dispatch } from './state/store'\nimport { useEffect, useState } from 'react'\nimport { useRouter } from './useRouter'\nimport { RouteName } from './types/RouteName'\n\nexport const useAuthActions = () => {\n    const { setRoute } = useRouter()\n    const [signInError, setSignInError] = useState('')\n    const [createAccountError, setCreateAccountError] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    const createAccount = async (email: string, password: string) => {\n        setLoading(true)\n        try {\n            await firebaseApp.auth().createUserWithEmailAndPassword(email, password)\n        } catch (e) {\n            setCreateAccountError(e.message)\n        }\n        setLoading(false)\n    }\n\n    const signIn = async (email: string, password: string) => {\n        setLoading(true)\n        try {\n            await firebaseApp.auth().signInWithEmailAndPassword(email, password)\n        } catch (e) {\n            if (e.code === 'auth/user-not-found') {\n                setSignInError('User not found')\n            } else {\n                setSignInError(e.message)\n            }\n        }\n        setLoading(false)\n    }\n\n    const signOut = async () => {\n        setLoading(true)\n        await firebaseApp.auth().signOut()\n        setRoute(RouteName.Home)\n        setLoading(false)\n    }\n\n    return { signIn, signOut, createAccount, signInError, createAccountError, loading }\n}\n\nexport const useWatchAuthChange = () => {\n    useEffect(() => {\n        firebaseApp.auth().onAuthStateChanged(user => {\n            dispatch({\n                type: 'USER/CHANGE',\n                payload: user\n                    ? { email: user.email, id: user.uid, name: user.displayName }\n                    : null,\n            })\n        })\n    }, [])\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Input } from '../../components/Input'\nimport { Tabs, TabsItem } from '../../components/Tabs'\nimport { useAuthActions } from '../../store/useAuth'\nimport { brand, white, danger } from '../../styles/colors'\nimport { FullLoading, Loading } from '../../components/Loading'\n\nexport const AuthForm = () => {\n    const {\n        signIn,\n        signInError,\n        createAccount,\n        createAccountError,\n        loading,\n    } = useAuthActions()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    return (\n        <Container>\n            <Tabs>\n                <TabsItem name=\"Sign in\">\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault()\n                            signIn(email, password)\n                        }}\n                    >\n                        <ContentWrapper>\n                            <h2>I already have an account</h2>\n                            <ErrorMessage>{signInError}</ErrorMessage>\n                            <Input\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                placeholder=\"email\"\n                            />\n                            <Input\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                placeholder=\"password\"\n                            />\n                        </ContentWrapper>\n                        <FullButton>Sign in</FullButton>\n                    </form>\n                </TabsItem>\n                <TabsItem name=\"Sing up\">\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault()\n                            createAccount(email, password)\n                        }}\n                    >\n                        <ContentWrapper>\n                            <h2>Create an account</h2>\n                            <ErrorMessage>{createAccountError}</ErrorMessage>\n                            <Input\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                placeholder=\"email\"\n                            />\n                            <Input\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                placeholder=\"password\"\n                            />\n                        </ContentWrapper>\n                        <FullButton>Sign up</FullButton>\n                    </form>\n                </TabsItem>\n            </Tabs>\n            {loading && (\n                <Overlay>\n                    <Loading />\n                </Overlay>\n            )}\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    position: relative;\n`\n\nconst Overlay = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(255, 255, 255, 0.8);\n    z-index: 10;\n`\n\nconst ContentWrapper = styled.div`\n    padding: 40px 30px;\n`\n\nconst FullButton = styled.button`\n    display: block;\n    width: 100%;\n    text-align: center;\n    color: ${white};\n    font-weight: bold;\n    padding: 18px 0;\n    border: none;\n    background: ${brand};\n`\n\nconst ErrorMessage = styled.div`\n    color: ${danger};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Logo } from '../../components/Logo'\nimport { useWords } from '../../store'\nimport { useIsLoading } from '../../store/useIsLoading'\nimport { StartButton } from './StartButton'\nimport { FullLoading } from '../../components/Loading'\nimport { AuthForm } from './AuthForm'\nimport { white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\n\nexport const Home = () => {\n    const { isLoading, loggedIn } = useIsLoading()\n    const { words } = useWords()\n\n    if (isLoading) {\n        return <FullLoading />\n    }\n\n    return (\n        <Container>\n            <Logo />\n            {loggedIn ? (\n                <>\n                    <Container>\n                        <StartButton words={words} />\n                    </Container>\n                    <WordsCount>\n                        You added <b>{words.length}</b> words\n                    </WordsCount>\n                </>\n            ) : (\n                <AuthFormWrapper>\n                    <AuthForm />\n                </AuthFormWrapper>\n            )}\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: grid;\n    height: 100%;\n    grid-auto-rows: 1fr 3fr 1fr;\n    align-items: center;\n    justify-items: center;\n`\n\nconst WordsCount = styled.div`\n    padding: 25px;\n    text-align: center;\n`\n\nconst AuthFormWrapper = styled.main`\n    background: ${white};\n    box-shadow: ${floatingShadow};\n    border-radius: 5px;\n    width: 100%;\n    max-width: 360px;\n    overflow: hidden;\n`\n","import styled from 'styled-components'\nimport { brand } from '../../styles/colors'\n\nexport const Button = styled.button`\n    display: inline-block;\n    padding: 5px 15px;\n    border: 2px solid ${brand};\n    border-radius: 5px;\n    background: transparent;\n`\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { IconName, Icon } from '../Icon'\nimport { grayBg } from '../../styles/colors'\n\ntype HeaderProps = {\n    title: string\n    iconName: IconName\n    children?: ReactNode\n}\n\nexport const Header = (props: HeaderProps) => {\n    return (\n        <HeaderWrapper>\n            <Icon name={props.iconName} size=\"large\" />\n            <h1>{props.title}</h1>\n            {props.children}\n        </HeaderWrapper>\n    )\n}\n\nconst HeaderWrapper = styled.header`\n    background: ${grayBg};\n    display: flex;\n    min-height: 260px;\n    padding: 15px;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n","import React from 'react'\nimport { Button } from '../../components/Button'\nimport { Header } from '../../components/Header'\nimport { useAuthActions } from '../../store/useAuth'\nimport styled from 'styled-components'\nimport { useGlobalState } from '../../store/state/store'\n\nexport const Settings = () => {\n    const { signOut } = useAuthActions()\n    const [user] = useGlobalState('user')\n\n    return (\n        <div>\n            <Header title=\"Profile\" iconName=\"Profile\" />\n            <Center>\n                Logged as <strong>{user.email}</strong>\n            </Center>\n            <Center>\n                <Button type=\"button\" onClick={() => signOut()}>\n                    Sign out\n                </Button>\n            </Center>\n        </div>\n    )\n}\n\nconst Center = styled.div`\n    text-align: center;\n    padding: 20px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { IconName, Icon } from '../Icon'\nimport { brand, white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\nimport { NAV_HEIGHT } from '../Nav'\n\ntype FloatingButtonProps = {\n    onClick: () => void\n    iconName: IconName\n}\n\nexport const FloatingButton = (props: FloatingButtonProps) => (\n    <Button onClick={props.onClick}>\n        <Icon name={props.iconName} size=\"big\" />\n    </Button>\n)\n\nconst Button = styled.button`\n    position: relative;\n    display: block;\n    padding: 13px;\n    border: 2px solid ${white};\n    color: ${brand};\n    box-shadow: ${floatingShadow};\n    border-radius: 50%;\n    background: ${white};\n    transition: 0.2s;\n    margin: 15px 15px 17px auto;\n    position: sticky;\n    bottom: 17px;\n    &:active {\n        border-color: ${brand};\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { barShadow } from '../../styles/shadow'\nimport { Icon } from '../Icon'\n\ntype SearchProps = {\n    value: string\n    onChange: (value: string) => void\n}\n\nexport const Search = (props: SearchProps) => (\n    <SearchBox>\n        <Input\n            type=\"text\"\n            value={props.value}\n            onChange={e => props.onChange(e.target.value)}\n            placeholder=\"Search…\"\n        />\n        <IconPos onClick={() => props.onChange('')}>\n            {props.value ? (\n                <Icon name=\"Cross\" size=\"normal\" />\n            ) : (\n                <Icon name=\"Search\" size=\"normal\" />\n            )}\n        </IconPos>\n    </SearchBox>\n)\n\nconst SearchBox = styled.div`\n    position: relative;\n    margin-top: 15px;\n`\n\nconst Input = styled.input`\n    padding: 13px 20px;\n    width: 100%;\n    max-width: 290px;\n    border-radius: 20px;\n    border: 1px solid #fff;\n    box-shadow: ${barShadow};\n`\n\nconst IconPos = styled.div`\n    position: absolute;\n    top: 0;\n    right: 15px;\n    bottom: 0;\n    margin: auto 0;\n    height: 24px;\n    line-height: 0;\n`\n","import {\n    ENTERING,\n    EXITED,\n    EXITING,\n    TransitionStatus,\n} from 'react-transition-group/Transition'\nimport { css, keyframes } from 'styled-components'\n\nexport const fadeDuration = 400\nconst easing = 'cubic-bezier(0.29, 0.87, 0.54, 0.99)'\n\nconst fadeUpKeyframes = keyframes`\n    from {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n    to {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n`\n\nconst fadeDownKeyframes = keyframes`\n    from {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n    to {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n`\n\nconst fadeInKeyframes = keyframes`\n    from { opacity: 0; }\n    to { opacity: 1; }\n`\n\nconst fadeOutKeyframes = keyframes`\n    from { opacity: 1; }\n    to { opacity: 0; }\n`\n\nexport const fadeUpAnimation = css`\n    animation: ${fadeUpKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeDownAnimation = css`\n    animation: ${fadeDownKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeUpDownAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeUpAnimation};\n    ${status === EXITING && fadeDownAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'pointer-events: none; opacity: 0;'};\n`\n\nexport const fadeInAnimation = css`\n    animation: ${fadeInKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeOutAnimation = css`\n    animation: ${fadeOutKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeInOutAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeInAnimation};\n    ${status === EXITING && fadeOutAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'pointer-events: none; opacity: 0;'};\n`\n","import React, { ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport Transition, { TransitionStatus } from 'react-transition-group/Transition'\nimport styled from 'styled-components'\nimport { fadeInOutAnimation, fadeUpDownAnimation } from '../../styles/animations'\nimport { white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\n\ntype ModalProps = {\n    show: boolean\n    children?: ReactNode\n    close?: () => void\n}\n\nexport const Modal = (props: ModalProps) => {\n    return ReactDOM.createPortal(\n        <Transition in={props.show} timeout={1000}>\n            {status => (\n                <>\n                    <ModalBox status={status}>{props.children}</ModalBox>\n                    <Overlay status={status} onClick={props.close} />\n                </>\n            )}\n        </Transition>,\n        modalRoot\n    )\n}\n\nconst modalRoot = document.getElementById('modals')\n\nconst ModalBox = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    left: 0;\n    right: 0;\n    display: block;\n    bottom: 15px;\n    margin: 0 auto auto;\n    width: calc(100vw - 20px);\n    max-height: calc(100vh - 20px);\n    overflow-y: auto;\n    background: ${white};\n    border-radius: 4px;\n    z-index: 1000;\n    padding: 15px;\n    box-shadow: ${floatingShadow};\n    ${p => fadeUpDownAnimation(p.status)};\n`\n\nconst Overlay = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.1);\n    z-index: 100;\n    ${p => fadeInOutAnimation(p.status)};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\ntype EditableListProps = {\n    list: string[]\n    onChange: (list: string[]) => void\n}\nexport const EditableList = (props: EditableListProps) => (\n    <DragDropContext\n        onDragEnd={result => {\n            if (!result.destination) return\n\n            const items = reorder(\n                props.list,\n                result.source.index,\n                result.destination.index\n            )\n            props.onChange(items)\n        }}\n    >\n        <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n                <List {...provided.droppableProps} ref={provided.innerRef}>\n                    {props.list.map((item, index) => (\n                        <Draggable key={item} draggableId={item} index={index}>\n                            {(provided, snapshot) => (\n                                <ListElement\n                                    key={index}\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={provided.draggableProps.style}\n                                >\n                                    {item}\n                                    <Cross\n                                        onClick={() => {\n                                            props.onChange(remove(props.list, index))\n                                        }}\n                                    />\n                                </ListElement>\n                            )}\n                        </Draggable>\n                    ))}\n                    {provided.placeholder}\n                </List>\n            )}\n        </Droppable>\n    </DragDropContext>\n)\n\nconst remove = (list: string[], index: number) => list.filter((el, i) => index !== i)\n\nconst reorder = (list: string[], startIndex: number, endIndex: number) => {\n    const result = Array.from(list)\n    const [removed] = result.splice(startIndex, 1)\n    result.splice(endIndex, 0, removed)\n\n    return result\n}\n\nconst List = styled.div``\nconst ListElement = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n`\nconst Cross = styled.button`\n    border-left: 1px solid #ccc;\n    color: red;\n    padding: 3px;\n    :after {\n        content: 'x';\n    }\n`\n","import { DictionaryItem } from './types'\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('')\nconst cache = {}\n\nexport const fetchDictionary = async (\n    letter: string\n): Promise<DictionaryItem[] | null> => {\n    if (!alphabet.includes(letter)) {\n        return null\n    }\n\n    if (cache[letter]) {\n        return cache[letter]\n    }\n\n    const res = await fetch(`/dictionary/en-pl/${letter}.json`)\n    const data: DictionaryItem[] = await res.json()\n\n    cache[letter] = data\n\n    return data\n}\n","import { useState, useMemo } from 'react'\nimport { useDebounce } from '../useDebounce'\nimport { fetchDictionary } from './fetchDictionary'\nimport { DictionaryItem } from './types'\n\nexport const useDictionary = (query: string) => {\n    const [currentQuery, setCurrentQuery] = useState('')\n\n    const [results, setResults] = useState<DictionaryItem[]>([])\n\n    useDebounce(() => setCurrentQuery(query.toLowerCase()), 400, [query])\n\n    useMemo(() => {\n        const letter = (currentQuery[0] || '').toLowerCase()\n\n        const run = async () => {\n            const list = await fetchDictionary(letter)\n\n            if (!list) {\n                setResults([])\n                return\n            }\n\n            const results = list\n                .filter(item => item.word.toLowerCase().startsWith(currentQuery))\n                .slice(0, 5)\n\n            setResults(results)\n        }\n\n        run()\n    }, [currentQuery])\n\n    return { results }\n}\n","import { useEffect } from 'react'\n\nexport const useDebounce = (fn: () => any, ms: number = 0, args: any[] = []) => {\n    useEffect(() => {\n        const handle = setTimeout(fn.bind(null, args), ms)\n\n        return () => {\n            clearTimeout(handle)\n        }\n    }, [args, fn, ms])\n}\n","import React, { useState } from 'react'\nimport useList from 'react-use/lib/useList'\nimport styled from 'styled-components'\nimport { Button } from '../../components/Button'\nimport { EditableList } from '../../components/EditableList'\nimport { Input } from '../../components/Input'\nimport { Modal } from '../../components/Modal'\nimport { useDictionary } from '../../hooks/useDictionary'\nimport { DictionaryTrans } from '../../hooks/useDictionary/types'\nimport { UnSavedWord } from '../../store/state/types/State'\nimport { light } from '../../styles/colors'\nimport { useWords } from '../../store'\n\nexport const WordForm = () => {\n    const { addWord } = useWords()\n\n    const [wordInput, setWordInput] = useState('')\n    const [translationInput, setTranslationInput] = useState('')\n    const [exampleInput, setExampleInput] = useState('')\n\n    const [translationList, translationListActions] = useList<string>()\n    const [exampleList, exampleListActions] = useList<string>()\n\n    const { results } = useDictionary(wordInput)\n\n    const addNewWord = () => {\n        addWord({\n            name: wordInput,\n            translation: translationList,\n            example: exampleList,\n        })\n        setWordInput('')\n        setTranslationInput('')\n        setExampleInput('')\n    }\n\n    const getTrans = (trans: DictionaryTrans[]) => trans.map(t => t.texts[0]).join(', ')\n\n    return (\n        <>\n            <h4>Word</h4>\n            <div>\n                <Input value={wordInput} placeholder=\"Word\" onChange={setWordInput} />\n            </div>\n            {!translationList.length && (\n                <div>\n                    {results.map(item => (\n                        <AutocompleteItem\n                            key={item.id}\n                            onClick={() => {\n                                setWordInput(item.word)\n                                const translations = item.trans.map(t => t.texts[0])\n                                translationListActions.set(translations)\n                            }}\n                        >\n                            <b>{item.word}</b> - {getTrans(item.trans)}\n                        </AutocompleteItem>\n                    ))}\n                </div>\n            )}\n\n            <h4>Translations</h4>\n            <EditableList list={translationList} onChange={translationListActions.set} />\n            <InputWithButtonWrapper>\n                <div>\n                    <Input\n                        value={translationInput}\n                        onChange={setTranslationInput}\n                        placeholder=\"Translation\"\n                    />\n                </div>\n                <Button\n                    onClick={() => {\n                        if (!translationInput) return\n                        translationListActions.push(translationInput)\n                        setTranslationInput('')\n                    }}\n                >\n                    +\n                </Button>\n            </InputWithButtonWrapper>\n\n            <h4>Examples</h4>\n            <EditableList list={exampleList} onChange={translationListActions.set} />\n            <InputWithButtonWrapper>\n                <div>\n                    <Input\n                        value={exampleInput}\n                        onChange={setExampleInput}\n                        placeholder=\"Example\"\n                    />\n                </div>\n                <Button\n                    onClick={() => {\n                        if (!exampleInput) return\n                        exampleListActions.push(exampleInput)\n                        setExampleInput('')\n                    }}\n                >\n                    +\n                </Button>\n            </InputWithButtonWrapper>\n\n            {/* <Button onClick={props.onClose}>Close</Button> */}\n            <Button onClick={addNewWord}>Save</Button>\n        </>\n    )\n}\n\nconst AutocompleteItem = styled.button`\n    display: block;\n    width: 100%;\n    padding: 1em 0;\n    border: none;\n    border-bottom: 1px solid ${light};\n    text-align: left;\n    font-size: 14px;\n`\n\nconst InputWithButtonWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    align-items: center;\n`\n","import { UnSavedWord } from '../state/types/State'\n\ntype Preset = {\n    id: string\n    name: string\n    getList(): Promise<UnSavedWord[]>\n}\n\nexport const presets: Preset[] = [\n    {\n        id: 'basic-weekdays',\n        name: 'Weekdays',\n        getList: () =>\n            import('./base/weekdays').then(({ list }) =>\n                list.map(el => ({ ...el, preset: 'basic-weekdays' }))\n            ),\n    },\n]\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../components/Button'\nimport { presets } from '../../store/presets'\nimport { useWords } from '../../store'\n\nexport const WordPresets = () => {\n    const { addManyWords } = useWords()\n\n    return (\n        <Container>\n            <ul>\n                {presets.map(item => (\n                    <li key={item.id}>\n                        {item.name}\n                        <Button onClick={() => item.getList().then(addManyWords)}>\n                            +\n                        </Button>\n                    </li>\n                ))}\n            </ul>\n        </Container>\n    )\n}\n\nconst Container = styled.div``\n","import React from 'react'\nimport { Modal } from '../../components/Modal'\nimport { UnSavedWord } from '../../store/state/types/State'\nimport { Tabs, TabsItem } from '../../components/Tabs'\nimport { WordForm } from './WordForm'\nimport { WordPresets } from './WordPresets'\n\ntype WordModalProps = {\n    show: boolean\n    onClose: () => void\n}\n\nexport const WordModal = (props: WordModalProps) => {\n    return (\n        <Modal show={props.show} close={props.onClose}>\n            <Tabs>\n                <TabsItem name=\"New word\">\n                    <WordForm />\n                </TabsItem>\n                <TabsItem name=\"Presets\">\n                    <WordPresets />\n                </TabsItem>\n            </Tabs>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Word } from '../../store/state/types/State'\nimport { light, brand, gray } from '../../styles/colors'\nimport { Icon } from '../../components/Icon'\n\ntype WordsItemProps = {\n    word: Word\n    removeWord: () => void\n}\n\nexport const WordsItem = (props: WordsItemProps) => (\n    <Container>\n        <div>\n            <Name>{props.word.name} - </Name>\n            <Translations>{props.word.translation.join(', ')}</Translations>\n\n            {props.word.action && 'Loading…'}\n            {!!props.word.example.length && (\n                <Examples>{props.word.example.join(', ')}</Examples>\n            )}\n        </div>\n\n        <RemoveButton onClick={props.removeWord}>\n            <Icon name=\"Cross\" size=\"normal\" />\n        </RemoveButton>\n    </Container>\n)\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    padding: 12px;\n    border-bottom: 1px solid ${light};\n`\n\nconst Name = styled.strong`\n    font-weight: normal;\n    font-size: 1.2em;\n`\n\nconst Translations = styled.span`\n    color: ${brand};\n    font-size: 1.2em;\n`\n\nconst Examples = styled.div`\n    color: ${gray};\n    font-size: 0.8em;\n    font-style: italic;\n`\n\nconst RemoveButton = styled.button`\n    border: none;\n    background: none;\n`\n","import React, { useState } from 'react'\nimport { FloatingButton } from '../../components/FloatingButton'\nimport { Header } from '../../components/Header'\nimport { Search } from '../../components/Search'\nimport { useWords } from '../../store'\nimport { WordModal } from './WordModal'\nimport { WordsItem } from './WordsItem'\nimport styled from 'styled-components'\n\nexport const Words = () => {\n    const [search, setSearch] = useState('')\n\n    const { words, removeWord } = useWords()\n    const [showModal, setShowModal] = useState(false)\n\n    return (\n        <Container>\n            <Header title=\"Words\" iconName=\"Words\">\n                <Search value={search} onChange={setSearch} />\n            </Header>\n            <div>\n                {words &&\n                    words\n                        .filter(word => word.name.includes(search))\n                        .map(word => (\n                            <WordsItem\n                                key={word.id}\n                                word={word}\n                                removeWord={() => removeWord(word.id)}\n                            />\n                        ))}\n            </div>\n            <FloatingButton onClick={() => setShowModal(!showModal)} iconName=\"Plus\" />\n            <WordModal show={showModal} onClose={() => setShowModal(false)} />\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    height: 100%;\n    display: grid;\n    grid-template-rows: auto 1fr auto;\n`\n","import React, { ElementType } from 'react'\nimport styled from 'styled-components'\nimport { Nav, NAV_HEIGHT } from './components/Nav'\nimport { Game } from './screens/Game'\nimport { Home } from './screens/Home'\nimport { Settings } from './screens/Settings'\nimport { Words } from './screens/Words'\nimport { useRouter, useWordsPersist } from './store'\nimport { RouteName } from './store/types/RouteName'\nimport { useWatchAuthChange } from './store/useAuth'\n\nconst screens: Record<RouteName, ElementType> = {\n    [RouteName.Home]: Home,\n    [RouteName.Words]: Words,\n    [RouteName.Profile]: Settings,\n    [RouteName.Game]: Game,\n}\n\nexport const App = () => {\n    useWordsPersist()\n    useWatchAuthChange()\n\n    const { route, setRoute } = useRouter()\n    const Page = screens[route]\n\n    return (\n        <>\n            <Content>\n                <Page />\n            </Content>\n            <NavContainer>\n                <Nav active={route} onChange={setRoute} />\n            </NavContainer>\n        </>\n    )\n}\n\nconst Content = styled.main`\n    height: calc(100% - ${NAV_HEIGHT}px);\n    position: relative;\n    width: 100%;\n    overflow-y: auto;\n`\n\nconst NavContainer = styled.div`\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    left: 0;\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import * as Sentry from '@sentry/browser'\nimport React, { Component, ErrorInfo } from 'react'\n\ntype ErrorBoundaryState = {\n    error: Error | null\n    eventId: string | null\n}\n\nexport class ErrorBoundary extends Component<{}, ErrorBoundaryState> {\n    public state = {\n        error: null,\n        eventId: null,\n    }\n\n    public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        this.setState({ error })\n\n        Sentry.withScope(scope => {\n            scope.setExtras(errorInfo)\n            this.setState({ eventId: Sentry.captureException(error) })\n        })\n    }\n\n    public render() {\n        if (this.state.error) {\n            return (\n                <div>\n                    <h1>Error occurred ;(</h1>\n                    <a onClick={this.handleReportDialog}>Report feedback</a>\n                    <pre>{JSON.stringify(this.state.error, null, 2)}</pre>\n                </div>\n            )\n        }\n\n        return this.props.children\n    }\n\n    private handleReportDialog = () => {\n        Sentry.showReportDialog({ eventId: this.state.eventId })\n    }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport * as Sentry from '@sentry/browser'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './styles/global.css'\nimport { GlobalStateProvider } from './store'\nimport { ErrorBoundary } from './components/ErrorBoundary'\n\nSentry.init({\n    dsn: 'https://adf49e52f07d479098537009eb0044b0@sentry.io/1446350',\n})\n\nrender(\n    <ErrorBoundary>\n        <GlobalStateProvider>\n            <App />\n        </GlobalStateProvider>\n    </ErrorBoundary>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { dispatch, useGlobalState } from './state/store'\nimport { useEffect, useState } from 'react'\nimport { firebaseApp } from './firebase'\nimport { Word, WordAction } from './state/types/State'\n\nexport const useWordsPersist = () => {\n    const [user] = useGlobalState('user')\n    const [localWords] = useGlobalState('words')\n\n    useEffect(() => {\n        // Waiting for user status…\n        if (user === undefined) return\n\n        // User is logged out\n        if (user === null) {\n            dispatch({ type: 'WORDS/SET', payload: [] })\n            return\n        }\n\n        // Listen on words updates\n        const unsubscribe = firebaseApp\n            .firestore()\n            .collection('users')\n            .doc(user.id)\n            .collection('words')\n            .onSnapshot(snapshot => {\n                const serverWords: Word[] = []\n\n                snapshot.forEach(doc => {\n                    const data = doc.data()\n                    serverWords.push({\n                        id: doc.id,\n                        name: data.name,\n                        translation: data.translation,\n                        example: data.example,\n                    })\n                })\n\n                dispatch({ type: 'WORDS/SET', payload: serverWords })\n            })\n\n        return unsubscribe\n    }, [user])\n\n    // This one react only when words are changed (action field in Word)\n    useEffect(() => {\n        if (!localWords) return\n\n        const wordToAdd = localWords.filter(w => w.action === WordAction.Add)\n        const wordToDelete = localWords.filter(w => w.action === WordAction.Delete)\n\n        if ((!wordToAdd && !wordToDelete) || !user) return\n\n        const wordsFirebaseRef = firebaseApp\n            .firestore()\n            .collection('users')\n            .doc(user.id)\n            .collection('words')\n\n        wordToAdd.forEach(word => {\n            const newWord: Word = { ...word }\n            // Very important one, without this we will have infinite loop :O\n            delete newWord.action\n            delete newWord.id // Also we can remove local ID\n\n            wordsFirebaseRef.add(newWord)\n        })\n\n        wordToDelete.forEach(word => {\n            wordsFirebaseRef.doc(word.id).delete()\n        })\n    }, [localWords, user])\n}\n"],"sourceRoot":""}