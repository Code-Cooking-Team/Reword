{"version":3,"sources":["styles/colors.ts","styles/shadow.ts","components/Icon/icons/home.tsx","components/Icon/icons/play.tsx","components/Icon/icons/plus.tsx","components/Icon/icons/profile.tsx","components/Icon/icons/words.tsx","components/Icon/Icon.tsx","store/types/RouteName.ts","components/Nav/Nav.tsx","styles/transitions.ts","components/Keyboard/getKeysForWord.tsx","components/Keyboard/Key.tsx","components/Keyboard/Keyboard.tsx","components/Typewriter/Pipe.tsx","components/Typewriter/Typewriter.tsx","store/state/types/State.ts","store/state/initialState.ts","store/state/reducer.ts","store/state/helpers/reducerLogger.ts","store/state/store.ts","store/useRouter.ts","store/useWords.ts","store/firebase.ts","screens/Game/Game.tsx","components/Logo/Logo.tsx","store/useIsLoading.ts","screens/Home/StartButton.tsx","screens/Home/Home.tsx","components/Button/Button.tsx","components/Header/Header.tsx","components/Input/Input.tsx","screens/Settings/Settings.tsx","components/FloatingButton/FloatingButton.tsx","styles/animations.ts","components/Modal/Modal.tsx","components/Search/Search.tsx","hooks/useDictionary/fetchDictionary.ts","hooks/useDictionary/useDictionary.ts","hooks/useDebounce.ts","screens/Words/WordsItem.tsx","screens/Words/Words.tsx","App.tsx","serviceWorker.ts","components/ErrorBoundary/ErrorBoundary.tsx","index.tsx","store/useWordsPersist.ts"],"names":["brand","white","light","muted","gray","floatingShadow","home","size","react_default","a","createElement","width","height","viewBox","fillRule","clipRule","d","play","plus","profile","words","RouteName","sizes","normal","large","Icon","_ref","name","_ref$size","_ref$block","block","Container","icons","styled","div","_templateObject","p","Nav","prop","react","Nav_Container","NavButton","isActive","active","Home","onClick","onChange","Icon_Icon","Words","Profile","nav","Nav_templateObject","button","_templateObject2","props","activeCSS","inActiveCSS","css","_templateObject3","_templateObject4","special","KEYS","map","row","split","getKey","key","word","fakeKeys","random","seedRandom","visible","includes","Key","Key_Container","isSpace","symbol","esm","keyEventName","KEYPRESS","keyValue","onKeyHandle","Key_templateObject","highlight","Key_templateObject2","Keyboard","Keyboard_Container","originalWord","arguments","length","undefined","toLowerCase","k","getKeysForWord","i","Row","Key_Key","onPress","Keyboard_templateObject","Keyboard_templateObject2","Pipe","pipeSpring","useSpring","transform","from","PipeContainer","style","animated","span","Pipe_templateObject","WordAction","Typewriter","progress","typed","substr","Typewriter_Container","lib_default","widthOnly","maxFontSize","TypeWrapper","w","Segment","Pipe_Pipe","Letter","letterState","Typewriter_templateObject","Typewriter_templateObject2","Typewriter_templateObject3","Typewriter_templateObject4","initialState","route","lastRoutes","user","reducerFunc","createStore","state","action","type","Object","objectSpread","payload","concat","toConsumableArray","slice","newWord","id","uuid","Add","Delete","Error","console","log","GlobalStateProvider","dispatch","useGlobalState","useRouter","_useGlobalState","slicedToArray","setRoute","goBack","useWords","addWord","translation","example","removeWord","randomWord","Math","floor","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Game_templateObject","Game_templateObject2","Bottom","Game_templateObject3","Complete","Game_templateObject4","Button","_templateObject5","Logo","reSpring","opacity","delay","wordSpring","Logo_Container","First","Logo_Pipe","Last","h1","Logo_templateObject","Logo_templateObject2","Logo_templateObject3","Logo_templateObject4","useIsLoading","_useGlobalState3","StartButton","loading","CircleButton","Game","StartButton_templateObject","Home_templateObject","WordsCount","Home_templateObject2","Button_templateObject","Header","HeaderWrapper","iconName","title","children","header","Header_templateObject","Input","value","_props$type","placeholder","autoFocus","_useState","useState","_useState2","focus","setFocus","_useState3","_useState4","linePosition","setLinePosition","labelRef","useRef","defaultLinePosition","current","getBoundingClientRect","useEffect","Label","onMouseDown","e","pageX","ref","LabelName","move","InputStyled","event","target","onFocus","onBlur","transformOrigin","label","Input_templateObject","Input_templateObject2","input","Input_templateObject3","FormWrapper","Settings_templateObject","FloatingButton","FloatingButton_Button","FloatingButton_templateObject","NAV_HEIGHT","easing","fadeUpKeyframes","keyframes","animations_templateObject","fadeDownKeyframes","animations_templateObject2","fadeInKeyframes","animations_templateObject3","fadeOutKeyframes","animations_templateObject4","fadeUpAnimation","animations_templateObject5","fadeDownAnimation","_templateObject6","fadeInAnimation","_templateObject8","fadeOutAnimation","_templateObject9","Modal","ReactDOM","createPortal","Transition","in","show","timeout","status","Fragment","ModalBox","footer","Overlay","close","modalRoot","document","getElementById","Modal_templateObject","_templateObject7","ENTERING","EXITING","EXITED","Modal_templateObject2","_templateObject10","Search","Search_Input","Search_templateObject","alphabet","cache","fetchDictionary","asyncToGenerator","regenerator_default","mark","_callee","letter","res","data","wrap","_context","prev","next","abrupt","fetch","sent","json","stop","_x","apply","this","useDictionary","query","currentQuery","setCurrentQuery","results","setResults","fn","ms","args","handle","setTimeout","bind","clearTimeout","useDebounce","useMemo","list","filter","item","startsWith","run","WordsItem","WordsItem_Container","Name","Translations","join","Examples","RemoveButton","WordsItem_templateObject","strong","WordsItem_templateObject2","WordsItem_templateObject3","WordsItem_templateObject4","WordsItem_templateObject5","AutocompleteItem","Words_templateObject","screens","_screens","defineProperty","isLoading","Home_Container","Logo_Logo","StartButton_StartButton","_useWords","search","setSearch","showModal","setShowModal","_useState5","_useState6","setWord","_useState7","_useState8","setTranslation","_useState9","_useState10","setExample","addNewWord","trim","getTrans","trans","t","texts","Header_Header","Search_Search","WordsItem_WordsItem","FloatingButton_FloatingButton","Modal_Modal","Input_Input","email","setEmail","password","setPassword","Button_Button","auth","signOut","onSubmit","preventDefault","createUserWithEmailAndPassword","catch","m","signInWithEmailAndPassword","setProgress","wordRight","isComplete","handleNextWord","Game_Container","Game_Row","Typewriter_Typewriter","Keyboard_Keyboard","toLocaleLowerCase","Content","main","App_templateObject","NavContainer","App_templateObject2","Boolean","window","location","hostname","match","ErrorBoundary","_Component","_getPrototypeOf2","_this","classCallCheck","_len","Array","_key","possibleConstructorReturn","getPrototypeOf","call","error","eventId","handleReportDialog","Sentry","inherits","createClass","errorInfo","_this2","setState","scope","setExtras","JSON","stringify","Component","dsn","render","ErrorBoundary_ErrorBoundary","localWords","firestore","collection","doc","onSnapshot","snapshot","serverWords","forEach","push","wordToAdd","wordToDelete","wordsFirebaseRef","add","delete","useWordsPersist","_useRouter","Page","onAuthStateChanged","uid","displayName","Nav_Nav","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9be14bf5.chunk.js","sourcesContent":["export const brand = '#9438EA'\nexport const white = '#FFFFFF'\nexport const black = '#000000'\nexport const light = 'rgba(0, 0, 0, 0.1)'\nexport const muted = 'rgba(0, 0, 0, 0.3)'\nexport const gray = 'rgba(0, 0, 0, 0.6)'\nexport const good = '#AED900'\nexport const danger = '#EA388D'\n","export const barShadow = '0 0 10px rgba(0, 0, 0, 0.1)'\nexport const floatingShadow = '2px 2px 7px rgba(0, 0, 0, 0.1)'\n","import React from 'react'\n\nexport const home = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M5 12.5H2L12 3.5L22 12.5H19V20.5H13V14.5H11V20.5H5V12.5ZM17 10.69L12 6.19L7 10.69V18.5H9V12.5H15V18.5H17V10.69Z\"\n        />\n    </svg>\n)\n","import React from 'react'\n\nexport const play = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 61 61\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M44.4792 30.5L16.5208 48.2917V12.7083L44.4792 30.5ZM34.9988 30.5L21.6042 21.96V39.04L34.9988 30.5Z\"\n        />\n    </svg>\n)\n","import React from 'react'\n\nexport const plus = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path d=\"M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n    </svg>\n)\n","import React from 'react'\n\nexport const profile = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12 4C9.79 4 8 5.79 8 8C8 10.21 9.79 12 12 12C14.21 12 16 10.21 16 8C16 5.79 14.21 4 12 4ZM14 8C14 6.9 13.1 6 12 6C10.9 6 10 6.9 10 8C10 9.1 10.9 10 12 10C13.1 10 14 9.1 14 8ZM18 18C17.8 17.29 14.7 16 12 16C9.31 16 6.23 17.28 6 18H18ZM4 18C4 15.34 9.33 14 12 14C14.67 14 20 15.34 20 18V20H4V18Z\"\n        />\n    </svg>\n)\n","import React from 'react'\n\nexport const words = (size: number) => (\n    <svg width={size} height={size} viewBox=\"0 0 24 24\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12.87 15.07L10.33 12.56L10.36 12.53C12.1 10.59 13.34 8.36 14.07 6H17V4H10V2H8V4H1V5.99H12.17C11.5 7.92 10.44 9.75 9 11.35C8.07 10.32 7.3 9.19 6.69 8H4.69C5.42 9.63 6.42 11.17 7.67 12.56L2.58 17.58L4 19L9 14L12.11 17.11L12.87 15.07ZM18.5 10H16.5L12 22H14L15.12 19H19.87L21 22H23L18.5 10ZM17.5 12.67L15.88 17H19.12L17.5 12.67Z\"\n        />\n    </svg>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport * as icons from './icons'\n\nconst sizes = {\n    normal: 24,\n    large: 62,\n}\n\nexport type IconName = keyof typeof icons\nexport type IconSize = keyof typeof sizes\n\ntype IconProps = {\n    name: IconName\n    size?: IconSize\n    block?: boolean\n}\n\nexport const Icon = ({ name, size = 'normal', block = false }: IconProps) => (\n    <Container block={block}>{icons[name](sizes[size])}</Container>\n)\n\nconst Container = styled.div<{ block: boolean }>`\n    display: ${p => (p.block ? 'block' : 'inline-block')};\n    vertical-align: middle;\n    svg {\n        display: block;\n        margin: auto;\n        fill: currentColor;\n    }\n`\n","export enum RouteName {\n    Home = 'home',\n    Words = 'words',\n    Profile = 'profile',\n    Game = 'game',\n}\n","import * as React from 'react'\nimport styled, { css } from 'styled-components'\nimport { white, gray, brand } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { Icon } from '../Icon'\nimport { fast } from '../../styles/transitions'\nimport { RouteName } from '../../store/types/RouteName'\n\nexport const NAV_HEIGHT = 60\n\ntype NavProps = {\n    active: RouteName\n    onChange(page: RouteName): void\n}\n\nexport const Nav = (prop: NavProps) => {\n    return (\n        <Container>\n            <NavButton\n                isActive={prop.active === RouteName.Home}\n                onClick={() => prop.onChange(RouteName.Home)}\n            >\n                <Icon name=\"home\" block />\n                Home\n            </NavButton>\n            <NavButton\n                isActive={prop.active === RouteName.Words}\n                onClick={() => prop.onChange(RouteName.Words)}\n            >\n                <Icon name=\"words\" block />\n                Words\n            </NavButton>\n            <NavButton\n                isActive={prop.active === RouteName.Profile}\n                onClick={() => prop.onChange(RouteName.Profile)}\n            >\n                <Icon name=\"profile\" block />\n                Profile\n            </NavButton>\n        </Container>\n    )\n}\n\nconst Container = styled.nav`\n    background: ${white};\n    display: flex;\n    width: 100%;\n    min-height: ${NAV_HEIGHT}px;\n    justify-content: space-evenly;\n    box-shadow: ${barShadow};\n    overflow: hidden;\n`\n\nconst NavButton = styled.button<{ isActive: boolean }>`\n    color: ${props => (props.isActive ? brand : gray)};\n    display: block;\n    background: none;\n    border: none;\n    padding: 10px 25px;\n    position: relative;\n    line-height: 1.5em;\n    &::after {\n        content: '';\n        display: block;\n        border-radius: 100%;\n        height: 60px;\n        width: 60px;\n        position: absolute;\n        margin: auto;\n        top: -50px;\n        bottom: -50px;\n        left: -50px;\n        right: -50px;\n        ${props => (props.isActive ? activeCSS : inActiveCSS)};\n    }\n    &:active::after {\n        transition: opacity 0.6s ease-out, background 0.6s ease-out, transform 1s ease-out;\n        opacity: 0.1;\n        transform: scale(1.2);\n        background: ${brand};\n    }\n`\n\nconst activeCSS = css`\n    transition: all ${fast};\n    opacity: 0;\n    transform: scale(2);\n    background: ${brand};\n`\n\nconst inActiveCSS = css`\n    transition: all 0 ease;\n    opacity: 0.3;\n    transform: scale(1);\n    background: rgba(255, 255, 255, 0);\n`\n","export const fast = '0.2s ease'\n","import seedRandom from 'seed-random'\n\nconst special = \"' ,\"\n\nconst KEYS = ['qwertyuiop', 'asdfghjkl', 'zxcvbnm', special].map(row => row.split(''))\n\ntype WordKey = {\n    visible: boolean\n    key: string\n}\n\ntype WordKeyList = WordKey[][]\n\nexport const getKeysForWord = (originalWord: string, fakeKeys = 0): WordKeyList => {\n    const word = originalWord.toLowerCase()\n\n    return KEYS.map(row => row.map(k => getKey(k, word, fakeKeys)))\n}\n\nconst getKey = (key: string, word: string, fakeKeys: number): WordKey => {\n    const random = fakeKeys ? seedRandom(key + word)() : 0\n\n    return {\n        key,\n        visible: word.includes(key) || (fakeKeys > random && !special.includes(key)),\n    }\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { brand, white } from '../../styles/colors'\nimport { fast } from '../../styles/transitions'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\n\ninterface KeyProps {\n    onClick(): void\n    symbol?: string\n    visible?: boolean\n}\n\nexport const Key = (props: KeyProps) => (\n    <Container\n        visible={props.visible}\n        onClick={props.onClick}\n        isSpace={props.symbol === ' '}\n    >\n        {props.symbol}\n        <KeyHandler\n            keyEventName={KEYPRESS}\n            keyValue={props.symbol}\n            onKeyHandle={props.onClick}\n        />\n    </Container>\n)\n\nconst Container = styled.button<{ visible?: boolean; isSpace?: boolean }>`\n    width: ${p => (p.isSpace ? '47vw' : '8vw')};\n    height: 7vh;\n    padding: 0;\n    margin: 0 4px;\n    border: 2px solid ${brand};\n    opacity: ${p => (p.visible ? 1 : 0.1)};\n    border-radius: 4px;\n    color: ${brand};\n    font-weight: bold;\n    font-size: 24px;\n    text-align: center;\n    background: none;\n    transition: all ${fast};\n\n    ${p => p.visible && highlight}\n`\nconst highlight = css`\n    &:active {\n        outline: none;\n        background-color: ${brand};\n        color: ${white};\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { getKeysForWord } from './getKeysForWord'\nimport { white } from '../../styles/colors'\nimport { barShadow } from '../../styles/shadow'\nimport { Key } from './Key'\n\ninterface KeyboardProps {\n    word: string\n    onPress(key: string): void\n    fakeKeys?: number\n}\n\nexport const Keyboard = (props: KeyboardProps) => (\n    <Container>\n        {getKeysForWord(props.word, props.fakeKeys).map((row, i) => (\n            <Row key={i}>\n                {row.map(k => (\n                    <Key\n                        key={k.key}\n                        symbol={k.key}\n                        visible={k.visible}\n                        onClick={() => {\n                            if (k.visible) {\n                                props.onPress(k.key)\n                            }\n                        }}\n                    />\n                ))}\n            </Row>\n        ))}\n    </Container>\n)\n\nconst Container = styled.div`\n    padding: 0 0 50px;\n    background: ${white};\n    box-shadow: ${barShadow};\n`\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 10px 5px 0;\n`\n\nexport const vibrateOk = () => navigator.vibrate(1)\nexport const vibrateBad = () => navigator.vibrate([1, 100, 1, 100, 1])\n","import React from 'react'\nimport styled from 'styled-components'\nimport { animated, useSpring } from 'react-spring'\nimport { brand } from '../../styles/colors'\n\nexport const Pipe = () => {\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-0.3em) scaleX(3)',\n        },\n    })\n    return <PipeContainer style={pipeSpring} />\n}\n\nconst PipeContainer = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 -0.05em;\n    vertical-align: middle;\n    background-color: ${brand};\n`\n","import React from 'react'\nimport ScaleText from 'react-scale-text'\nimport styled from 'styled-components'\nimport { brand, muted, black } from '../../styles/colors'\nimport { Pipe } from './Pipe'\n\ntype TypewriterProps = {\n    word: string\n    progress: number\n}\n\nexport const Typewriter = (props: TypewriterProps) => {\n    const { word, progress } = props\n    const typed = word.substr(0, progress)\n\n    return (\n        <Container>\n            <ScaleText widthOnly={true} maxFontSize={74}>\n                <TypeWrapper>\n                    {word.split('').map((w, i) => {\n                        return (\n                            <Segment key={w + i}>\n                                {i === progress && <Pipe key={typed} />}\n                                <Letter letterState={progress <= i}>{w}</Letter>\n                            </Segment>\n                        )\n                    })}\n                </TypeWrapper>\n            </ScaleText>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n    padding: 0px 25px;\n    overflow: hidden;\n    height: 2em;\n    width: 100%;\n    line-height: 2em;\n`\n\nconst TypeWrapper = styled.div`\n    white-space: nowrap;\n    position: relative;\n    width: 100%;\n`\n\nconst Segment = styled.span`\n    display: inline-block;\n    line-height: 1em;\n    height: 90px;\n    margin: 0 1px;\n    vertical-align: middle;\n    position: relative;\n`\n\nconst Letter = styled.span<{ letterState: boolean }>`\n    display: inline-block;\n    text-align: center;\n    position: relative;\n    margin: 0 0.025em;\n    height: 100%;\n    min-width: 25px;\n    transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n    transform: ${props => (props.letterState ? 'scale(0.5)' : 'scale(1)')};\n    color: ${props => (props.letterState ? 'rgba(255,255,255,0)' : black)};\n\n    &::after {\n        content: '*';\n        position: absolute;\n        text-align: center;\n        top: 0.5em;\n        left: 0;\n        right: 0;\n        line-height: 0.5em;\n        height: 20px;\n        transition: transform 0.25s cubic-bezier(0.3, 1.61, 0.43, 1.01);\n        color: ${muted};\n        transform: ${props => (props.letterState ? 'scale(2)' : 'scale(0)')};\n        opacity: ${props => (props.letterState ? 1 : 0)};\n    }\n`\n","import { RouteName } from '../../types/RouteName'\n\nexport enum WordAction {\n    Add,\n    Delete,\n}\n\nexport type Word = {\n    id: string\n    name: string\n    translation: string[]\n    example: string[]\n    action?: WordAction\n}\n\nexport type WordsState = Word[]\n\nexport type UserState = {\n    id: string\n    email: string\n    name: string\n}\n\nexport type State = {\n    route: RouteName\n    lastRoutes: RouteName[]\n    words?: WordsState\n    user?: UserState | null\n}\n","import { RouteName } from '../types/RouteName'\nimport { State } from './types/State'\n\nexport const initialState: State = {\n    route: RouteName.Words,\n    lastRoutes: [],\n    words: undefined,\n    user: undefined,\n}\n","import uuid from 'uuid'\nimport { Actions } from './types/Actions'\nimport { State, Word, WordAction } from './types/State'\n\nexport const reducer = (state: State, action: Actions) => {\n    switch (action.type) {\n        case 'ROUTER/SET_ROUTE':\n            return {\n                ...state,\n                route: action.payload.route,\n                lastRoutes: [state.route, ...state.lastRoutes],\n            }\n\n        case 'ROUTER/BACK':\n            return {\n                ...state,\n                route: state.lastRoutes[0],\n                lastRoutes: state.lastRoutes.slice(1),\n            }\n\n        case 'WORDS/SET':\n            return {\n                ...state,\n                words: action.payload,\n            }\n\n        case 'WORDS/ADD_WORD':\n            const newWord: Word = {\n                id: `local-${uuid()}`,\n                action: WordAction.Add,\n                ...action.payload,\n            }\n            return {\n                ...state,\n                words: [...state.words, newWord],\n            }\n\n        case 'WORDS/REMOVE_WORD':\n            return {\n                ...state,\n                words: state.words.map(word =>\n                    word.id === action.payload.id\n                        ? {\n                              ...word,\n                              action: WordAction.Delete,\n                          }\n                        : word\n                ),\n            }\n\n        case 'USER/CHANGE':\n            return {\n                ...state,\n                user: action.payload,\n            }\n\n        default:\n            throw new Error('[reducer] Unknown action type!')\n    }\n}\n","import { Actions } from '../types/Actions'\nimport { State } from '../types/State'\nimport { reducer } from '../reducer'\n\nexport const reducerLogger = (reducerFunc: typeof reducer) => (\n    state: State,\n    action: Actions\n) => {\n    console.log('→', action.type, action.payload)\n    return reducerFunc(state, action)\n}\n","import { createStore } from 'react-hooks-global-state'\nimport { reducerLogger } from './helpers/reducerLogger'\nimport { initialState } from './initialState'\nimport { reducer } from './reducer'\n\nexport const { GlobalStateProvider, dispatch, useGlobalState } = createStore(\n    reducerLogger(reducer),\n    initialState\n)\n","import { dispatch, useGlobalState } from './state/store'\nimport { RouteName } from './types/RouteName'\n\nexport const useRouter = () => {\n    const [route] = useGlobalState('route')\n\n    const setRoute = (route: RouteName) => {\n        dispatch({ type: 'ROUTER/SET_ROUTE', payload: { route } })\n    }\n\n    const goBack = () => {\n        dispatch({ type: 'ROUTER/BACK' })\n    }\n\n    return { route, setRoute, goBack }\n}\n","import { dispatch, useGlobalState } from './state/store'\n\nexport const useWords = () => {\n    const [words] = useGlobalState('words')\n\n    const addWord = (name: string, translation: string[], example?: string[]) => {\n        dispatch({ type: 'WORDS/ADD_WORD', payload: { name, translation, example } })\n    }\n\n    const removeWord = (id: string) => {\n        dispatch({ type: 'WORDS/REMOVE_WORD', payload: { id } })\n    }\n\n    const randomWord = () => {\n        return words[Math.floor(Math.random() * words.length)]\n    }\n\n    return { words, addWord, removeWord, randomWord }\n}\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyATMnw8FbczS1-0yJwrHl98EunKDAjE1DM',\n    authDomain: 'reword-1.firebaseapp.com',\n    databaseURL: 'https://reword-1.firebaseio.com',\n    projectId: 'reword-1',\n    storageBucket: 'reword-1.appspot.com',\n    messagingSenderId: '220877466530',\n    appId: '1:220877466530:web:7c95c058eaa3a7ed',\n}\nexport const firebaseApp = firebase.initializeApp(firebaseConfig)\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\nimport { Keyboard } from '../../components/Keyboard'\nimport { Typewriter } from '../../components/Typewriter'\nimport { useWords, useRouter } from '../../store'\nimport { Word } from '../../store/state/types/State'\nimport { Icon } from '../../components/Icon'\nimport { good, white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\nimport ScaleText from 'react-scale-text'\n\nexport const Game = () => {\n    const { goBack } = useRouter()\n    const { randomWord } = useWords()\n    const [progress, setProgress] = useState(0)\n    const [word, setWord] = useState(randomWord())\n\n    const wordRight = word.name.substr(progress)\n    const isComplete = progress === word.name.length\n\n    const handleKeyPress = (key: string) => {\n        const currentWord = word.name[progress].toLocaleLowerCase()\n        if (key === currentWord) {\n            setProgress(progress + 1)\n        }\n    }\n\n    const handleNextWord = () => {\n        setWord(randomWord())\n        setProgress(0)\n    }\n\n    return (\n        <Container>\n            <Row>\n                <ScaleText maxFontSize={24}>\n                    <div>\n                        <h1>{word.translation}</h1>\n                        <h5>{isComplete ? word.example : '\\u00a0'}</h5>\n                    </div>\n                </ScaleText>\n            </Row>\n            <Row>\n                <Typewriter word={word.name} progress={progress} key={word.name} />\n                <button onClick={goBack}>Cancel</button>\n            </Row>\n            <Bottom>\n                <Keyboard word={wordRight} onPress={handleKeyPress} />\n                {isComplete && (\n                    <Complete>\n                        <h2>Done!</h2>\n                        <Button onClick={handleNextWord}>\n                            Next word\n                            <Icon name=\"play\" />\n                        </Button>\n\n                        <KeyHandler\n                            keyEventName={KEYPRESS}\n                            keyValue=\"Enter\" // enter\n                            onKeyHandle={handleNextWord}\n                        />\n                    </Complete>\n                )}\n            </Bottom>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    /* display: grid; */\n    /* grid-template-rows: 1fr 2fr auto; */\n    height: 100%;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    text-align: center;\n    overflow: hidden;\n`\nconst Row = styled.div`\n    width: 100%;\n    flex: 1 0 auto;\n`\n\nconst Bottom = styled.div`\n    width: 100%;\n    position: relative;\n`\n\nconst Complete = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Button = styled.button`\n    padding: 30px 50px;\n    border: none;\n    color: ${white};\n    background: ${good};\n    border-radius: 4px;\n    box-shadow: ${floatingShadow};\n    font-weight: bold;\n    font-size: 24px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useSpring, animated } from 'react-spring'\nimport { brand } from '../../styles/colors'\n\nexport const Logo = () => {\n    const reSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 200,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const wordSpring = useSpring({\n        opacity: 1,\n        transform: 'translate(0)',\n        delay: 300,\n        from: {\n            opacity: 0,\n            transform: 'translate(-0.2em)',\n        },\n    })\n    const pipeSpring = useSpring({\n        transform: 'translate(0) scaleX(1)',\n        from: {\n            transform: 'translate(-1.2em) scaleX(5)',\n        },\n    })\n\n    return (\n        <Container>\n            <First style={reSpring}>Re</First>\n            <Pipe style={pipeSpring} />\n            <Last style={wordSpring}>word</Last>\n        </Container>\n    )\n}\n\nconst Container = styled.h1`\n    text-align: center;\n    font-size: 74px;\n    font-weight: normal;\n`\n\nconst First = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Last = styled(animated.span)`\n    display: inline-block;\n`\n\nconst Pipe = styled(animated.span)`\n    display: inline-block;\n    height: 1em;\n    width: 0.1em;\n    margin: 0 0.05em;\n    vertical-align: middle;\n    background-color: ${brand};\n`\n","import { useGlobalState } from './state/store'\n\nexport const useIsLoading = () => {\n    const [words] = useGlobalState('words')\n    const [user] = useGlobalState('user')\n\n    return words === undefined || user === undefined\n}\n","import React from 'react'\nimport { WordsState } from '../../store/state/types/State'\nimport { useRouter } from '../../store'\nimport { RouteName } from '../../store/types/RouteName'\nimport { Icon } from '../../components/Icon'\nimport { white, brand } from '../../styles/colors'\nimport styled from 'styled-components'\nimport { floatingShadow } from '../../styles/shadow'\n\ntype StartButtonProps = {\n    words: WordsState\n    loading: boolean\n}\n\nexport const StartButton = (props: StartButtonProps) => {\n    const { setRoute } = useRouter()\n\n    if (props.loading) {\n        return <CircleButton>Loading</CircleButton>\n    }\n\n    if (!props.words.length) {\n        return (\n            <CircleButton onClick={() => setRoute(RouteName.Words)}>\n                <Icon name=\"plus\" size=\"large\" block />\n                Word\n            </CircleButton>\n        )\n    }\n\n    return (\n        <CircleButton onClick={() => setRoute(RouteName.Game)}>\n            <Icon name=\"play\" size=\"large\" block />\n            Play\n        </CircleButton>\n    )\n}\n\nconst playSize = '45vmin'\n\nconst CircleButton = styled.button`\n    background: ${white};\n    border: none;\n    box-shadow: ${floatingShadow};\n    width: ${playSize};\n    height: ${playSize};\n    max-width: 260px;\n    max-height: 260px;\n    border-radius: 100%;\n    color: ${brand};\n    font-size: 36px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Logo } from '../../components/Logo'\nimport { useWords } from '../../store'\nimport { useIsLoading } from '../../store/useIsLoading'\nimport { StartButton } from './StartButton'\n\nexport const Home = () => {\n    const isLoading = useIsLoading()\n    const { words } = useWords()\n\n    return (\n        <Container>\n            <Logo />\n            <Container>\n                <StartButton words={words} loading={isLoading} />\n            </Container>\n            <WordsCount>\n                {!isLoading && (\n                    <>\n                        You added <b>{words.length}</b> words\n                    </>\n                )}\n            </WordsCount>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: grid;\n    height: 100%;\n    grid-auto-rows: 1fr 3fr 1fr;\n    align-items: center;\n    justify-items: center;\n`\n\nconst WordsCount = styled.div`\n    padding: 25px;\n    text-align: center;\n`\n","import styled from 'styled-components'\nimport { brand } from '../../styles/colors'\n\nexport const Button = styled.button`\n    display: inline-block;\n    padding: 5px 15px;\n    border: 2px solid ${brand};\n    border-radius: 5px;\n    background: transparent;\n`\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { IconName, Icon } from '../Icon'\n\ntype HeaderProps = {\n    title: string\n    iconName: IconName\n    children?: ReactNode\n}\n\nexport const Header = (props: HeaderProps) => {\n    return (\n        <HeaderWrapper>\n            <Icon name={props.iconName} size=\"large\" />\n            <h1>{props.title}</h1>\n            {props.children}\n        </HeaderWrapper>\n    )\n}\n\nconst HeaderWrapper = styled.header`\n    display: flex;\n    min-height: 260px;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { brand, muted } from '../../styles/colors'\n\ntype InputProps = {\n    value: string\n    type?: string\n    name?: string\n    placeholder: string\n    onChange: (value: string) => void\n    autoFocus?: boolean\n}\n\nexport const Input = (props: InputProps) => {\n    const { value, type = 'text', placeholder, onChange, autoFocus, name } = props\n\n    const [focus, setFocus] = useState(false)\n    const [linePosition, setLinePosition] = useState(0)\n\n    const labelRef = useRef<HTMLLabelElement>(null)\n\n    const defaultLinePosition = labelRef.current\n        ? labelRef.current.getBoundingClientRect().width / 2\n        : 0\n\n    useEffect(() => {\n        setLinePosition(defaultLinePosition)\n    }, [defaultLinePosition])\n\n    return (\n        <Label\n            active={focus}\n            onMouseDown={e => {\n                setLinePosition(e.pageX)\n            }}\n            ref={labelRef}\n        >\n            <LabelName move={value !== ''}>{placeholder}</LabelName>\n            <InputStyled\n                type={type}\n                value={value}\n                onChange={event => onChange(event.target.value)}\n                onFocus={() => setFocus(true)}\n                onBlur={() => {\n                    setLinePosition(defaultLinePosition)\n                    setFocus(false)\n                }}\n                autoFocus={autoFocus}\n                name={name}\n            />\n            <span style={{ transformOrigin: `${linePosition}px 0` }} />\n        </Label>\n    )\n}\n\nconst Label = styled.label<{ active: boolean }>`\n    position: relative;\n    display: block;\n    span {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: 2px;\n        opacity: 1;\n        transition: transform 0.25s ease-out;\n        transform: scaleX(${props => (props.active ? 1 : 0)});\n        background: ${brand};\n        pointer-events: none;\n    }\n`\n\nconst LabelName = styled.div<{ move: boolean }>`\n    position: absolute;\n    top: 9px;\n    left: 0px;\n    font-size: 15px;\n    transition: transform 0.15s ease-out;\n    color: ${muted};\n    cursor: text;\n    transform-origin: 0 0; // top left for scale\n    transform: ${props =>\n        props.move ? `translateY(-17px) scale(0.8)` : `translate(0px)`};\n`\n\nconst InputStyled = styled.input`\n    padding: 12px 0 9px;\n    border: none;\n    font-size: 15px;\n    display: block;\n    width: 100%;\n    margin: 15px 0;\n    border-bottom: 2px solid ${muted};\n`\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Button } from '../../components/Button'\nimport { Header } from '../../components/Header'\nimport { Input } from '../../components/Input'\nimport { firebaseApp } from '../../store/firebase'\nimport { useGlobalState } from '../../store/state/store'\nimport { useIsLoading } from '../../store/useIsLoading'\n\nexport const Settings = () => {\n    const isLoading = useIsLoading()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [user] = useGlobalState('user')\n\n    if (isLoading) {\n        return (\n            <div>\n                <Header title=\"Settings\" iconName=\"profile\" />\n                <p>Loading…</p>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <Header title=\"Settings\" iconName=\"profile\" />\n            {!user ? (\n                <>\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault()\n                            firebaseApp\n                                .auth()\n                                .createUserWithEmailAndPassword(email, password)\n                                .catch(m => console.log(m))\n                        }}\n                    >\n                        <FormWrapper>\n                            <h2>Create an account</h2>\n                            <Input\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                placeholder=\"email\"\n                            />\n                            <Input\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                placeholder=\"password\"\n                            />\n                            <Button>Sign up</Button>\n                        </FormWrapper>\n                    </form>\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault()\n                            firebaseApp\n                                .auth()\n                                .signInWithEmailAndPassword(email, password)\n                                .catch(m => console.log(m))\n                        }}\n                    >\n                        <FormWrapper>\n                            <h2>I already have an account</h2>\n                            <Input\n                                name=\"email\"\n                                value={email}\n                                onChange={setEmail}\n                                placeholder=\"email\"\n                            />\n                            <Input\n                                name=\"password\"\n                                type=\"password\"\n                                value={password}\n                                onChange={setPassword}\n                                placeholder=\"password\"\n                            />\n                            <Button>Sign in</Button>\n                        </FormWrapper>\n                    </form>\n                </>\n            ) : (\n                <Button\n                    type=\"button\"\n                    onClick={() => {\n                        firebaseApp.auth().signOut()\n                    }}\n                >\n                    Sign out\n                </Button>\n            )}\n        </div>\n    )\n}\n\nconst FormWrapper = styled.div`\n    padding: 30px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { IconName, Icon } from '../Icon'\nimport { brand, white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\nimport { NAV_HEIGHT } from '../Nav'\n\ntype FloatingButtonProps = {\n    onClick: () => void\n    iconName: IconName\n}\n\nexport const FloatingButton = (props: FloatingButtonProps) => (\n    <Button onClick={props.onClick}>\n        <Icon name={props.iconName} size=\"normal\" />\n    </Button>\n)\n\nconst Button = styled.button`\n    position: fixed;\n    bottom: ${NAV_HEIGHT + 15}px;\n    right: 15px;\n    padding: 12px;\n    border: 2px solid ${white};\n    color: ${brand};\n    box-shadow: ${floatingShadow};\n    border-radius: 50%;\n    background: ${white};\n    transition: 0.2s;\n    &:active {\n        border-color: ${brand};\n    }\n`\n","import {\n    ENTERING,\n    EXITED,\n    EXITING,\n    TransitionStatus,\n} from 'react-transition-group/Transition'\nimport { css, keyframes } from 'styled-components'\n\nexport const fadeDuration = 400\nconst easing = 'cubic-bezier(0.29, 0.87, 0.54, 0.99)'\n\nconst fadeUpKeyframes = keyframes`\n    from {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n    to {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n`\n\nconst fadeDownKeyframes = keyframes`\n    from {\n        transform: translateY(0px);\n        opacity: 1;\n    }\n    to {\n        transform: translateY(80px);\n        opacity: 0;\n    }\n`\n\nconst fadeInKeyframes = keyframes`\n    from { opacity: 0; }\n    to { opacity: 1; }\n`\n\nconst fadeOutKeyframes = keyframes`\n    from { opacity: 1; }\n    to { opacity: 0; }\n`\n\nexport const fadeUpAnimation = css`\n    animation: ${fadeUpKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeDownAnimation = css`\n    animation: ${fadeDownKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeUpDownAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeUpAnimation};\n    ${status === EXITING && fadeDownAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'display: none;'};\n`\n\nexport const fadeInAnimation = css`\n    animation: ${fadeInKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeOutAnimation = css`\n    animation: ${fadeOutKeyframes} ${fadeDuration}ms ${easing} forwards;\n`\n\nexport const fadeInOutAnimation = (status: TransitionStatus) => css`\n    ${status === ENTERING && fadeInAnimation};\n    ${status === EXITING && fadeOutAnimation};\n    ${status === EXITING && `pointer-events: none;`};\n    ${status === EXITED && 'display: none;'};\n`\n","import React, { ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport Transition, { TransitionStatus } from 'react-transition-group/Transition'\nimport styled from 'styled-components'\nimport { fadeInOutAnimation, fadeUpDownAnimation } from '../../styles/animations'\nimport { white } from '../../styles/colors'\nimport { floatingShadow } from '../../styles/shadow'\n\ntype ModalProps = {\n    show: boolean\n    children?: ReactNode\n    footer?: () => ReactNode\n    close?: () => void\n}\n\nexport const Modal = (props: ModalProps) => {\n    return ReactDOM.createPortal(\n        <Transition in={props.show} timeout={1000}>\n            {status => (\n                <>\n                    <ModalBox status={status}>\n                        {props.children}\n                        {props.footer && props.footer()}\n                    </ModalBox>\n                    <Overlay status={status} onClick={props.close} />\n                </>\n            )}\n        </Transition>,\n        modalRoot\n    )\n}\n\nconst modalRoot = document.getElementById('modals')\n\nconst ModalBox = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 15px;\n    margin: 0 auto auto;\n    width: calc(100vw - 20px);\n    max-height: calc(100vh - 20px);\n    overflow-y: auto;\n    background: ${white};\n    border-radius: 4px;\n    z-index: 1000;\n    padding: 15px;\n    box-shadow: ${floatingShadow};\n    ${p => fadeUpDownAnimation(p.status)};\n`\n\nconst Overlay = styled.div<{ status: TransitionStatus }>`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.1);\n    z-index: 100;\n    ${p => fadeInOutAnimation(p.status)};\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\ntype SearchProps = {\n    value: string\n    onChange: (value: string) => void\n}\n\nexport const Search = (props: SearchProps) => (\n    <Input\n        type=\"search\"\n        value={props.value}\n        onChange={e => props.onChange(e.target.value)}\n        placeholder=\"Search…\"\n    />\n)\n\nconst Input = styled.input``\n","import { DictionaryItem } from './types'\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('')\nconst cache = {}\n\nexport const fetchDictionary = async (\n    letter: string\n): Promise<DictionaryItem[] | null> => {\n    if (!alphabet.includes(letter)) {\n        return null\n    }\n\n    if (cache[letter]) {\n        return cache[letter]\n    }\n\n    const res = await fetch(`/dictionary/en-pl/${letter}.json`)\n    const data: DictionaryItem[] = await res.json()\n\n    cache[letter] = data\n\n    return data\n}\n","import { useState, useMemo } from 'react'\nimport { useDebounce } from '../useDebounce'\nimport { fetchDictionary } from './fetchDictionary'\nimport { DictionaryItem } from './types'\n\nexport const useDictionary = (query: string) => {\n    const [currentQuery, setCurrentQuery] = useState('')\n\n    const [results, setResults] = useState<DictionaryItem[]>([])\n\n    useDebounce(() => setCurrentQuery(query.toLowerCase()), 400, [query])\n\n    useMemo(() => {\n        const letter = (currentQuery[0] || '').toLowerCase()\n\n        const run = async () => {\n            const list = await fetchDictionary(letter)\n\n            if (!list) {\n                setResults([])\n                return\n            }\n\n            const results = list\n                .filter(item => item.word.toLowerCase().startsWith(currentQuery))\n                .slice(0, 5)\n\n            setResults(results)\n        }\n\n        run()\n    }, [currentQuery])\n\n    return { results }\n}\n","import { useEffect } from 'react'\n\nexport const useDebounce = (fn: () => any, ms: number = 0, args: any[] = []) => {\n    useEffect(() => {\n        const handle = setTimeout(fn.bind(null, args), ms)\n\n        return () => {\n            clearTimeout(handle)\n        }\n    }, [args, fn, ms])\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Word } from '../../store/state/types/State'\nimport { light, brand, gray } from '../../styles/colors'\n\ntype WordsItemProps = {\n    word: Word\n    removeWord: () => void\n}\n\nexport const WordsItem = (props: WordsItemProps) => (\n    <Container>\n        <div>\n            <Name>{props.word.name} - </Name>\n            <Translations>{props.word.translation.join(', ')}</Translations>\n\n            {props.word.action && 'Loading…'}\n            {!!props.word.example.length && (\n                <Examples>{props.word.example.join(', ')}</Examples>\n            )}\n        </div>\n\n        <RemoveButton onClick={props.removeWord}>✖</RemoveButton>\n    </Container>\n)\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    padding: 12px;\n    border-bottom: 1px solid ${light};\n`\n\nconst Name = styled.strong`\n    font-weight: normal;\n    font-size: 1.2em;\n`\n\nconst Translations = styled.span`\n    color: ${brand};\n    font-size: 1.2em;\n`\n\nconst Examples = styled.div`\n    color: ${gray};\n    font-size: 0.8em;\n    font-style: italic;\n`\n\nconst RemoveButton = styled.button`\n    border: none;\n    background: none;\n`\n","import React, { useState } from 'react'\nimport { FloatingButton } from '../../components/FloatingButton'\nimport { Header } from '../../components/Header'\nimport { Input } from '../../components/Input'\nimport { Modal } from '../../components/Modal'\nimport { Search } from '../../components/Search'\nimport { useDictionary } from '../../hooks/useDictionary'\nimport { DictionaryTrans } from '../../hooks/useDictionary/types'\nimport { useWords } from '../../store'\nimport { WordsItem } from './WordsItem'\nimport styled from 'styled-components'\nimport { light } from '../../styles/colors'\n\nexport const Words = () => {\n    const { words, addWord, removeWord } = useWords()\n    const [search, setSearch] = useState('')\n\n    const [showModal, setShowModal] = useState(false)\n    const [word, setWord] = useState('')\n    const [translation, setTranslation] = useState('')\n    const [example, setExample] = useState('')\n\n    const { results } = useDictionary(word)\n\n    const addNewWord = () => {\n        addWord(word.trim(), [translation], example ? [example] : [])\n        setWord('')\n        setTranslation('')\n        setExample('')\n    }\n\n    const getTrans = (trans: DictionaryTrans[]) => trans.map(t => t.texts[0]).join(', ')\n\n    return (\n        <div>\n            <Header title=\"Words\" iconName=\"words\">\n                <Search value={search} onChange={setSearch} />\n            </Header>\n            <div>\n                {words &&\n                    words\n                        .filter(word => word.name.includes(search))\n                        .map(word => (\n                            <WordsItem\n                                key={word.id}\n                                word={word}\n                                removeWord={() => removeWord(word.id)}\n                            />\n                        ))}\n            </div>\n            <FloatingButton onClick={() => setShowModal(!showModal)} iconName=\"plus\" />\n            <Modal\n                show={showModal}\n                footer={() => (\n                    <>\n                        <button onClick={() => setShowModal(false)}>Close</button>\n                        <button onClick={addNewWord}>Save</button>\n                    </>\n                )}\n                close={() => setShowModal(false)}\n            >\n                <div>\n                    <Input value={word} placeholder=\"Word\" onChange={setWord} />\n                </div>\n                {!translation && (\n                    <div>\n                        {results.map(item => (\n                            <AutocompleteItem\n                                key={item.id}\n                                onClick={() => {\n                                    setWord(item.word)\n                                    setTranslation(getTrans(item.trans))\n                                }}\n                            >\n                                <b>{item.word}</b> - {getTrans(item.trans)}\n                            </AutocompleteItem>\n                        ))}\n                    </div>\n                )}\n                <div>\n                    <Input\n                        value={translation}\n                        onChange={setTranslation}\n                        placeholder=\"Translation\"\n                    />\n                </div>\n                <div>\n                    <Input value={example} onChange={setExample} placeholder=\"Example\" />\n                </div>\n            </Modal>\n        </div>\n    )\n}\n\nconst AutocompleteItem = styled.button`\n    display: block;\n    width: 100%;\n    padding: 1em 0;\n    border: none;\n    border-bottom: 1px solid ${light};\n    text-align: left;\n    font-size: 14px;\n`\n","import React, { ElementType, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Nav, NAV_HEIGHT } from './components/Nav'\nimport { Game } from './screens/Game'\nimport { Home } from './screens/Home'\nimport { Settings } from './screens/Settings'\nimport { Words } from './screens/Words'\nimport { useRouter, useWordsPersist } from './store'\nimport { firebaseApp } from './store/firebase'\nimport { dispatch } from './store/state/store'\nimport { RouteName } from './store/types/RouteName'\n\nconst screens: Record<RouteName, ElementType> = {\n    [RouteName.Home]: Home,\n    [RouteName.Words]: Words,\n    [RouteName.Profile]: Settings,\n    [RouteName.Game]: Game,\n}\n\nexport const App = () => {\n    useWordsPersist()\n    const { route, setRoute } = useRouter()\n    const Page = screens[route]\n\n    useEffect(() => {\n        firebaseApp.auth().onAuthStateChanged(function(user) {\n            dispatch({\n                type: 'USER/CHANGE',\n                payload: user\n                    ? { email: user.email, id: user.uid, name: user.displayName }\n                    : null,\n            })\n        })\n    }, [])\n\n    return (\n        <>\n            <Content>\n                <Page />\n            </Content>\n            <NavContainer>\n                <Nav active={route} onChange={setRoute} />\n            </NavContainer>\n        </>\n    )\n}\n\nconst Content = styled.main`\n    height: calc(100% - ${NAV_HEIGHT}px);\n    position: relative;\n    width: 100%;\n    overflow-y: auto;\n`\n\nconst NavContainer = styled.div`\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    left: 0;\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import * as Sentry from '@sentry/browser'\nimport React, { Component, ErrorInfo } from 'react'\n\ntype ErrorBoundaryState = {\n    error: Error | null\n    eventId: string | null\n}\n\nexport class ErrorBoundary extends Component<{}, ErrorBoundaryState> {\n    public state = {\n        error: null,\n        eventId: null,\n    }\n\n    public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        this.setState({ error })\n\n        Sentry.withScope(scope => {\n            scope.setExtras(errorInfo)\n            this.setState({ eventId: Sentry.captureException(error) })\n        })\n    }\n\n    public render() {\n        if (this.state.error) {\n            return (\n                <div>\n                    <h1>Error occurred ;(</h1>\n                    <a onClick={this.handleReportDialog}>Report feedback</a>\n                    <pre>{JSON.stringify(this.state.error, null, 2)}</pre>\n                </div>\n            )\n        }\n\n        return this.props.children\n    }\n\n    private handleReportDialog = () => {\n        Sentry.showReportDialog({ eventId: this.state.eventId })\n    }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport * as Sentry from '@sentry/browser'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './styles/global.css'\nimport { GlobalStateProvider } from './store'\nimport { ErrorBoundary } from './components/ErrorBoundary'\n\nSentry.init({\n    dsn: 'https://adf49e52f07d479098537009eb0044b0@sentry.io/1446350',\n})\n\nrender(\n    <ErrorBoundary>\n        <GlobalStateProvider>\n            <App />\n        </GlobalStateProvider>\n    </ErrorBoundary>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { dispatch, useGlobalState } from './state/store'\nimport { useEffect, useState } from 'react'\nimport { firebaseApp } from './firebase'\nimport { Word, WordAction } from './state/types/State'\n\nexport const useWordsPersist = () => {\n    const [user] = useGlobalState('user')\n    const [localWords] = useGlobalState('words')\n\n    useEffect(() => {\n        // Waiting for user status…\n        if (user === undefined) return\n\n        // User is logged out\n        if (user === null) {\n            dispatch({ type: 'WORDS/SET', payload: [] })\n            return\n        }\n\n        // Listen on words updates\n        const unsubscribe = firebaseApp\n            .firestore()\n            .collection('users')\n            .doc(user.id)\n            .collection('words')\n            .onSnapshot(snapshot => {\n                const serverWords: Word[] = []\n\n                snapshot.forEach(doc => {\n                    const data = doc.data()\n                    serverWords.push({\n                        id: doc.id,\n                        name: data.name,\n                        translation: data.translation,\n                        example: data.example,\n                    })\n                })\n\n                dispatch({ type: 'WORDS/SET', payload: serverWords })\n            })\n\n        return unsubscribe\n    }, [user])\n\n    // This one react only when words are changed (action field in Word)\n    useEffect(() => {\n        if (!localWords) return\n\n        const wordToAdd = localWords.filter(w => w.action === WordAction.Add)\n        const wordToDelete = localWords.filter(w => w.action === WordAction.Delete)\n\n        if ((!wordToAdd && !wordToDelete) || !user) return\n\n        const wordsFirebaseRef = firebaseApp\n            .firestore()\n            .collection('users')\n            .doc(user.id)\n            .collection('words')\n\n        wordToAdd.forEach(word => {\n            const newWord: Word = { ...word }\n            // Very important one, without this we will have infinite loop :O\n            delete newWord.action\n            delete newWord.id // Also we can remove local ID\n\n            wordsFirebaseRef.add(newWord)\n        })\n\n        wordToDelete.forEach(word => {\n            wordsFirebaseRef.doc(word.id).delete()\n        })\n    }, [localWords, user])\n}\n"],"sourceRoot":""}